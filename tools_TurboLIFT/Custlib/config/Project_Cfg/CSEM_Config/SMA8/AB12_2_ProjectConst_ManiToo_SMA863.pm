package LIFT_PROJECT;

# use constant SPI_SENSOR_HG_X_CHANNEL => 0b010;
our @ISA = qw(Exporter);

our @EXPORT = qw(
  $Defaults
);

#CSEM CS and Mask configuration
my $SMA_Main_SPI_CS   = '00 10 00 04';
my $SMA_Plausi_SPI_CS = '00 10 00 10';
my $SMI_SPI_CS        = '00 10 00 08';
my $SMA_StandardMask  = 'FF C0 00 00';
my $SMI_StandardMask  = 'F8 00 00 00';

my $SMA_RD_MODE                = '40 00 00 00';
my $SMA_RD_DEVICE_ID           = '41 00 00 00';
my $SMA_RD_REVISION_ID         = '42 00 00 00';
my $SMA_RD_SID                 = '43 00 00 00';
my $SMA_RD_SPI_CONFIG          = '44 00 00 00';
my $SMA_RD_SENSOR_DATA_CH1     = '80 00 00 00';
my $SMA_RD_SENSOR_DATA_CH2     = '94 00 00 00';
my $SMA_RD_SENSOR_DATA_CH3     = '98 00 00 00';
my $SMA_RD_CAPTURE_DATA_CH3    = '98 00 00 00';
my $SMA_RD_CAPTURE_DATA_CH2    = '94 00 00 00';
my $SMA_RD_OFFSET_REG_CH1      = '49 00 00 00';
my $SMA_RD_OFFSET_REG_CH2      = '4A 00 00 00';
my $SMA_RD_OFFSET_REG_CH3      = '4B 00 00 00';
my $SMA_RD_OFFSET_CANCELLATION = '4C 00 00 00';
my $SMA_RD_CLOCK_COUNTER       = '4D 00 00 00';
my $SMA_RD_TEST_MODE           = '51 00 00 00';
my $SMA_RD_MONITOR_I_DATA      = '52 00 00 00';
my $SMA_RD_MONITOR_II_DATA     = '53 00 00 00';
my $SMA_RD_CONFIG_1            = '54 00 00 00';
my $SMA_RD_BITE_CH1_PH1        = '11 00 00 00';
my $SMA_RD_BITE_CH1_PH2        = '12 00 00 00';
my $SMA_RD_BITE_CH2_PH1        = '13 00 00 00';
my $SMA_RD_BITE_CH2_PH2        = '14 00 00 00';
my $SMA_RD_BITE_CH3_PH1        = '1A 00 00 00';
my $SMA_RD_BITE_CH3_PH2        = '1B 00 00 00';
my $SMA_RD_SERIAL1             = '00 00 00 00';
my $SMA_RD_SERIAL2             = '01 00 00 00';
my $SMA_RD_SERIAL3             = '02 00 00 00';
my $SMA_RD_RAW_OFFSET_CH1      = '17 00 00 00';
my $SMA_RD_RAW_OFFSET_CH2      = '18 00 00 00';
my $SMA_RD_RAW_OFFSET_CH3      = '1C 00 00 00';
my $AccXLgChl                  = '60 00 00 00';
my $RollRateLfChl              = 'E0 00 00 00';
my $AccYLgChl                  = '70 00 00 00';
my $AccYHgMonChl               = '78 00 00 00';
my $AccXHgMonChl               = '68 00 00 00';
my $YawRateLfChl               = '50 00 00 00';
my $AccZLgChl                  = 'F0 00 00 00';
my $PitchRateLfChl             = 'D0 00 00 00';

$Defaults->{'TEMP_OPTIONAL_FAULTS'} = [ 'rb_coa_VehSpdRxMsgTimeout_flt', ];

$Defaults->{'PARA_MAP_SMA8'}{'SERVICES'} = {
    #
    #  SERVICES
    #
    'enable_SMI_page_detection' => {
        'CMD_sequence' => {
            1.0 => { cmd => '71 - ' . $SMI_SPI_CS, descr => 'Enable SMI7 Page Detection' },
        },
    },

    'power_ON' => {
        'CMD_sequence' => {
            1.1 => { cmd => '80 - 00 01 00 01', descr => 'Power-ON' },
        },
    },
    'power_OFF' => {
        'CMD_sequence' => {
            1.1 => { cmd => '80 - 00 01 00 00', descr => 'Power-OFF' },
        },
    },
    'init' => {    # Init #ok
        'CMD_sequence' => {

            # get version
            1.1 => { cmd => '10', descr => 'Get Version' },

            # complete Reset of PS & PL
            2.1 => { cmd => '22', descr => 'Reset PS & PL' },

            # config_rti_trigger
            3.1 => { cmd => '51 - 00 00 00 01', descr => 'Set CS for Cobra_M' },
            3.2 => { cmd => '52 - FF C0 00 00', descr => 'Set SPI Mask for WD command' },
            3.3 => { cmd => '53 - 01 00 00 00', descr => 'Set SPI Pattern for WD command' },

            # config_spi_smi7
            4.1 => { cmd => '71 - 00 10 00 08', descr => 'Set CS for SMI7' },
        },
    },
    'start_manipulation' => {    # Start manipulation  ok
        'CMD_sequence' => {
            1.0 => { cmd => 'FA 00 00 00 01',   descr => 'debug via Extension port' },    #########################
            1.1 => { cmd => '20',               descr => 'Copy data to PL' },
            1.2 => { cmd => '21 - 00 00 00 01', descr => 'Start manipulation' },

        },
    },
    'stop_manipulation' => {                                                              # Stop manipulation ok
        'CMD_sequence' => {
            1.1 => { cmd => '21 - 00 00 00 00', descr => 'Stop manipulation' },
            1.2 => { cmd => '23',               descr => 'Partial Reset PS & PL' },
        },
    },
    'copy_data_to_PL' => {
        'CMD_sequence' => {
            1.0 => { cmd => '20', descr => 'Copy data to PL' },
        },
    },

};

$Defaults->{'PARA_MAP_SMA8'}{'TESTCASES'} = {

    #************************************************* RD_DEVICE_ID CRC,Data load,S bit check**************************************************************

    'Trigger_SMA_Main_SPI_CS' => {
        'CMD_sequence' => {
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'SPI_CS: SMA_Main_SPI_CS' },
        },
    },

    'Trigger_SMA_Plausi_SPI_CS' => {
        'CMD_sequence' => {
            0.1 => { cmd => '31 - 00 - ' . $SMA_Plausi_SPI_CS, descr => 'SPI_CS: SMA_Plausi_SPI_CS' },
        },
    },

    'Trigger_SMI_SPI_CS' => {
        'CMD_sequence' => {
            0.1 => { cmd => '31 - 00 - ' . $SMI_SPI_CS, descr => 'SPI_CS: SMI_SPI_CS' },
        },
    },

    'Trigger_SMA_Mask' => {
        'CMD_sequence' => {
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'Mask: SMA_StandardMask' },
        },
    },

    'Trigger_SMI_Mask' => {
        'CMD_sequence' => {
            0.2 => { cmd => '32 - 00 - ' . $SMI_StandardMask, descr => 'Mask: SMI_StandardMask' },
        },
    },

    'Trigger_YawRateLfChl' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $YawRateLfChl, descr => 'Pattern: YawRateLfChl' },
        },
    },

    'SMA_RD_MODE' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE, descr => 'Pattern: SMA_RD_MODE' },
        },
    },

    'SMA_RD_DEVICE_ID' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_DEVICE_ID, descr => 'Pattern: SMA_RD_DEVICE_ID' },
        },
    },

    'SMA_RD_REVISION_ID' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_REVISION_ID, descr => 'Pattern: SMA_RD_REVISION_ID' },
        },
    },

    'SMA_RD_SID' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SID, descr => 'Pattern: SMA_RD_SID' },
        },
    },

    'SMA_RD_SENSOR_DATA_CH1' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'Pattern: SMA_RD_SENSOR_DATA_CH1' },
        },
    },

    'SMA_RD_SENSOR_DATA_CH2' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH2, descr => 'Pattern: SMA_RD_SENSOR_DATA_CH2' },
        },
    },

    'SMA_RD_CAPTURE_DATA_CH2' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'Pattern: SMA_RD_CAPTURE_DATA_CH2' },
        },
    },

    'SMA_RD_OFFSET_REG_CH1' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'Pattern: SMA_RD_OFFSET_REG_CH1' },
        },
    },

    'SMA_RD_OFFSET_REG_CH2' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'Pattern: SMA_RD_OFFSET_REG_CH2' },
        },
    },

    'SMA_RD_OFFSET_CANCELLATION' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'Pattern: SMA_RD_OFFSET_CANCELLATION' },
        },
    },

    'SMA_RD_CLOCK_COUNTER' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'Pattern: SMA_RD_CLOCK_COUNTER' },
        },
    },

    'SMA_RD_TEST_MODE' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'Pattern: SMA_RD_TEST_MODE' },
        },
    },

    'SMA_RD_MONITOR_I_DATA' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'Pattern: SMA_RD_MONITOR_I_DATA' },
        },
    },

    'SMA_RD_MONITOR_II_DATA' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'Pattern: SMA_RD_MONITOR_II_DATA' },
        },
    },

    'SMA_RD_CONFIG_1' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1, descr => 'Pattern: SMA_RD_CONFIG_1' },
        },
    },

    'SMA_RD_BITE_CH1_PH1' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'Pattern: SMA_RD_BITE_CH1_PH1' },
        },
    },

    'SMA_RD_BITE_CH2_PH1' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'Pattern: SMA_RD_BITE_CH2_PH1' },
        },
    },

    'SMA_RD_SERIAL1' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL1, descr => 'Pattern: SMA_RD_SERIAL1' },
        },
    },

    'SMA_RD_SERIAL2' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL2, descr => 'Pattern: SMA_RD_SERIAL2' },
        },
    },

    'SMA_RD_SERIAL3' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL3, descr => 'Pattern: SMA_RD_SERIAL3' },
        },
    },

    'SMA_RD_RAW_OFFSET_CH1' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'Pattern: SMA_RD_RAW_OFFSET_CH1' },
        },
    },

    'SMA_RD_RAW_OFFSET_CH2' => {
        'CMD_sequence' => {
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'Pattern: SMA_RD_RAW_OFFSET_CH2' },
        },
    },

    'Mode_InitTest_1x' => {
        'CMD_sequence' => {
            0.4 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'Mode: Mode_InitTest_1x' },
        },
    },

    'Mode_InitTest_2x' => {
        'CMD_sequence' => {
            0.4 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'Mode: Mode_InitTest_2x' },
        },
    },

    'Mode_InitTest_3x' => {
        'CMD_sequence' => {
            0.4 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'Mode: Mode_InitTest_3x' },
        },
    },

    'Invert_CRC_Bit' => {
        'CMD_sequence' => {
            0.5 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'Ctrl: Invert_CRC_Bit' },
            0.6 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'Data: Invert_CRC_Bit' },
        },
    },

    'Invalid_RD_DEVICE_ID' => {
        'CMD_sequence' => {
            0.5 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'Ctrl: Invalid_RD_DEVICE_ID' },
            0.6 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'Data: Invalid_RD_DEVICE_ID' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_DEVICE_ID_DataLoad_3x' => {    # check Data of RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_DEVICE_ID, descr => 'module_0: Set Frame Pattern' },      # check Data of RD_DEVICE_ID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_DEVICE_ID_CRC_3x' => {                                                                       # check CRC of RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_DEVICE_ID, descr => 'module_0: Set Frame Pattern' },      # RD_DEVICE_ID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_DEVICE_ID_SBit_3x' => {                                                                      # check Sbit of RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                  # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_DEVICE_ID, descr => 'module_0: Set Frame Pattern' },      # RD_DEVICE_ID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_DEVICE_ID_DataLoad_2x' => {                                                                  # check Data of RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_DEVICE_ID, descr => 'module_0: Set Frame Pattern' },      # RD_DEVICE_ID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_DEVICE_ID_CRC_2x' => {                                                                       # check CRC of RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_DEVICE_ID, descr => 'module_0: Set Frame Pattern' },      # RD_DEVICE_ID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_DEVICE_ID_SBit_2x' => {                                                                      # check Sbit of RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                  # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_DEVICE_ID, descr => 'module_0: Set Frame Pattern' },      # RD_DEVICE_ID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #************************************************* RD_REVISION_ID CRC,S bit check**************************************************************
    #**************************************************************************************
    'Invalid_RD_REV_ID_CRC_3x' => {    # Check CRC of RD_REVISION_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,    descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,   descr => 'module_0: Set Frame Mask' },         # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_REVISION_ID, descr => 'module_0: Set Frame Pattern' },      # RD_REVISION_ID
                                                                                                               # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_REV_ID_Sbit_3x' => {                                                                           # Check Sbit of RD_REVISION_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                    # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_REVISION_ID, descr => 'module_0: Set Frame Pattern' },      # RD_REVISION_ID
                                                                                                               # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_REV_ID_CRC_2x' => {                                                                            # Check CRC of RD_REVISION_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,    descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,   descr => 'module_0: Set Frame Mask' },         # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_REVISION_ID, descr => 'module_0: Set Frame Pattern' },      # RD_REVISION_ID
                                                                                                               # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_REV_ID_Sbit_2x' => {                                                                           # Check Sbit of RD_REVISION_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                    # Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_REVISION_ID, descr => 'module_0: Set Frame Pattern' },      # RD_REVISION_ID
                                                                                                               # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #************************************************* RD_SPI_CONFIG CRC,Data load,S bit check**************************************************************
    #**************************************************************************************
    'Invalid_RD_SPI_CONFIG_CRC_3x' => {    # RD_SPI_CONFIG check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,   descr => 'module_0: Set SPI1 CS for SMA8' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,  descr => 'module_0: Set Frame Mask' },          #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SPI_CONFIG, descr => 'module_0: Set Frame Pattern' },       # RD_SPI_CONFIG
                                                                                                               # Configure FIFOs
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_SPI_CONFIG_Sbit_3x' => {                                                                       # RD_SPI_CONFIG check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA8' },      #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                    #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SPI_CONFIG, descr => 'module_0: Set Frame Pattern' },       # RD_SPI_CONFIG
                                                                                                               # Configure FIFOs
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_SPI_CONFIG_DataLoad_3x' => {                                                                   # RD_SPI_CONFIG check for the Invalid Data Load

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,   descr => 'module_0: Set SPI1 CS for SMA8' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,  descr => 'module_0: Set Frame Mask' },          #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SPI_CONFIG, descr => 'module_0: Set Frame Pattern' },       # RD_SPI_CONFIG
                                                                                                               # Configure FIFOs
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_SPI_CONFIG_CRC_2x' => {                                                                        # RD_SPI_CONFIG check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,   descr => 'module_0: Set SPI1 CS for SMA8' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,  descr => 'module_0: Set Frame Mask' },          #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SPI_CONFIG, descr => 'module_0: Set Frame Pattern' },       # RD_SPI_CONFIG
                                                                                                               # Configure FIFOs
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_SPI_CONFIG_Sbit_2x' => {                                                                       # RD_SPI_CONFIG check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA8' },      #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                    #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SPI_CONFIG, descr => 'module_0: Set Frame Pattern' },       # RD_SPI_CONFIG
                                                                                                               # Configure FIFOs
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************
    'Invalid_RD_SPI_CONFIG_DataLoad_2x' => {                                                                   # RD_SPI_CONFIG check for the Invalid Data Load

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,   descr => 'module_0: Set SPI1 CS for SMA8' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,  descr => 'module_0: Set Frame Mask' },          #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SPI_CONFIG, descr => 'module_0: Set Frame Pattern' },       # RD_SPI_CONFIG
                                                                                                               # Configure FIFOs
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #************************************************* RD_SERIAL CRC,S bit check**************************************************************
    #***************************************************************************************
    'Invalid_RDserialNo_1_CRC_Check_3x' => {    # RD_SERIAL_NO check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL1,   descr => 'module_0: Set Frame Pattern' },      #RD_SERIAL1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_2_CRC_3x' => {                                                                      # RD_SERIAL_NO check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL2,   descr => 'module_0: Set Frame Pattern' },      #RD_SERIAL2
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_3_CRC_3x' => {                                                                      # RD_SERIAL_NO check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL3,   descr => 'module_0: Set Frame Pattern' },      #RD_SERIAL3
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_1_Sbit_3x' => {                                                                     # RD_SERIAL_NO check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                  #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL1, descr => 'module_0: Set Frame Pattern' },        #RD_SERIAL1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_2_Sbit_3x' => {                                                                     # RD_SERIAL_NO check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                  #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL2, descr => 'module_0: Set Frame Pattern' },        #RD_SERIAL2
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_3_Sbit_3x' => {                                                                     # RD_SERIAL_NO check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                  #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL3, descr => 'module_0: Set Frame Pattern' },        #RD_SERIAL3
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_1_CRC_2x' => {                                                                      # RD_SERIAL_NO check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL1,   descr => 'module_0: Set Frame Pattern' },      #RD_SERIAL1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_2_CRC_2x' => {                                                                      # RD_SERIAL_NO check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL2,   descr => 'module_0: Set Frame Pattern' },      #RD_SERIAL2
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_3_CRC_2x' => {                                                                      # RD_SERIAL_NO check for the Invalid CRC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL3,   descr => 'module_0: Set Frame Pattern' },      #RD_SERIAL3
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 05', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_1_Sbit_2x' => {                                                                     # RD_SERIAL_NO check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                  #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL1, descr => 'module_0: Set Frame Pattern' },        #RD_SERIAL1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_2_Sbit_2x' => {                                                                     # RD_SERIAL_NO check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                  #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL2, descr => 'module_0: Set Frame Pattern' },        #RD_SERIAL2
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SERIALNo_3_Sbit_2x' => {                                                                     # RD_SERIAL_NO check for the Invalid Sbit

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                  #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL3, descr => 'module_0: Set Frame Pattern' },        #RD_SERIAL3
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #*****************************************************RD_Clock_Counter CRC, Dataload, S bit check***************************************

    #***************************************************************************************
    'Invalid_RDClkCntr_CRC_80ms' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 38 80', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ClkCntr_GS_80ms' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 38 80', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RDClkCntr_CRC_40ms' => {                                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'ClkCntr_CRC_BG_Check' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 12', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ClkCntr_GS_40ms' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'ClkCntr_GS_BG_Check' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 12', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RDClkCntr_DataLoad_80ms' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 38 80', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RDClkCntr_DataLoad_40ms' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 75 30', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'ClkCntr_DataLoad_BG_Check' => {                                                                             # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 12', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RDClkCntr_Sbit_INIT_MainSensor_80ms' => {                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 38 80', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RDClkCntr_Sbit_INIT_MainSensor_40ms' => {                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************RD_Config1 CRC, Dataload, S bit check**************************************************************
    #***************************************************************************************
    'Invalid_RD_CONFIG1_CRC_3x' => {    # check CRC of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_DataLoad_3x' => {                                                                    # check Data of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Sbit_3x' => {                                                                        # check Sbit of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                  #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1, descr => 'module_0: Set Frame Pattern' },       #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_CRC_2x' => {                                                                         # check CRC of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_DataLoad_2x' => {                                                                    # check Data of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Sbit_2x' => {                                                                        # check Sbit of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                  #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1, descr => 'module_0: Set Frame Pattern' },       #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_DCM_3x' => {                                                                         # check DCM of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_DCM_2x' => {                                                                         # check DCM of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_C_CUT_3x' => {                                                                       # check C_CUT of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_C_CUT_2x' => {                                                                       # check C_CUT of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Filtr_CH1_3x' => {                                                                   # check Filtr_CH1 of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 70', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Filtr_CH2_3x' => {                                                                   # check Filtr_CH2 of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 03 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Filtr_CH3_3x' => {                                                                   # check Filtr_CH3 of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 1C 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Filtr_CH1_2x' => {                                                                   # check Filtr_CH1 of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 70', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Filtr_CH2_2x' => {                                                                   # check Filtr_CH2 of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 03 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CONFIG1_Filtr_CH3_2x' => {                                                                   # check Filtr_CH3 of RD_CONFIG_1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_CONFIG_1
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 1C 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #************************************************************FOC INIT RD_Monitor_II CRC, Dataload, S bit check**************************************
    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_CRC_3x' => {    # check CRC during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_DataLoad_3x' => {                                                                     # check DataLoad during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_Sbit_3x' => {                                                                         # check Sbit during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_CRC_2x' => {                                                                          # check CRC during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_DataLoad_2x' => {                                                                     # check DataLoad during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_Sbit_2x' => {                                                                         # check Sbit during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_FOCCh1Busy_3x' => {                                                                   # check FOCCh1 during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 10 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_FOCCh1Busy_2x' => {                                                                   # check FOCCh1 during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 10 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_FOCCh2Busy_3x' => {                                                                   # check FOCCh2 during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_FOCCh2Busy_2x' => {                                                                   # check FOCCh2 during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_FOCCh3Busy_3x' => {                                                                   # check FOCCh3 during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCInit_RD_MON2_FOCCh3Busy_2x' => {                                                                   # check FOCCh3 during FOC INIT

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #************************************************************FOC Final RD_Monitor_II CRC, Dataload, S bit check**************************************
    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_CRC_3x' => {    # check CRC during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_DataLoad_3x' => {                                                                    # check DataLoad during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_Sbit_3x' => {                                                                        # check Sbit during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_CRC_2x' => {                                                                         # check CRC during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_DataLoad_2x' => {                                                                    # check DataLoad during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_Sbit_2x' => {                                                                        # check Sbit during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_FOCCh1Busy_3x' => {                                                                  # check FOCCh1 during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 10 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_FOCCh1Busy_2x' => {                                                                  # check FOCCh1 during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 10 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_FOCCh2Busy_3x' => {                                                                  # check FOCCh2 during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_FOCCh2Busy_2x' => {                                                                  # check FOCCh2 during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_FOCCh3Busy_3x' => {                                                                  # check FOCCh3 during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOCFinal_RD_MON2_FOCCh3Busy_2x' => {                                                                  # check FOCCh3 during FOC Final

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MON_DATA_II
                                                                                                                   #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 53 00 00 04',      descr => 'pretrigger_0: Set Frame Pattern' },            # RD_MON_DATA_II
            2.4 => { cmd => '64 - 00 - 00 00 03 E8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },
        },
    },

######################EOP CRC, GS, Sbit & Data Load check of RD_MON_I & RD_MON_II DATA
    #***************************************************************************************
    'Invalid_EOP_RD_MON2_CRC_3x' => {                                                                              # check CRC of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_Sbit_3x' => {                                                                             # check Sbit of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            3.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_EOP_3x' => {                                                                              # check EOP of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 10', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 10', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_GS_3x' => {                                                                               # check GS of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_DataLoad_3x' => {                                                                         # check DataLoad of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 0F FF E0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_CRC_3x' => {                                                                              # check CRC of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_I_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_Sbit_3x' => {                                                                             # check Sbit of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_I_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            3.2 => { cmd => '32 - 01 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_GS_3x' => {                                                                               # check GS of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_DataLoad_3x' => {                                                                         # check DataLoad of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 0F FF E0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_CRC_2x' => {                                                                              # check CRC of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_Sbit_2x' => {                                                                             # check Sbit of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            3.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_EOP_2x' => {                                                                              # check EOP of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 10', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 10', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_GS_2x' => {                                                                               # check GS of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON2_DataLoad_2x' => {                                                                         # check DataLoad of RD_MON_DATA_II during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_II_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 53 00 00 04', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_II_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_MONITOR_II_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 0F FF E0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_CRC_2x' => {                                                                              # check CRC of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_I_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_Sbit_2x' => {                                                                             # check Sbit of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_I_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            3.2 => { cmd => '32 - 01 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_GS_2x' => {                                                                               # check GS of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_EOP_RD_MON1_DataLoad_2x' => {                                                                         # check DataLoad of RD_MON_DATA_I during EOP

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure WR_EOP as 1st Pritrigger
            1.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            1.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },                 # WR_EOP
            1.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            1.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            # Configure RD_MONITOR_I_DATA as 2nd Pritrigger
            2.1 => { cmd => '61 - 01 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 01 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 01 - 52 00 00 0C', descr => 'pretrigger_0: Set Frame Pattern' },                 # RD_MONITOR_I_DATA
            2.4 => { cmd => '64 - 01 - 00 00 4E 20', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 01 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition
                                                                                                                   # Configure RD_MONITOR_II_DATA
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_MONITOR_I_DATA
                                                                                                                   # Configure FIFOs for SA1
            4.1 => { cmd => '41 - 01 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            4.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            4.3 => { cmd => '43 - 01 - 01 - 00 0F FF E0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE_OFF_CH1_Avg_check_3x' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #**********************************RD_Clock_Counter TFF,TST,PF, TF, EOP check********************
    #***************************************************************************************
    'Invalid_RD_CLK_TFF' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 ea 60', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_TST' => {                                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 ea 60', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_TF' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 ea 60', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 08 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 08 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_PF' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 ea 60', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_EOP' => {                                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 ea 60', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 20 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 20 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_GSbit' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_CRCFaultSteadyState_check' => {                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - 00 10 00 04', descr => 'module_0: Set SPI1 CS for SMA760' },              #CS
            1.2 => { cmd => '32 - 00 - FF C0 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - 80 00 00 00', descr => 'module_0: Set Frame Pattern' },                   #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 23 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_CRC' => {                                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 78', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    # # ***************************************************************************************
    # 'Invalid_RD_CLK_GSbit_MainSensor'  =>  { # check the Invalid RD_SERIAL_NO INIT Fault
    # # ***************************************************************************************
    # 'CMD_sequence' => {
    # # Configure SPI trigger for SA1
    # 1.1 => { cmd => '31 - 00 - '.$SMA_Main_SPI_CS, 		descr => 'module_0: Set SPI1 CS for SMA'}, #CS
    # 1.2 => { cmd => '32 - 00 - '.$SMA_StandardMask, 	descr => 'module_0: Set Frame Mask'} ,    #10 bits for instruction
    # 1.3 => { cmd => '33 - 00 - '.$SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern'} , #RD_SEN_DataCH1_SID
    # # Configure FIFOs for SA1
    # 3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
    # 3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
    # 3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
    # },
    # },

    #***************************************************************************************
    'Invalid_RD_CLK_Sbit' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                 #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' }, #RD_SEN_DataCH1_SID
                                                                                                            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_Dataload' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #*********************************Start FOC/Enable FOC RD_Offset_Cancellation CRC, Dataload, S bit Check*********************************************

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_CRC_3x' => {    # check CRC of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_DataLoad_3x' => {                                                                        # check Data of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_Sbit_3x' => {                                                                            # check Sbit of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                            #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       #Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_CRC_2x' => {                                                                             # check CRC of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_DataLoad_2x' => {                                                                        # check Data of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       #configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_Sbit_2x' => {                                                                            # check Sbit of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                            #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_OFFCH1_Failed_3x' => {                                                                   # check OFFCH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_OFFCH2_Failed_3x' => {                                                                   # check OFFCH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 06 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_OFFCH3_Failed_3x' => {                                                                   # check OFFCH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_OFFCH1_Failed_2x' => {                                                                   # check OFFCH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_OFFCH2_Failed_2x' => {                                                                   # check OFFCH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 06 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_OFFCH3_Failed_2x' => {                                                                   # check OFFCH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_FOCLengthCH1_Failed_3x' => {                                                             # check OC Length CH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 01 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_FOCLengthCH2_Failed_3x' => {                                                             # check OC Length CH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_FOCLengthCH3_Failed_3x' => {                                                             # check OC Length CH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 07 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_FOCLengthCH1_Failed_2x' => {                                                             # check OC Length CH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 01 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_FOCLengthCH2_Failed_2x' => {                                                             # check OC Length CH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_enable_FOCLengthCH3_Failed_2x' => {                                                             # check OC Length CH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 07 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_CRC_3x' => {                                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_DataLoad_3x' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_Sbit_3x' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_CRC_2x' => {                                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_DataLoad_2x' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_Sbit_2x' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_OFFCH1_Failed_3x' => {                                                                  # check OFFCH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_OFFCH2_Failed_3x' => {                                                                  # check OFFCH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_OFFCH3_Failed_3x' => {                                                                  # check OFFCH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_OFFCH1_Failed_2x' => {                                                                  # check OFFCH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_OFFCH2_Failed_2x' => {                                                                  # check OFFCH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_OFFCH3_Failed_2x' => {                                                                  # check OFFCH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_FOCLengthCH1_Failed_3x' => {                                                            # check OC Length CH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 01 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_FOCLengthCH2_Failed_3x' => {                                                            # check OC Length CH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_FOCLengthCH3_Failed_3x' => {                                                            # check OC Length CH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 07 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_FOCLengthCH1_Failed_2x' => {                                                            # check OC Length CH1 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 01 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_FOCLengthCH2_Failed_2x' => {                                                            # check OC Length CH2 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_disable_FOCLengthCH3_Failed_2x' => {                                                            # check OC Length CH3 of RD_OFFSET_CANCELLATION

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 80 31 8C',      descr => 'pretrigger_0: Set Frame Pattern' },                # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 07 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #*************************************Slow offset cancellation*******************
    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_CRC_3x' => {    # check CRC of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_Sbit_3x' => {                                                                       # check Sbit of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                            #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_CRC_2x' => {                                                                        # check CRC of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_Sbit_2x' => {                                                                       # check Sbit of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },               #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                            #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_CH1_3x' => {                                                                    # check OFF_CH1 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_CH2_3x' => {                                                                    # check OFF_CH2 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_CH3_3x' => {                                                                    # check OFF_CH3 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_CH1_2x' => {                                                                    # check OFF CH1 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_CH2_2x' => {                                                                    # check OFF CH2 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_CH3_2x' => {                                                                    # check OFF CH3 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_OC_CH1_3x' => {                                                                 # check OC OFF_CH1 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 01 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_OC_CH2_3x' => {                                                                 # check OC OFF_CH2 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_OC_CH3_3x' => {                                                                 # check OC OFF_CH3 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 07 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_OC_CH1_2x' => {                                                                 # check OC OFF_CH1 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 01 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_OC_CH2_2x' => {                                                                 # check OC OFF_CH2 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_slow_OffCan_enable_SOC_OC_CH3_2x' => {                                                                 # check OC OFF_CH3 of Slow Offset Cancellation

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_CANCELLATION
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 81 39 C0',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_OFFSET_CANCELLATION
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       #Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 07 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #*********************************RD_Test_Mode BITE1 Dataload, CRC, Sbit check**********************************

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CRC_3x' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CRC_2x' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CH1_Failed_3x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CH1_Failed_2x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CH2_Failed_3x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CH2_Failed_2x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CH3_Failed_3x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 03 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_CH3_Failed_2x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 03 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData1_CRC' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 03 0d 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_Sbit_3x' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },           #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE1_Sbit_2x' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #*********************************RD_Test_Mode BITE2 Dataload, CRC, Sbit check**********************************
    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CRC_3x' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CRC_2x' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CH1_Failed_3x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CH1_Failed_2x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CH2_Failed_3x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CH2_Failed_2x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CH3_Failed_3x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 03 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_CH3_Failed_2x' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 03 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_Sbit_3x' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITE2_Sbit_2x' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #*********************************RD_Test_Mode BITEOff Dataload, CRC, Sbit check**********************************
    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CRC_3x' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CRC_2x' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CH1_Failed_3x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CH1_Failed_2x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CH2_Failed_3x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CH2_Failed_2x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CH3_Failed_3x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 03 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_CH3_Failed_2x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 03 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_Sbit_3x' => {                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_TestMode_BITEOff_Sbit_2x' => {                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                        #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #******************************************Evaluation of BITE**********************************************************************

    #***************************************************************************************
    'Invalid_BITE1_CH1_Avg_Max' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH1_Avg_MaxPlus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },         #RD_BITE_CH1_PH2
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH1_Avg_MaxMinus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },         #RD_BITE_CH1_PH2
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH1_Avg_Min' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },         #RD_BITE_CH1_PH2
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH1_Avg_MinMinus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },         #RD_BITE_CH1_PH2
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH1_Avg_MinPlus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },         #RD_BITE_CH1_PH2
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH2_Avg_Max' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },         #SMA_RD_BITE_CH2_PH1
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH2_Avg_MaxPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH2_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH2_Avg_MaxMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH2_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH2_Avg_Min' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH2_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH2_Avg_MinMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH2_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH2_Avg_MinPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH2_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH3_Avg_Max' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH3_Avg_MaxPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH3_Avg_MaxMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH3_Avg_Min' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH3_Avg_MinMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_CH3_Avg_MinPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Avg_Max' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Avg_MaxPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Avg_MaxMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Avg_Min' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Avg_MinMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Avg_MinPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Avg_Max' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Avg_MaxPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Avg_MaxMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Avg_Min' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Avg_MinMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Avg_MinPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH3_Avg_Max' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH3_Avg_MaxPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH3_Avg_MaxMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 00 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH3_Avg_Min' => {                                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH3_Avg_MinMinus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH3_Avg_MinPlus1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH3_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH3_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0F 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Read_C_loss_RD_config_Tristate_3x_SMA760M' => {                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Empty Mask
            1.3 => { cmd => '33 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Pattern' },                      #Empty

            #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 34 80 04 0C',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 00 87',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Read_C_loss_RD_config_Tristate_2x_SMA760M' => {                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Empty Mask
            1.3 => { cmd => '33 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Pattern' },                      #Empty

            #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 34 80 04 0C',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 00 87',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Read_C_loss_RD_config_1_Tristate_3x_SMA760M' => {                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Empty Mask
            1.3 => { cmd => '33 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Pattern' },                      #Empty

            #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 34 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 D9 A8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Read_C_loss_RD_config_1_Tristate_2x_SMA760M' => {                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Empty Mask
            1.3 => { cmd => '33 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Pattern' },                      #Empty

            #Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 34 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 D9 A8',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Avg_Max' => {                                                                              # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Avg_MaxPlus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Avg_MaxMinus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Avg_Min' => {                                                                              # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Avg_MinMinus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Avg_MinPlus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Avg_Max' => {                                                                              # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Avg_MaxPlus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Avg_MaxMinus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Avg_Min' => {                                                                              # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Avg_MinMinus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Avg_MinPlus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Peak_Max' => {                                                                             # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Peak_MaxPlus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Peak_MaxMinus1' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Peak_Min' => {                                                                             # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Peak_MinMinus1' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH1_Peak_MinPlus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Peak_Max' => {                                                                             # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Peak_MaxPlus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Peak_MaxMinus1' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Peak_Min' => {                                                                             # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Peak_MinMinus1' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITEOFF_CH2_Peak_MinPlus1' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 51 80 00 10',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Peak_Max' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Peak_MaxPlus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Peak_MaxMinus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Peak_Min' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Peak_MinMinus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH1_Peak_MinPlus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH1_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },          #SMA_RD_BITE_CH1_PH1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Peak_Max' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Peak_MaxPlus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Peak_MaxMinus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Peak_Min' => {                                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Peak_MinMinus1' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE2_CH2_Peak_MinPlus1' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH2_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },          #RD_BITE_CH2_PH2
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 02 D0',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #********************************Initial RD_RAW_OFFSET CRC, Dataload, Sbit Check****************************
    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH1_CRC_3x' => {    # check CRC of RD_RAW_OFFSET_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH2_CRC_3x' => {                                                                         # check CRC of RD_RAW_OFFSET_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH3_CRC_3x' => {                                                                         # check CRC of RD_RAW_OFFSET_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH1_Sbit_3x' => {                                                                        # check Sbit of RD_RAW_OFFSET_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH2_Sbit_3x' => {                                                                        # check Sbit of RD_RAW_OFFSET_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH3_Sbit_3x' => {                                                                        # check Sbit of RD_RAW_OFFSET_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH1_CRC_2x' => {                                                                         # check CRC of RD_RAW_OFFSET_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH2_CRC_2x' => {                                                                         # check CRC of RD_RAW_OFFSET_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH3_CRC_2x' => {                                                                         # check CRC of RD_RAW_OFFSET_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH1_Sbit_2x' => {                                                                        # check Sbit of RD_RAW_OFFSET_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH2_Sbit_2x' => {                                                                        # check Sbit of RD_RAW_OFFSET_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH3_Sbit_2x' => {                                                                        # check Sbit of RD_RAW_OFFSET_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_RAW_OFFSET_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #********************************Corrected RD_OFFSET_REG CRC and Sbit Check****************************
    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH1_CRC_3x' => {    # check CRC of RD_OFFSET_REG_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH2_CRC_3x' => {                                                                       # check CRC of RD_OFFSET_REG_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH3_CRC_3x' => {                                                                       # check CRC of RD_OFFSET_REG_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH1_Sbit_3x' => {                                                                      # check Sbit of RD_OFFSET_REG_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH2_Sbit_3x' => {                                                                      # check Sbit of RD_OFFSET_REG_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH3_Sbit_3x' => {                                                                      # check Sbit of RD_OFFSET_REG_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH1_CRC_2x' => {                                                                       # check CRC of RD_OFFSET_REG_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH2_CRC_2x' => {                                                                       # check CRC of RD_OFFSET_REG_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH3_CRC_2x' => {                                                                       # check CRC of RD_OFFSET_REG_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH1_Sbit_2x' => {                                                                      # check Sbit of RD_OFFSET_REG_CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH2_Sbit_2x' => {                                                                      # check Sbit of RD_OFFSET_REG_CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH3_Sbit_2x' => {                                                                      # check Sbit of RD_OFFSET_REG_CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                       #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #********************************RD_BITE CH1, CH2 & CH3 CRC, Dataload, Sbit Check****************************
    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH1_CRC_3x' => {    # check CRC of RD_BITE_CH1_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH2_CRC_3x' => {                                                                       # check CRC of RD_BITE_CH1_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH1_CRC_3x' => {                                                                       # check CRC of RD_BITE_CH2_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH2_CRC_3x' => {                                                                       # check CRC of RD_BITE_CH2_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH1_CRC_3x' => {                                                                       # check CRC of RD_BITE_CH3_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH2_CRC_3x' => {                                                                       # check CRC of RD_BITE_CH3_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH1_Sbit_3x' => {                                                                      # check Sbit of RD_BITE_CH1_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH2_Sbit_3x' => {                                                                      # check Sbit of RD_BITE_CH1_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH1_Sbit_3x' => {                                                                      # check Sbit of RD_BITE_CH2_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH2_Sbit_3x' => {                                                                      # check Sbit of RD_BITE_CH2_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH1_Sbit_3x' => {                                                                      # check Sbit of RD_BITE_CH3_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH2_Sbit_3x' => {                                                                      # check Sbit of RD_BITE_CH3_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH1_CRC_2x' => {                                                                       # check CRC of RD_BITE_CH1_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH2_CRC_2x' => {                                                                       # check CRC of RD_BITE_CH1_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH1_CRC_2x' => {                                                                       # check CRC of RD_BITE_CH2_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH2_CRC_2x' => {                                                                       # check CRC of RD_BITE_CH2_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH1_CRC_2x' => {                                                                       # check CRC of RD_BITE_CH3_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH2_CRC_2x' => {                                                                       # check CRC of RD_BITE_CH3_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH1_Sbit_2x' => {                                                                      # check Sbit of RD_BITE_CH1_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH2_Sbit_2x' => {                                                                      # check Sbit of RD_BITE_CH1_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH1_Sbit_2x' => {                                                                      # check Sbit of RD_BITE_CH2_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH2_Sbit_2x' => {                                                                      # check Sbit of RD_BITE_CH2_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH1_Sbit_2x' => {                                                                      # check Sbit of RD_BITE_CH3_PH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH2_Sbit_2x' => {                                                                      # check Sbit of RD_BITE_CH3_PH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                     #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***********************************BITE CALCULATION****************************************************************
    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH2_POS_0LSB_chk' => {    # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH2_POS_100LSB_chk' => {                                                               # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH1_NEG_0LSB_chk' => {                                                                 # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH1_PH1_NEG_Neg100LSB_chk' => {                                                            # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 19 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH2_POS_0LSB_chk' => {                                                                 # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH2_POS_100LSB_chk' => {                                                               # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH1_NEG_0LSB_chk' => {                                                                 # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH2_PH1_NEG_Neg100LSB_chk' => {                                                            # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 19 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH2_POS_0LSB_chk' => {                                                                 # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH2_POS_100LSB_chk' => {                                                               # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH1_NEG_0LSB_chk' => {                                                                 # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_BITE_CH3_PH1_NEG_Neg100LSB_chk' => {                                                            # check AVG and Peak Limits of BITE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH3_PH1, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH3_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 1F F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 19 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #********************************RD_Monitor_II CRC, Dataload, Sbit Check****************************
    #***************************************************************************************
    'Invalid_MonData2_TFF' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Mask' },                 #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },    #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData1_TFF' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - 00 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },     #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData2_TST' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - 80 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },    #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData1_TST' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - 80 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },     #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData2_TF' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },    #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 08 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 08 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData1_TF' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },     #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 08 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 08 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData2_PF' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - F8 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },    #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData1_PF' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - F8 00 00 00', descr => 'module_0: Set Frame Mask' },                      #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },     #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData2_GS' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },             #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                  # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 58 80 00 2C', descr => 'pretrigger_0: Set Frame Pattern' },               # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 0F 42 40', descr => 'pretrigger_0: Pre-Trigger active for 1s' },       # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 03', descr => 'module_0: Trigger only by pre trigger 1' },       # Trigger condition

            # Configure SPI trigger for SA1
            4.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            4.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            4.3 => { cmd => '33 - 01 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure Pre-Trigger
            5.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },         #CS
            5.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },              # make Instruction bits as 1
            5.3 => { cmd => '63 - 01 - 52 00 00 0C',      descr => 'pretrigger_0: Set Frame Pattern' },           # Read Sensor Data channel 1 bits
            5.4 => { cmd => '64 - 01 - 00 00 75 30',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },   # Pre-Trigger time
            5.5 => { cmd => '65 - 01 - 00 00 00 03',      descr => 'module_0: Trigger only by pre trigger 1' },   # Trigger condition
                                                                                                                  # Configure FIFOs for SA1
            6.1 => { cmd => '41 - 01 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },

            # 6.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            # 6.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
            6.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            6.3 => { cmd => '43 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Invalid_MonData1_GS' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_I_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************Prog SID CRC, S bit & SID check *****************
    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh1_SID_3x' => {    # check SID CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },            # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 3C', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh2_SID_3x' => {                                                                #  check SID CH2 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 3C', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh3_SID_3x' => {                                                                 #  check SID CH3 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 3C', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh1_CRC_3x' => {                                                                 # check CRC CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh2_CRC_3x' => {                                                                 #  check CRC CH2 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh3_CRC_3x' => {                                                                 #  check CRC CH3 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh1_Sbit_3x' => {                                                                # check Sbit CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh2_Sbit_3x' => {                                                                #  check Sbit CH2 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh3_Sbit_3x' => {                                                                #  check Sbit CH3 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh1_SID_2x' => {                                                                 # check SID CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh2_SID_2x' => {                                                                 #  check SID CH2 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh3_SID_2x' => {                                                                 #  check SID CH3 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh1_CRC_2x' => {                                                                 # check CRC CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh2_CRC_2x' => {                                                                 #  check CRC CH2 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh3_CRC_2x' => {                                                                 #  check CRC CH3 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #MASK
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh1_Sbit_2x' => {                                                                # check Sbit CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SENSOR_DATA_CH1
                                                                                                                    # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh2_Sbit_2x' => {                                                                #  check Sbit CH2 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Prog_SID_RD_SensorDataCh3_Sbit_2x' => {                                                                #  check Sbit CH3 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                         #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8C 00 2C',      descr => 'pretrigger_0: Set Frame Pattern' },             # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************Fault information *************************

    #***************************************************************************************
    'Invalid_Group1_fault_3x' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group1_fault_2x' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CONFIG_1,  descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group2_fault_3x' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group2_fault_2x' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,            descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,           descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_CANCELLATION, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group3_fault_3x' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },              #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },                   #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },                #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group3_fault_2x' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },              #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },                   #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_TEST_MODE, descr => 'module_0: Set Frame Pattern' },                #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group4_fault_3x' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },              #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },           #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group5_fault_3x' => {                                                                                     # check CRC CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },             #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },          #RD_SENSOR_DATA_CH1
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8F 84 10',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group5_fault_2x' => {                                                                                     # check CRC CH1 of Prog SID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },             #Mask
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },          #RD_SENSOR_DATA_CH1
                                                                                                                       # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },              #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00',      descr => 'pretrigger_0: Set Frame Mask' },                   # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 43 8F 84 10',      descr => 'pretrigger_0: Set Frame Pattern' },                # WR_SID
            2.4 => { cmd => '64 - 00 - 00 00 27 10',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },        # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },        # Trigger condition
                                                                                                                       # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Group4_fault_2x' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },         #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },              #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },           #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Cyclic_fault_3x' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },         #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_Cyclic_fault_2x' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },          #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },               #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },            #RD_SEN_DataCH1_SID
                                                                                                                       # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #*****************************STORE INITIAL VALUE***************
    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH1_Dataload_0LSB' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH1_Dataload_3200LSB' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 03 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH1_Dataload_Neg3200LSB' => {                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0C E0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH2_Dataload_0LSB' => {                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH2_Dataload_3200LSB' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 03 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH2_Dataload_Neg3200LSB' => {                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0C E0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH3_Dataload_0LSB' => {                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH3_Dataload_3200LSB' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 03 20 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_RAWOffsetCH3_Dataload_Neg3200LSB' => {                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_RAW_OFFSET_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0C E0 00', descr => 'module_0: Write FIFO data' },
        },
    },

##*******************************Corrected offset Value check
    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH1_Dataload_0LSB' => {                                                                # check Corrected Offset Value of CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH1_Dataload_3200LSB' => {                                                             # check Corrected Offset Value of CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 C8 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH1_Dataload_Neg3200LSB' => {                                                          # check Corrected Offset Value of CH1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH1
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH2_Dataload_0LSB' => {                                                                # check Corrected Offset Value of CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH2_Dataload_3200LSB' => {                                                             # check Corrected Offset Value of CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 C8 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH2_Dataload_Neg3200LSB' => {                                                          # check Corrected Offset Value of CH2

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH2
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH3_Dataload_0LSB' => {                                                                # check Corrected Offset Value of CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH3_Dataload_3200LSB' => {                                                             # check Corrected Offset Value of CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 C8 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OFFSET_REG_CH3_Dataload_Neg3200LSB' => {                                                          # check Corrected Offset Value of CH3

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_OFFSET_REG_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_OFFSET_REG_CH3
                                                                                                                  # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 01', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F 38 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***********************************VoltageMode****************************************
    #***************************************************************************************
    'Invalid_ReadVgMode_CRC_3x' => {    # check CRC of RD_MODE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },      #RD_MODE
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_DataLoad_3x' => {                                                                    # check Data of RD_MODE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },      #RD_MODE
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_Sbit_3x' => {                                                                        # check Sbit of RD_MODE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },      #RD_MODE
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_CRC_2x' => {                                                                         # check CRC of RD_MODE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },      #RD_MODE
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_DataLoad_2x' => {                                                                    # check Data of RD_MODE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },      #RD_MODE
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_Sbit_2x' => {                                                                        # check Sbit of RD_MODE

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - FC 00 00 00', descr => 'module_0: Set Frame Mask' },                  #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE, descr => 'module_0: Set Frame Pattern' },           #RD_MODE
                                                                                                             # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_DataLoad_communication_flag_CH2_M' => {                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_DataLoad_communication_flag_CH3_M' => {                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_DataLoad_communication_flag_CH1_M' => {                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_CH2_CRC' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_CH3_CRC' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_CH1_CRC' => {                                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_CH2_DataLoad_SMA760' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            # 2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA'}, #CS
            # 2.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask'} ,    # make Instruction bits as 1
            # 2.3 => { cmd => '63 - 00 - 2C 80 31 F4', descr => 'pretrigger_0: Set Frame Pattern'} , # Read Sensor Data channel 1 bits
            # 2.4 => { cmd => '64 - 00 - 00 00 7D 00', descr => 'pretrigger_0: Pre-Trigger active for 1s' }, # Pre-Trigger time
            # 2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' }, # Trigger condition
            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 1D 4C', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FD 30', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 FD 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_CH1_DataLoad_SMA760' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure Pre-Trigger
            # 2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA'}, #CS
            # 2.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask'} ,    # make Instruction bits as 1
            # 2.3 => { cmd => '63 - 00 - 51 80 05 20', descr => 'pretrigger_0: Set Frame Pattern'} , # Read Sensor Data channel 1 bits
            # 2.4 => { cmd => '64 - 00 - 00 00 7D 00', descr => 'pretrigger_0: Pre-Trigger active for 1s' }, # Pre-Trigger time
            # 2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' }, # Trigger condition
            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 05 40', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_CRC_CH1_FaultSteadyState_check' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 23 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_CRC_CH2_FaultSteadyState_check' => {                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 23 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_CRC_CH3_FaultSteadyState_check' => {                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 23 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_CH1_DataLoad_SMA760' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS-------------
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #0 bits As there is no Instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      # Read voltage Mode RD_MODE
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_CH2_DataLoad_SMA760' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS-------------
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #0 bits As there is no Instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read voltage Mode RD_MODE
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MonData2_CRC' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 03 0d 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_GS' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS-------------
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #0 bits As there is no Instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      # Read voltage Mode RD_MODE
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 ea 60', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_Dataload_0_5ms' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS-------------
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #0 bits As there is no Instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      # Read voltage Mode RD_MODE
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 f4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_GS_0_5ms' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS-------------
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #0 bits As there is no Instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      # Read voltage Mode RD_MODE
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 f4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MainSensor_GSbit_3x' => {                                                                           # check GS Bit During Serial 1

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SERIAL1,   descr => 'module_0: Set Frame Pattern' },          #RD_SEN_DataCH1_SID
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MainSensor_ReadMode_GSbit_3x' => {                                                                  # check GS bit During Soft Reset

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_Mode
                                                                                                                 # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },        #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },             # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 40 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },          # Read RD_Mode
            2.4 => { cmd => '64 - 00 - 00 00 3A 98',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },  # 15ms
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },  # Trigger condition
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_MainSensor_ReadMode_GSbit_2x' => {                                                                  # check GS bit During Soft Reset

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_Mode
                                                                                                                 # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },        #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },             # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 40 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },          # Read Mode
            2.4 => { cmd => '64 - 00 - 00 00 3A 98',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },  # 15ms
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },  # Trigger condition
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_CRC_afterRst_3x' => {                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_MODE
                                                                                                                 # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },        #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },             # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 40 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },          # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 3A 98',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },  # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },  # Trigger condition
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_CRC_afterRst_2x' => {                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_MODE
                                                                                                                 # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },        #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },             # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 40 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },          # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 3A 98',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },  # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },  # Trigger condition
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_Dataload_afterRst_2x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_MODE
                                                                                                                 # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },        #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },             # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 40 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },          # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 3A 98',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },  # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },  # Trigger condition
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #**************************************************************************************************
    'Invalid_ReadMode1_Dataload_afterRst_2x' => {                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #*****************************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_MODE

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },             #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                  # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 57 80 15 AC', descr => 'pretrigger_0: Set Frame Pattern' },               # WR_SOFT_RESET
            2.4 => { cmd => '64 - 00 - 00 00 00 0F', descr => 'pretrigger_0: Pre-Trigger active for 1s' },       # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },       # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 02', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - FF F0 00 0F', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadVgMode_Dataload_afterRst_3x' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_MODE
                                                                                                                 # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },        #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },             # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 40 00 00 00',      descr => 'pretrigger_0: Set Frame Pattern' },          # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 3A 98',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },  # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },  # Trigger condition
                                                                                                                 # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 00 F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadMode1_Dataload_afterRst_3x' => {                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,  descr => 'module_0: Set SPI1 CS for SMA' },        #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask, descr => 'module_0: Set Frame Mask' },             #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MODE,      descr => 'module_0: Set Frame Pattern' },          #RD_MODE

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },             #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF', descr => 'pretrigger_0: Set Frame Mask' },                  # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 57 80 15 AC', descr => 'pretrigger_0: Set Frame Pattern' },               # WR_SOFT_RESET
            2.4 => { cmd => '64 - 00 - 00 00 00 0F', descr => 'pretrigger_0: Pre-Trigger active for 1s' },       # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },       # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - FF FF FF FF', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - FF FF 0F FF', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenCH1_FOC_check_Avg_100M' => {                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                   # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 2C 80 31 9C',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 7D 00',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 05 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenCH2_FOC_check_Avg_100M' => {                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure Pre-Trigger
            2.1 => { cmd => '61 - 00 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            2.2 => { cmd => '62 - 00 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 2C 80 31 9C',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 00 7D 00',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 05 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_CRC_Flt_DataVerify' => {                                                              # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_CRC_Flt_DataVerify' => {                                                              # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_CRC_Flt_DataVerify' => {                                                              # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_Dataload_Flt_DataVerify' => {                                                         # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_Dataload_Flt_DataVerify' => {                                                         # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_GS_Flt_DataVerify' => {                                                               # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_GS_Flt_DataVerify' => {                                                               # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_GS_Flt_DataVerify' => {                                                               # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_SID_Flt_DataVerify' => {                                                              # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 f0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_SID_Flt_DataVerify' => {                                                              # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 f0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_SID_Flt_DataVerify' => {                                                              # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 f0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenData_CRC_30_DataVerify' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 1E', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenData_CRC_40_DataVerify' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 28', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenData_CRC_55_DataVerify' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 37', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClk_CRC_Flt_DataVerify' => {                                                                       # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClk_Dataload_Flt_DataVerify' => {                                                                  # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClk_GS_Flt_DataVerify' => {                                                                        # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH1_1ms_M' => {                                                                    # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 03 E8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH2_1ms_M' => {                                                                    # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 03 E8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH3_1ms_M' => {                                                                    # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 03 E8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_DistFlt_1ms_M' => {                                                                             # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 03 E8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH1_30ms_M' => {                                                                   # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 75 30', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH2_30ms_M' => {                                                                   # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 75 30', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH3_30ms_M' => {                                                                   # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 75 30', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_DistFlt_30msM' => {                                                                             # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 75 30', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH1_25ms_M' => {                                                                   # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 61 A8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH2_25ms_M' => {                                                                   # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 61 A8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_Data_DistFlt_CH3_25ms_M' => {                                                                   # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 61 A8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_DistFlt_25msM' => {                                                                             # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 61 A8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_GS_Flt_check_60ms_M' => {                                                                  # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 EA 60', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_Dataload_60ms_M' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 EA 60', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_CRC_60ms_M' => {                                                                           # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 EA 60', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_GS_61ms_M' => {                                                                            # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 EE 48', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_Dataload_61ms_M' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 EE 48', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_ReadClkCntr_CRC_61ms_M' => {                                                                        # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 EE 48', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_GS_90ms_M' => {                                                                            # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_Dataload_90ms_M' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_CRC_90ms_M' => {                                                                           # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_GS_91ms_M' => {                                                                            # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 63 78', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_Dataload_91ms_M' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 63 78', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_CRC_91ms_M' => {                                                                           # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 63 78', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_GS_59ms_M' => {                                                                            # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 E6 78', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_Dataload_59ms_M' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 E6 78', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_CRC_59ms_M' => {                                                                           # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 E6 78', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_GS_89ms_M' => {                                                                            # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5B A8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_Dataload_89ms_M' => {                                                                      # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5B A8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF F0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadClkCntr_CRC_89ms_M' => {                                                                           # check for the Invalid CRC Read Device ID RD_DEVICE_ID

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },       #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },         # Read Device ID RD_DEVICE_ID Instruction bits# Configure FIFOs for SA1
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5B A8', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SEN_FlushTime' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set Frame Mask' },         #0 bits As there is no Instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set Frame Pattern' },      # Read voltage Mode RD_MODE
                                                                                                                 # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 F4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 FF C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_GS_40ms' => {                                                                       # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_GS_40ms' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_Zeros_Check' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_Zeros_Check' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_Zeros_Check' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 30', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_SID_40ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 f0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_SID_40ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 f0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_SID_40ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 f0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_CRC_40ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_GS_40ms' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_SID_90ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 FF DD 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_SID_90ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 F0 23 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenDataCH1_TFF' => {                                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenDataCH2_TFF' => {                                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH2, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenDataCH3_TFF' => {                                                                                 # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH3, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 80 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenDataCH1_PF' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenDataCH2_PF' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH2, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RdSenDataCH3_PF' => {                                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH3, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 04 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_GS_90ms' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F DD 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_GS_90ms' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 23 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_CRC_90ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 0F DD 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_CRC_90ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 23 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_Sbit_90ms' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - F4 00 00 00', descr => 'module_0: Set Frame Mask' },                         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5f 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_GS_Distcheck' => {                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 F4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_GS_Distcheck' => {                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 F4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_SID_Distcheck' => {                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 F4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_SID_Distcheck' => {                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 F4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_CRC_Distcheck' => {                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 F4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_CRC_Distcheck' => {                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 F4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH2_CRC_40ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH3_CRC_40ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_SID_90ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 F0 23 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_GS_90ms' => {                                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 23 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_CRC_90ms' => {                                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 23 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_Sbit_90ms' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS, descr => 'module_0: Set SPI1 CS for SMA' },            #CS
            1.2 => { cmd => '32 - 00 - F0 00 00 00', descr => 'module_0: Set Frame Mask' },                         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 02 00 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_GS_Distcheck' => {                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 f4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 08', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_SID_Distcheck' => {                                                                    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 f4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 01 F0 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Auxillary_DebugDataCheck_InitFault_M' => {                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 30 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Auxillary_DebugDataCheck_CyclicFault_M' => {                                                                   # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            0.4 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            0.5 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            0.6 => { cmd => '43 - 00 - 01 - 00 00 30 00', descr => 'module_0: Write FIFO data' },

            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 01 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_MONITOR_II_DATA_M' => {                                                                             # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            0.4 => { cmd => '41 - 00 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            0.5 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            0.6 => { cmd => '43 - 00 - 01 - 00 00 30 00', descr => 'module_0: Write FIFO data' },

            1.7 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.8 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.9 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            1.10 => { cmd => '41 - 01 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            1.11 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            1.12 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Invalid_RD_MONITOR_II_DATA_M_1' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {
            2.1 => { cmd => '31 - 02 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            2.2 => { cmd => '32 - 02 - ' . $$SMA_StandardMask,      descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            2.3 => { cmd => '33 - 02 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            2.4 => { cmd => '41 - 02 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            2.5 => { cmd => '42 - 02 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.6 => { cmd => '43 - 02 - 01 - 00 00 03 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Auxillary_DebugData_FltFlag_CyclicFault_M' => {                                                                # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID
                                                                                                                    # Configure FIFOs for SA1
            0.4 => { cmd => '41 - 00 - 01 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            0.5 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            0.6 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_Min_M' => {                                                                                     # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set SPI Pattern for command  ' },

            # 0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },
            #--------------#cycle1------------------
            0.4 => {
                cmd =>
'41 - 00 - 7C - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01',
                descr => 'Mode: Mode_InitTest_2x'
            },

            0.5 => {
                cmd =>
'42 - 00 - 7C - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0',
                descr => 'Ctrl: Set_CI_Bit_2x'
            },
            0.6 => {
                cmd =>
'43 - 00 - 7C - 00 00 36 10 - 00 00 76 C0 - 00 00 B7 70 - 00 00 f8 20 - 00 01 38 D0 - 00 01 79 80 - 00 01 BA 30 - 00 01 FA E0 - 00 02 3B 90 - 00 02 7C 40 - 00 02 BC F0 - 00 02 FD A0 - 00 03 3E 50 - 00 03 7F 00 - 00 03 BF B0 - 00 04 00 60 - 00 04 41 10 - 00 04 81 C0 - 00 04 C2 70 - 00 05 03 20 - 00 05 43 D0 - 00 05 84 80 - 00 05 C5 30 - 00 06 05 E0 - 00 01 38 D0 - 00 06 46 90 - 00 06 87 40 - 00 06 C7 F0 - 00 07 08 A0 - 00 07 49 50 - 00 07 8A 00 - 00 07 CA B0 - 00 08 0B 60 - 00 08 4C 10 - 00 08 8C C0 - 00 08 CD 70 - 00 09 0E 20 - 00 09 4E D0 - 00 09 8F 80 - 00 09 D0 30 - 00 0A 10 E0 - 00 0A 51 90 - 00 0A 92 40 - 00 0A D2 F0 - 00 0B 13 A0 - 00 0B 54 50 - 00 0B 95 00 - 00 0B D5 B0 - 00 0C 16 60 - 00 0C 57 10 - 00 0C 97 C0 - 00 0C D8 70 - 00 0D 19 20 - 00 0D 59 D0 - 00 0D 9A 80 - 00 0D DB 30 - 00 0E 1B E0 - 00 0E 5C 90 - 00 0E 9D 40 - 00 0E DD F0 - 00 0F 1E A0 - 00 0F 5F 50 - 00 0F A0 00 - 00 00 36 10 - 00 00 76 C0 - 00 00 B7 70 - 00 00 f8 20 - 00 01 38 D0 - 00 01 79 80 - 00 01 BA 30 - 00 01 FA E0 - 00 02 3B 90 - 00 02 7C 40 - 00 02 BC F0 - 00 02 FD A0 - 00 03 3E 50 - 00 03 7F 00 - 00 03 BF B0 - 00 04 00 60 - 00 04 41 10 - 00 04 81 C0 - 00 04 C2 70 - 00 05 03 20 - 00 05 43 D0 - 00 05 84 80 - 00 05 C5 30 - 00 06 05 E0 - 00 01 38 D0 - 00 06 46 90 - 00 06 87 40 - 00 06 C7 F0 - 00 07 08 A0 - 00 07 49 50 - 00 07 8A 00 - 00 07 CA B0 - 00 08 0B 60 - 00 08 4C 10 - 00 08 8C C0 - 00 08 CD 70 - 00 09 0E 20 - 00 09 4E D0 - 00 09 8F 80 - 00 09 D0 30 - 00 0A 10 E0 - 00 0A 51 90 - 00 0A 92 40 - 00 0A D2 F0 - 00 0B 13 A0 - 00 0B 54 50 - 00 0B 95 00 - 00 0B D5 B0 - 00 0C 16 60 - 00 0C 57 10 - 00 0C 97 C0 - 00 0C D8 70 - 00 0D 19 20 - 00 0D 59 D0 - 00 0D 9A 80 - 00 0D DB 30 - 00 0E 1B E0 - 00 0E 5C 90 - 00 0E 9D 40 - 00 0E DD F0 - 00 0F 1E A0 - 00 0F 5F 50 - 00 0F A0 00',
                descr => 'Data: Set_CI_Bit_2x'
            },

        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_MaxMinus1_M' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set SPI Pattern for command  ' },

            # 0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },
            #--------------#cycle1------------------
            0.4 => {
                cmd =>
'41 - 00 - 96 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01',
                descr => 'Mode: Mode_InitTest_2x'
            },
            - - -0.5 => {
                cmd =>
'42 - 00 - 96 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0',
                descr => 'Ctrl: Set_CI_Bit_2x'
            },
            0.6 => {
                cmd =>
'43 - 00 - 96 - 00 00 20 20 - 00 00 6C 00 - 00 00 B7 E0 - 00 01 03 C0 - 00 01 4F A0 - 00 01 9B 80 - 00 01 E7 60 - 00 02 33 40 - 00 02 7F 20 - 00 02 CB 00 - 00 03 16 E0 - 00 03 62 C0 - 00 03 AE A0 - 00 03 FA 80 - 00 04 46 60 - 00 04 92 40 - 00 04 DE 20 - 00 05 2A 00 - 00 05 75 E0 - 00 05 C1 C0 - 00 06 0D A0 - 00 06 59 80 - 00 06 A5 60 - 00 06 F1 40 - 00 07 3D 20 - 00 07 89 00 - 00 07 D4 E0 - 00 08 20 C0 - 00 08 6C A0 - 00 08 B8 80 - 00 09 04 60 - 00 09 50 40 - 00 08 12 80 - 00 09 9C 20 - 00 09 E8 00 - 00 0A 33 E0 - 00 0A 7F C0 - 00 0A CB A0 - 00 0B 17 80 - 00 0B 63 60 - 00 0B AF 40 - 00 0B FB 20 - 00 0C 47 00 - 00 0C 92 E0 - 00 0C DE C0 - 00 0D 2A A0 - 00 0D 76 80 - 00 0D C2 60 - 00 0E 0E 40 - 00 0E 5A 20 - 00 0E A6 00 - 00 00 20 20 - 00 00 6C 00 - 00 00 B7 E0 - 00 01 03 C0 - 00 01 4F A0 - 00 01 9B 80 - 00 01 E7 60 - 00 02 33 40 - 00 02 7F 20 - 00 02 CB 00 - 00 03 16 E0 - 00 03 62 C0 - 00 03 AE A0 - 00 03 FA 80 - 00 04 46 60 - 00 04 92 40 - 00 04 DE 20 - 00 05 2A 00 - 00 05 75 E0 - 00 05 C1 C0 - 00 06 0D A0 - 00 06 59 80 - 00 06 A5 60 - 00 06 F1 40 - 00 07 3D 20 - 00 07 89 00 - 00 07 D4 E0 - 00 08 20 C0 - 00 08 6C A0 - 00 08 B8 80 - 00 09 04 60 - 00 09 50 40 - 00 08 12 80 - 00 09 9C 20 - 00 09 E8 00 - 00 0A 33 E0 - 00 0A 7F C0 - 00 0A CB A0 - 00 0B 17 80 - 00 0B 63 60 - 00 0B AF 40 - 00 0B FB 20 - 00 0C 47 00 - 00 0C 92 E0 - 00 0C DE C0 - 00 0D 2A A0 - 00 0D 76 80 - 00 0D C2 60 - 00 0E 0E 40 - 00 0E 5A 20 - 00 0E A6 00 - 00 00 20 20 - 00 00 6C 00 - 00 00 B7 E0 - 00 01 03 C0 - 00 01 4F A0 - 00 01 9B 80 - 00 01 E7 60 - 00 02 33 40 - 00 02 7F 20 - 00 02 CB 00 - 00 03 16 E0 - 00 03 62 C0 - 00 03 AE A0 - 00 03 FA 80 - 00 04 46 60 - 00 04 92 40 - 00 04 DE 20 - 00 05 2A 00 - 00 05 75 E0 - 00 05 C1 C0 - 00 06 0D A0 - 00 06 59 80 - 00 06 A5 60 - 00 06 F1 40 - 00 07 3D 20 - 00 07 89 00 - 00 07 D4 E0 - 00 08 20 C0 - 00 08 6C A0 - 00 08 B8 80 - 00 09 04 60 - 00 09 50 40 - 00 08 12 80 - 00 09 9C 20 - 00 09 E8 00 - 00 0A 33 E0 - 00 0A 7F C0 - 00 0A CB A0 - 00 0B 17 80 - 00 0B 63 60 - 00 0B AF 40 - 00 0B FB 20 - 00 0C 47 00 - 00 0C 92 E0 - 00 0C DE C0 - 00 0D 2A A0 - 00 0D 76 80 - 00 0D C2 60 - 00 0E 0E 40 - 00 0E 5A 20 - 00 0E A6 00',
                descr => 'Data: Set_CI_Bit_2x'
            },

        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_MinMinus1_M' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set SPI Pattern for command  ' },

            # 0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },
            #--------------#cycle1------------------
            0.4 => {
                cmd =>
'41 - 00 - BA - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01',
                descr => 'Mode: Mode_InitTest_2x'
            },
            - - - - -0.5 => {
                cmd =>
'42 - 00 - BA - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0',
                descr => 'Ctrl: Set_CI_Bit_2x'
            },
            0.6 => {
                cmd =>
'43 - 00 - BA - 00 00 01 C0 - 00 00 42 60 - 00 00 83 00 - 00 00 C3 A0 - 00 01 04 40 - 00 01 44 E0 - 00 01 85 80 - 00 01 C6 20 - 00 02 06 C0 - 00 02 47 60 - 00 02 88 00 - 00 02 C8 A0 - 00 03 09 40 - 00 03 49 E0 - 00 03 8A 80 - 00 03 CB 20 - 00 04 0B C0 - 00 04 4C 60 - 00 04 8D 00 - 00 04 CD A0 - 00 05 0E 40 - 00 05 4E E0 - 00 05 8F 80 - 00 05 D0 20 - 00 06 10 C0 - 00 06 51 60 - 00 06 92 00 - 00 06 D2 A0 - 00 07 13 40 - 00 07 53 E0 - 00 07 94 80 - 00 07 D5 20 - 00 08 15 C0 - 00 08 56 60 - 00 08 97 00 - 00 08 D7 A0 - 00 09 18 40 - 00 09 58 E0 - 00 09 99 80 - 00 09 DA 20 - 00 0A 1A C0 - 00 0a 5B 60 - 00 0a 9C 00 - 00 0a DC A0 - 00 0B 1D 40 - 00 0B 5D E0 - 00 0B a6 C0 - 00 05 4B 90 - 00 0B E6 B0 - 00 0B 9E 80 - 00 0B Df 20 - 00 0C 1F C0 - 00 0C 60 60 - 00 0C a1 00 - 00 0C E1 A0 - 00 0D 22 40 - 00 0D 62 E0 - 00 0D A3 80 - 00 0D e4 20 - 00 0E 24 C0 - 00 0E 65 60 - 00 0E A7 00 - 00 00 01 C0 - 00 00 42 60 - 00 00 83 00 - 00 00 C3 A0 - 00 01 04 40 - 00 01 44 E0 - 00 01 85 80 - 00 01 C6 20 - 00 02 06 C0 - 00 02 47 60 - 00 02 88 00 - 00 02 C8 A0 - 00 03 09 40 - 00 03 49 E0 - 00 03 8A 80 - 00 03 CB 20 - 00 04 0B C0 - 00 04 4C 60 - 00 04 8D 00 - 00 04 CD A0 - 00 05 0E 40 - 00 05 4E E0 - 00 05 8F 80 - 00 05 D0 20 - 00 06 10 C0 - 00 06 51 60 - 00 06 92 00 - 00 06 D2 A0 - 00 07 13 40 - 00 07 53 E0 - 00 07 94 80 - 00 07 D5 20 - 00 08 15 C0 - 00 08 56 60 - 00 08 97 00 - 00 08 D7 A0 - 00 09 18 40 - 00 09 58 E0 - 00 09 99 80 - 00 09 DA 20 - 00 0A 1A C0 - 00 0a 5B 60 - 00 0a 9C 00 - 00 0a DC A0 - 00 0B 1D 40 - 00 0B 5D E0 - 00 0B a6 C0 - 00 05 4B 90 - 00 0B E6 B0 - 00 0B 9E 80 - 00 0B Df 20 - 00 0C 1F C0 - 00 0C 60 60 - 00 0C a1 00 - 00 0C E1 A0 - 00 0D 22 40 - 00 0D 62 E0 - 00 0D A3 80 - 00 0D e4 20 - 00 0E 24 C0 - 00 0E 65 60 - 00 0E A7 00 - 00 00 01 C0 - 00 00 42 60 - 00 00 83 00 - 00 00 C3 A0 - 00 01 04 40 - 00 01 44 E0 - 00 01 85 80 - 00 01 C6 20 - 00 02 06 C0 - 00 02 47 60 - 00 02 88 00 - 00 02 C8 A0 - 00 03 09 40 - 00 03 49 E0 - 00 03 8A 80 - 00 03 CB 20 - 00 04 0B C0 - 00 04 4C 60 - 00 04 8D 00 - 00 04 CD A0 - 00 05 0E 40 - 00 05 4E E0 - 00 05 8F 80 - 00 05 D0 20 - 00 06 10 C0 - 00 06 51 60 - 00 06 92 00 - 00 06 D2 A0 - 00 07 13 40 - 00 07 53 E0 - 00 07 94 80 - 00 07 D5 20 - 00 08 15 C0 - 00 08 56 60 - 00 08 97 00 - 00 08 D7 A0 - 00 09 18 40 - 00 09 58 E0 - 00 09 99 80 - 00 09 DA 20 - 00 0A 1A C0 - 00 0a 5B 60 - 00 0a 9C 00 - 00 0a DC A0 - 00 0B 1D 40 - 00 0B 5D E0 - 00 0B a6 C0 - 00 05 4B 90 - 00 0B E6 B0 - 00 0B 9E 80 - 00 0B Df 20 - 00 0C 1F C0 - 00 0C 60 60 - 00 0C a1 00 - 00 0C E1 A0 - 00 0D 22 40 - 00 0D 62 E0 - 00 0D A3 80 - 00 0D e4 20 - 00 0E 24 C0 - 00 0E 65 60 - 00 0E A7 00',
                descr => 'Data: Set_CI_Bit_2x'
            },

        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_MaxPlus1_M' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set SPI Pattern for command  ' },

            # 0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },
            #--------------#cycle1------------------
            0.4 => {
                cmd =>
'41 - 00 - 7F - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 ',
                descr => 'Mode: Mode_InitTest_2x'
            },

            0.5 => {
                cmd =>
'42 - 00 - 7F - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 ',
                descr => 'Ctrl: Set_CI_Bit_2x'
            },
            0.6 => {
                cmd =>
'43 - 00 - 7F - 00 00 30 00 - 00 00 7C 00 - 00 00 C8 00 - 00 01 14 00 - 00 01 60 00 - 00 01 AC 00 - 00 01 F8 00 - 00 02 44 00 - 00 02 90 00 - 00 02 DC 00 - 00 03 28 00 - 00 03 74 00 - 00 03 C0 00 - 00 04 0C 00 - 00 04 58 00 - 00 04 A4 00 - 00 04 F0 00 - 00 05 3C 00 - 00 05 88 00 - 00 05 D4 00 - 00 06 20 00 - 00 06 6C 00 - 00 06 B8 00 - 00 07 04 00 - 00 07 50 00 - 00 07 9C 00 - 00 07 E8 00 - 00 08 34 00 - 00 08 80 00 - 00 08 CC 00 - 00 09 18 00 - 00 09 64 00 - 00 09 B0 00 - 00 09 FC 00 - 00 0A 48 00 - 00 0A 94 00 - 00 0A E0 00 - 00 0B 2C 00 - 00 0B 78 00 - 00 0B C4 00 - 00 0C 10 00 - 00 0C 5C 00 - 00 0C A8 00 - 00 0C F4 00 - 00 0D 40 00 - 00 0D 8C 00 - 00 0D D8 00 - 00 0E 24 00 - 00 0E 70 00 - 00 0E BC 00 - 00 0F 08 00 - 00 0F 54 00 - 00 0F A0 00 - 00 00 30 00 - 00 00 7C 00 - 00 00 C8 00 - 00 01 14 00 - 00 01 60 00 - 00 01 AC 00 - 00 01 F8 00 - 00 02 44 00 - 00 02 90 00 - 00 02 DC 00 - 00 03 28 00 - 00 03 74 00 - 00 03 C0 00 - 00 04 0C 00 - 00 04 58 00 - 00 04 A4 00 - 00 04 F0 00 - 00 05 3C 00 - 00 05 88 00 - 00 05 D4 00 - 00 06 20 00 - 00 06 6C 00 - 00 06 B8 00 - 00 07 04 00 - 00 07 50 00 - 00 07 9C 00 - 00 07 E8 00 - 00 08 34 00 - 00 08 80 00 - 00 08 CC 00 - 00 09 18 00 - 00 09 64 00 - 00 09 B0 00 - 00 09 FC 00 - 00 0A 48 00 - 00 0A 94 00 - 00 0A E0 00 - 00 0B 2C 00 - 00 0B 78 00 - 00 0B C4 00 - 00 0C 10 00 - 00 0C 5C 00 - 00 0C A8 00 - 00 0C F4 00 - 00 0D 40 00 - 00 0D 8C 00 - 00 0D D8 00 - 00 0E 24 00 - 00 0E 70 00 - 00 0E BC 00 - 00 0F 08 00 - 00 0F 54 00 - 00 0F A0 00 - 00 00 30 00 - 00 00 7C 00 - 00 00 C8 00 - 00 01 14 00 - 00 01 60 00 - 00 01 AC 00 - 00 01 F8 00 - 00 02 44 00 - 00 02 90 00 - 00 02 DC 00 - 00 03 28 00 - 00 03 74 00 - 00 03 C0 00 - 00 04 0C 00 - 00 04 58 00 - 00 04 A4 00 - 00 04 F0 00 - 00 05 3C 00 - 00 05 88 00 - 00 05 D4 00 - 00 06 20 00 ',
                descr => 'Data: Set_CI_Bit_2x'
            },

        },
    },

    #***************************************************************************************
    'Invalid_RD_CLK_Max_M' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,      descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,     descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CLOCK_COUNTER, descr => 'module_0: Set SPI Pattern for command  ' },

            # 0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },
            #--------------#cycle1------------------
            0.4 => {
                cmd =>
'41 - 00 - 9F - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01 - 10 00 00 01',
                descr => 'Mode: Mode_InitTest_2x'
            },

            0.5 => {
                cmd =>
'42 - 00 - 9F - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0 - 00 0f ff f0',
                descr => 'Ctrl: Set_CI_Bit_2x'
            },
            0.6 => {
                cmd =>
'43 - 00 - 9F - 00 00 33 40 - 00 00 7F 30 - 00 00 CB 20 - 00 01 17 10 - 00 01 63 00 - 00 01 AE f0 - 00 01 FA E0 - 00 02 46 D0 - 00 02 92 C0 - 00 02 DE B0 - 00 03 2A A0 - 00 03 76 90 - 00 03 C2 80 - 00 04 0E 70 - 00 04 5A 60 - 00 04 A6 50 - 00 04 F2 40 - 00 05 3e 30 - 00 05 8A 20 - 00 05 D6 10 - 00 06 22 00 - 00 06 6D F0 - 00 06 B9 E0 - 00 07 05 D0 - 00 07 51 C0 - 00 07 9D B0 - 00 07 E9 A0 - 00 08 35 90 - 00 08 81 80 - 00 08 CD 70 - 00 09 19 60 - 00 00 CB 20 - 00 01 17 10 - 00 01 63 00 - 00 01 AE f0 - 00 09 65 50 - 00 09 B1 40 - 00 09 Fd 30 - 00 0A 49 20 - 00 0A 95 10 - 00 0A E1 00 - 00 0B 2C F0 - 00 0B 78 E0 - 00 0B C4 D0 - 00 0C 10 C0 - 00 0C 5C B0 - 00 0C A8 A0 - 00 0C F4 90 - 00 0D 40 80 - 00 0D 8C 70 - 00 0D D8 60 - 00 0E 24 50 - 00 0E 70 40 - 00 0E BC 30 - 00 0F 08 20 - 00 0F 54 10 - 00 0F A0 00 - 00 00 33 40 - 00 00 7F 30 - 00 00 CB 20 - 00 01 17 10 - 00 01 63 00 - 00 01 AE f0 - 00 01 FA E0 - 00 02 46 D0 - 00 02 92 C0 - 00 02 DE B0 - 00 03 2A A0 - 00 03 76 90 - 00 03 C2 80 - 00 04 0E 70 - 00 04 5A 60 - 00 04 A6 50 - 00 04 F2 40 - 00 05 3e 30 - 00 05 8A 20 - 00 05 D6 10 - 00 06 22 00 - 00 06 6D F0 - 00 06 B9 E0 - 00 07 05 D0 - 00 07 51 C0 - 00 07 9D B0 - 00 07 E9 A0 - 00 08 35 90 - 00 08 81 80 - 00 08 CD 70 - 00 09 19 60 - 00 00 CB 20 - 00 01 17 10 - 00 01 63 00 - 00 01 AE f0 - 00 09 65 50 - 00 09 B1 40 - 00 09 Fd 30 - 00 0A 49 20 - 00 0A 95 10 - 00 0A E1 00 - 00 0B 2C F0 - 00 0B 78 E0 - 00 0B C4 D0 - 00 0C 10 C0 - 00 0C 5C B0 - 00 0C A8 A0 - 00 0C F4 90 - 00 0D 40 80 - 00 0D 8C 70 - 00 0D D8 60 - 00 0E 24 50 - 00 0E 70 40 - 00 0E BC 30 - 00 0F 08 20 - 00 0F 54 10 - 00 0F A0 00 - 00 00 33 40 - 00 00 7F 30 - 00 00 CB 20 - 00 01 17 10 - 00 01 63 00 - 00 01 AE f0 - 00 01 FA E0 - 00 02 46 D0 - 00 02 92 C0 - 00 02 DE B0 - 00 03 2A A0 - 00 03 76 90 - 00 03 C2 80 - 00 04 0E 70 - 00 04 5A 60 - 00 04 A6 50 - 00 04 F2 40 - 00 05 3e 30 - 00 05 8A 20 - 00 05 D6 10 - 00 06 22 00 - 00 06 6D F0 - 00 06 B9 E0 - 00 07 05 D0 - 00 07 51 C0 - 00 07 9D B0 - 00 07 E9 A0 - 00 08 35 90 - 00 08 81 80 - 00 08 CD 70 - 00 09 19 60 - 00 00 CB 20 - 00 01 17 10 - 00 01 63 00 - 00 01 AE f0 - 00 09 65 50 - 00 09 B1 40 - 00 09 Fd 30 - 00 0A 49 20 - 00 0A 95 10 - 00 0A E1 00 - 00 0B 2C F0 - 00 0B 78 E0 - 00 0B C4 D0 - 00 0C 10 C0 - 00 0C 5C B0 - 00 0C A8 A0 - 00 0C F4 90 - 00 0D 40 80 - 00 0D 8C 70 - 00 0D D8 60 - 00 0E 24 50 - 00 0E 70 40 - 00 0E BC 30 - 00 0F 08 20 - 00 0F 54 10 - 00 0F A0 00',
                descr => 'Data: Set_CI_Bit_2x'
            },

        },
    },

    #***************************************************************************************
    'Invalid_ReadSenData_CH1_CRC_Distcheck' => {    # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID
                                                                                                                   # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 40 00 01 f4', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_BITE1_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40', descr => 'Mode: Mode_InitTest_3x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },
            1.0 => { cmd => '63 - 00 - 51 80 05 20', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_BITE1_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 =>
              { cmd => '41 - 00 - 0F - 10 00 00 10 - 10 00 00 10 - 10 00 00 01 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40', descr => 'Mode: Mode_InitTest_3x' },

            0.6 =>
              { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 0F FF F0 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 =>
              { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },
            1.0 => { cmd => '63 - 00 - 51 80 05 20', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_BITE1_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 =>
              { cmd => '41 - 00 - 0F - 10 00 00 10 - 10 00 00 10 - 10 00 00 01 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40', descr => 'Mode: Mode_InitTest_3x' },

            0.6 =>
              { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 0F FF F0 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 =>
              { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },
            1.0 => { cmd => '63 - 00 - 51 80 05 20', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_BITE1_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as
            1.0 => { cmd => '63 - 00 - 51 80 05 20', descr => 'pretrigger_0: Set Frame Pattern' },            #
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_BITE1_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 05 20', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_BITE1_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 05 20', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_BITE2_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42', descr => 'Mode: Mode_InitTest_3x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 02 D0', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_BITE2_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42', descr => 'Mode: Mode_InitTest_3x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 02 D0', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_BITE2_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 40 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42 - 10 00 00 10 - 10 00 00 10 - 10 00 00 42', descr => 'Mode: Mode_InitTest_3x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 02 D0', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_BITE2_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 10', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 02 D0', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_BITE2_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 02 D0', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_BITE2_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01',                 descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 51 80 02 D0', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_BITEOFF_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1' },
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set SPI Mask' },
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set SPI Pattern for command  ' },

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            2.3 => { cmd => '63 - 00 - 31 80 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            2.4 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            3.1 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_3x' },
            3.2 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CRC_Bit_3x' },
            3.3 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00', descr => 'Data: Set_CRC_Bit_3x' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_BITEOFF_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set SPI Pattern for command  ' },

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            2.3 => { cmd => '63 - 00 - 31 80 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            2.4 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            3.1 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },
            3.2 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            3.3 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_BITEOFF_CRC_check_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set SPI Pattern for command  ' },

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            2.3 => { cmd => '63 - 00 - 31 80 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            2.4 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            3.1 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },
            3.2 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            3.3 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00 - 00 00 00 00 - 00 00 00 02 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh1_BITEOFF_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1' },
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set SPI Mask' },
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set SPI Pattern for command  ' },

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            2.3 => { cmd => '63 - 00 - 31 80 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            2.4 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            3.1 => { cmd => '41 - 00 - 0F - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E', descr => 'Mode: Mode_InitTest_2x' },
            3.2 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            3.3 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh2_BITEOFF_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set SPI Pattern for command  ' },

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            2.3 => { cmd => '63 - 00 - 31 80 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            2.4 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            3.1 => { cmd => '41 - 00 - 0F - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E', descr => 'Mode: Mode_InitTest_2x' },
            3.2 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            3.3 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_SensorDataCh3_BITEOFF_CRC_check_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1' },
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set SPI Mask' },
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set SPI Pattern for command  ' },

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            2.3 => { cmd => '63 - 00 - 31 80 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            2.4 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            3.1 => { cmd => '41 - 00 - 0F - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E - 10 00 00 25 - 10 00 00 01 - 10 00 00 3E', descr => 'Mode: Mode_InitTest_2x' },
            3.2 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            3.3 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 07 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },
        },
    },

#######################FOC Limit Evaluation
    #***************************************************************************************
    'Valid_FOC_AVG_CH1_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH1_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_CRC_Ch1_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - 00 10 00 04', descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - FF C0 00 00', descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - 80 00 00 00', descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 30 - 10 00 00 46 - 10 00 00 0f - 10 00 00 30 - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_CRC_Ch2_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - 00 10 00 04', descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - FF C0 00 00', descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - 94 00 00 00', descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 30 - 10 00 00 46 - 10 00 00 0f - 10 00 00 30 - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_CRC_Ch3_3x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - 00 10 00 04', descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - FF C0 00 00', descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - 98 00 00 00', descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 30 - 10 00 00 46 - 10 00 00 0f - 10 00 00 30 - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_CRC_Ch1_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - 00 10 00 04', descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - FF C0 00 00', descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - 80 00 00 00', descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_CRC_Ch2_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - 00 10 00 04', descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - FF C0 00 00', descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - 94 00 00 00', descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_RD_OffCan_CRC_Ch3_2x' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # #Configure SPI trigger to CG904 Master Asic
            0.1 => { cmd => '31 - 00 - 00 10 00 04', descr => 'module_0: Set SPI1' },
            0.2 => { cmd => '32 - 00 - FF C0 00 00', descr => 'module_0: Set SPI Mask' },
            0.3 => { cmd => '33 - 00 - 98 00 00 00', descr => 'module_0: Set SPI Pattern for command  ' },
            0.4 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },

            #--------------#cycle1------------------
            0.5 => { cmd => '41 - 00 - 0F - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46 - 10 00 00 0f - 10 00 00 0f - 10 00 00 46', descr => 'Mode: Mode_InitTest_2x' },

            0.6 => { cmd => '42 - 00 - 0F - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00 - 00 00 00 00', descr => 'Ctrl: Set_CI_Bit_2x' },
            0.7 => { cmd => '43 - 00 - 0F - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 02 - 00 00 00 00', descr => 'Data: Set_CI_Bit_2x' },

            0.8 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for CG904' },        #CS
            0.9 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits
            1.0 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },
            1.1 => { cmd => '64 - 00 - 00 06 1a 80', descr => 'pretrigger_0: Pre-Trigger active for 2s' },    # Pre-Trigger time

        },
    },

    #***************************************************************************************
    'Invalid_FOC_AVG_CH1_SMA_Maxplus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH1_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_AVG_CH1_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH1_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH2_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH2_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_AVG_CH2_SMA_Maxplus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0B 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH2_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_AVG_CH2_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F4 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH2_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F F5 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH3_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH3_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_AVG_CH3_SMA_Maxplus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH3_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_AVG_CH3_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH3_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0F 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH1_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH1_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH1_SMA_Maxplus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH1_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH1_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH1_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH2_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH2_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH2_SMA_Maxplus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH2_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH2_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH2_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH3_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 11 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH3_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 11 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH3_SMA_Maxplus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 11 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH3_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 EE 80 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH3_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 EE 7F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_FOC_PEAK_CH3_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH3

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 EE 80 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH1_SMA_Middle_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },               #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                    # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                 # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },         # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },         # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_FOC_AVG_CH2_SMA_Middle_M' => {

        #***************************************************************************************
        'CMD_sequence' => {
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            2.1 => { cmd => '61 - 00 - 00 10 00 04', descr => 'pretrigger_0: Set SPI1 CS for SMA' },                #CS
            2.2 => { cmd => '62 - 00 - FF C0 00 00', descr => 'pretrigger_0: Set Frame Mask' },                     # make Instruction bits as 1
            2.3 => { cmd => '63 - 00 - 4C 00 00 00', descr => 'pretrigger_0: Set Frame Pattern' },                  # Read Sensor Data channel 1 bits
            2.4 => { cmd => '64 - 00 - 00 01 38 80', descr => 'pretrigger_0: Pre-Trigger active for 1s' },          # Pre-Trigger time
            2.5 => { cmd => '65 - 00 - 00 00 00 01', descr => 'module_0: Trigger only by pre trigger 1' },          # Trigger condition

            3.1 => { cmd => '41 - 00 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 06 40', descr => 'module_0: Write FIFO data' },
        },
    },

##############Main Ch1 peak###################################################################################################################################################
    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH1_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH1_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH1_SMA_Maxplus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH1_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH1_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH1_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure RD_BITE_CH1_PH2
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH1_PH2, descr => 'module_0: Set Frame Pattern' },      #RD_BITE_CH1_PH2
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      #RD_SENSOR_DATA_CH1
                                                                                                                   # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },          #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },               # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },            # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },    # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },    # Trigger condition
                                                                                                                   # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #######CH2 MAIN PEAK#########################################################################################################################################################
    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH2_SMA_MaxMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #SMA_RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 5F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH2_SMA_Max_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #SMA_RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH2_SMA_MaxPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #SMA_RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 04 60 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH2_SMA_Min_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #SMA_RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH2_SMA_MinMinus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #SMA_RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B 9F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_BITE1_PEAK_CH2_SMA_MinPlus1_M' => {

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SMA_RD_BITE_CH2_PH1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,     descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,    descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_BITE_CH2_PH1, descr => 'module_0: Set Frame Pattern' },      #SMA_RD_BITE_CH2_PH1
                                                                                                                # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO data' },

            # Configure SPI trigger for SA1
            3.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            3.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            3.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_CAPTURE_DATA_CH2
                                                                                                                    # Configure Pre-Trigger
            4.1 => { cmd => '61 - 01 - 00 10 00 04',      descr => 'pretrigger_0: Set SPI1 CS for SMA' },           #CS
            4.2 => { cmd => '62 - 01 - FF FF FF FF',      descr => 'pretrigger_0: Set Frame Mask' },                # make Instruction bits as 1
            4.3 => { cmd => '63 - 01 - 51 80 05 20',      descr => 'pretrigger_0: Set Frame Pattern' },             # Read Sensor Data channel 1 bits
            4.4 => { cmd => '64 - 01 - 00 01 38 80',      descr => 'pretrigger_0: Pre-Trigger active for 1s' },     # Pre-Trigger time
            4.5 => { cmd => '65 - 01 - 00 00 00 02',      descr => 'module_0: Trigger only by pre trigger 1' },     # Trigger condition
                                                                                                                    # Configure FIFOs for SA1
            5.1 => { cmd => '41 - 01 - 01 - 10 00 0F A0', descr => 'module_0: Write FIFO mode and time' },
            5.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            5.3 => { cmd => '43 - 01 - 01 - 00 0B A0 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_AccXLgChl_SensorData_2g_900ms' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 01 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 01 - ' . $AccXLgChl,        descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 01 - 01 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 01 - 01 - 00 02 71 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_AccXLgChl_SensorData_0_5_0_9g_900_900ms' => {                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 05 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 05 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 05 - ' . $AccXLgChl,        descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 05 - 02 - 40 0D BB A0 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 05 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 05 - 02 - 00 00 9C 40 - 00 01 32 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_AccYLgChl_SensorData_4g_900ms' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 02 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 02 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 02 - ' . $AccYLgChl,        descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 02 - 01 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 02 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 02 - 01 - 00 04 E2 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_AccYLgChl_SensorData_0_7_0_8g_900_900ms' => {                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 02 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 02 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 02 - ' . $AccYLgChl,        descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 02 - 02 - 40 0D BB A0 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 02 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 02 - 02 - 00 00 DA C0 - 00 00 FA 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_AccZLgChl_SensorData_3g_900ms' => {                                                                      # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 06 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 06 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 06 - ' . $AccZLgChl,        descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 06 - 01 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 06 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 06 - 01 - 00 03 A9 80', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_AccZLgChl_SensorData_0_3_0_6g_900_900ms' => {                                                            # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 06 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 06 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 06 - ' . $AccZLgChl,        descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 06 - 02 - 40 0D BB A0 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 06 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 06 - 02 - 00 00 2E E0 - 00 00 5D C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_MChl_SensorData_4g_900ms' => {                                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 01 - 01 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 01 - 01 - 00 00 32 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_YawRateLfChl_SensorData_120GPS_900ms' => {                                                               # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 03 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 03 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 03 - ' . $YawRateLfChl,     descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 03 - 01 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 03 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 03 - 01 - 00 02 EE 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_YawRateLfChl_SensorData_120GPS_900_900ms' => {                                                           # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 03 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 03 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 03 - ' . $YawRateLfChl,     descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 03 - 02 - 40 0D BB A0 - 40 0D BB A0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 03 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 03 - 02 - 00 02 EE 00 - 00 02 EE 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_RollRateLfChl_SensorData_105GPS_150ms' => {                                                              # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 07 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 07 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 07 - ' . $RollRateLfChl,    descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 07 - 01 - 40 02 49 F0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 07 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 07 - 01 - 00 02 90 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_RollRateLfChl_SensorData_100GPS_900_500ms' => {                                                          # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 07 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 07 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 07 - ' . $RollRateLfChl,    descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 07 - 02 - 40 0D BB A0 - 40 07 A1 20', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 07 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 07 - 02 - 00 02 71 00 - 00 02 71 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_PitchRateLfChl_SensorData_101GPS_150ms' => {                                                             # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 08 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 08 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 08 - ' . $PitchRateLfChl,   descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 08 - 01 - 40 02 49 F0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 08 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 08 - 01 - 00 02 77 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_PitchRateLfChl_SensorData_101GPS_900_500ms' => {                                                         # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 08 - ' . $SMI_SPI_CS,       descr => 'module_0: Set SPI1 CS for SMA' },           #CS
            1.2 => { cmd => '32 - 08 - ' . $SMI_StandardMask, descr => 'module_0: Set Frame Mask' },                #10 bits for instruction
            1.3 => { cmd => '33 - 08 - ' . $PitchRateLfChl,   descr => 'module_0: Set Frame Pattern' },             #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 08 - 02 - 40 0D BB A0 - 40 02 49 F0', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 08 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 08 - 02 - 00 02 77 40 - 00 02 77 40', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_Smach2_SensorData_Reference' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 04 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 04 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 04 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 04 - 02 - 40 07 A1 20 - 40 07 A1 20', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 04 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 04 - 02 - 00 00 32 00 - 00 00 3F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_Smach3_SensorData_Reference' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 04 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 04 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 04 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 04 - 02 - 40 07 A1 20 - 40 07 A1 20', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 04 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 04 - 02 - 00 00 32 00 - 00 00 32 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_Smach2_900ms_SensorData_Reference' => {                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 04 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 04 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },         #10 bits for instruction
            1.3 => { cmd => '33 - 04 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },      #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 04 - 02 - 40 07 A1 20- 40 07 A1 20', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 04 - 02 - 00 0F FF F0- 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 04 - 02 - 00 00 32 00- 00 00 3F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_Smach1_900ms_SensorData_Reference' => {                                                                  # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            2.1 => { cmd => '41 - 01 - 02 - 40 0C 35 00- 40 0C 35 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 01 - 02 - 00 0F FF F0- 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 01 - 02 - 00 00 32 00- 00 00 3F C0', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Valid_Smach1_SensorData_Reference' => {                                                                        # check the Invalid RD_SERIAL_NO INIT Fault

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },     #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },          #10 bits for instruction
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },       #RD_SEN_DataCH1_SID

            # Configure FIFOs for SA1
            # 2.1 => { cmd => '41 - 01 - 02 - 40 04 93 E0 - 40 04 93 E0', descr => 'module_0: Write FIFO mode and time' },
            2.1 => { cmd => '41 - 04 - 02 - 40 00 00 00 - 40 00 00 00', descr => 'module_0: Write FIFO mode and time' },
            2.2 => { cmd => '42 - 01 - 02 - 00 0F FF F0 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            2.3 => { cmd => '43 - 01 - 02 - 00 00 32 00 - 00 00 32 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_MONITOR_II_DATA_M0' => {    # check for the Invalid CRC for FOC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      # RD_MON_11
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 03 00 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_MONITOR_II_DATA_M1' => {                                                                           # check for the Invalid CRC for FOC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },      # RD_MON_11
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_RD_MONITOR_II_DATA_M2' => {                                                                           # check for the Invalid CRC for FOC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },         # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },      # RD_MON_11
                                                                                                                   # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 40 00 9C 40', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 0C 00', descr => 'module_0: Write FIFO data' },
        },
    },

    #***************************************************************************************
    'Invalid_AuxilliaryDebugData_InitFlt_Check_CDClear_M' => {                                                     # check for the Invalid CRC for FOC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 30 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Invalid_AuxilliaryDebugData_CycFlt_Check_CDClear_M' => {                                                         # check for the Invalid CRC for FOC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 00 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 00 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 00 - ' . $SMA_RD_MONITOR_II_DATA, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 00 - 01 - 10 00 00 03', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 00 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 00 - 01 - 00 00 30 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Invalid_AuxilliaryDebugData_CycFlt_Check_CDClear_M2' => {                                                        # check for the Invalid CRC for FOC

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 01 5F 90', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 00 00 00', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 00 00 07', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH1_4g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 0f 42 40', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH2_4g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 0f 42 40', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 00 40 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH3_2.4g' => {                                                                                      # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 3d 09 00', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 00 99 80', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH1_12g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },     #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },             # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },          # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 07 A1 20', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH2_12g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 07 A1 20', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 00 C0 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH3_4g' => {                                                                                        # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 0f 42 40', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 01 00 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH1_32g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },     #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },             # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },          # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 03 d0 90', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 02 00 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH2_32g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH2, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 03 d0 90', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 02 00 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH3_12g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 07 A1 20', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 03 00 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH1_90g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },     #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },             # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH1, descr => 'module_0: Set Frame Pattern' },          # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 01 fb d0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 05 A0 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH2_90g' => {                                                                                       # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,        descr => 'module_0: Set SPI1 CS for SMA660' },     #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,       descr => 'module_0: Set Frame Mask' },             # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_SENSOR_DATA_CH2, descr => 'module_0: Set Frame Pattern' },          # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 01 fb d0', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 05 A0 00', descr => 'module_0: Write FIFO data' },

        },
    },

    #***************************************************************************************
    'Signal_Monflt_CH3_31.8g' => {                                                                                     # check for the Signal Mon Flt

        #***************************************************************************************
        'CMD_sequence' => {

            # Configure SPI trigger for SA1
            1.1 => { cmd => '31 - 01 - ' . $SMA_Main_SPI_CS,         descr => 'module_0: Set SPI1 CS for SMA660' },    #CS
            1.2 => { cmd => '32 - 01 - ' . $SMA_StandardMask,        descr => 'module_0: Set Frame Mask' },            # make Instruction bits as 1
            1.3 => { cmd => '33 - 01 - ' . $SMA_RD_CAPTURE_DATA_CH3, descr => 'module_0: Set Frame Pattern' },         # RD_SEN_DataCH1

            # Configure FIFOs for SA1
            3.1 => { cmd => '41 - 01 - 01 - 40 03 d0 90', descr => 'module_0: Write FIFO mode and time' },
            3.2 => { cmd => '42 - 01 - 01 - 00 0F FF F0', descr => 'module_0: Write FIFO ctrl' },
            3.3 => { cmd => '43 - 01 - 01 - 00 07 f3 40', descr => 'module_0: Write FIFO data' },

        },
    },

};

#***************************************************************************************
$Defaults->{'PARA_MAP_CONF_SMA8'} = {

    'Project_Line'                  => 'RT5',
    'FILTER1_RAW_CONFIGURED'        => 'yes',
    'FILTER1_CALIBRATED_CONFIGURED' => 'yes',
    'FILTER2_RAW_CONFIGURED'        => 'yes',

    #***************************************************************************************
    'AlgoDataValid_V'                => 'rb_csem_SensorDataRT_st.DataValid_b32',
    'AlgoDataValid_V_U8'             => 'rb_csem_SensorDataRT_st.DataValid_b32_U8',
    'AlgoDataValid_V_U32'            => 'rb_csem_SensorDataRT_st.DataValid_b32_U32',
    'MainSensor_AlgoData_NotValid_C' => '0bxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000',
    'MainSensor_AlgoData_Valid_C'    => '0bxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111',

    'SMA_Sensor_All_Channel_NotValid_C' => '0bxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000',
    'SMA_Sensor_All_Channel_Valid_C'    => '0bxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111',

    'MainSensor_BITE_Fault_Counter'    => 'rb_csai_AllInternalCounters_st.BiteFltCnt_au8(0)',
    'MainSensor_BITE_Fault_Counter_U8' => 'rb_csai_AllInternalCounters_st.BiteFltCnt_au8(0)_U8',

    'MainSensor_FOC_Fault_Counter'    => 'rb_csai_AllInternalCounters_st.FocFltCnt_au8(0)',
    'MainSensor_FOC_Fault_Counter_U8' => 'rb_csai_AllInternalCounters_st.FocFltCnt_au8(0)_U8',

    'SMAMain_CH1_NhtsaData' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(1)',
    'SMAMain_CH2_NhtsaData' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(0)',
    'SMAMain_CH3_NhtsaData' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(2)',

    'Latched_failure_flag'    => 'rb_csam_AccumulatedFltFlags_au16(0)',
    'Latched_failure_flag_U8' => 'rb_csam_AccumulatedFltFlags_au16(0)_U8',

    'SMAMain_CH1_NhtsaData_S16' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(1)_S16',
    'SMAMain_CH2_NhtsaData_S16' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(0)_S16',
    'SMAMain_CH3_NhtsaData_S16' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(2)_S16',

    ####RAM copy of NVM
    'SMA_MainSensor_FieldClaimDataEe_st_MoniDat1'  => 'rb_csem_FieldClaimDataEe_st.SmaMonitorData_ast(0).MoniData1_u16',
    'SMA_MainSensor_FieldClaimDataEe_st_Monidata2' => 'rb_csem_FieldClaimDataEe_st.SmaMonitorData_ast(0).MoniData2_u16',
    'SMA_MainSensor_FieldClaimDataEe_st_FaultFlag' => 'rb_csem_FieldClaimDataEe_st.SmaMonitorData_ast(0).FaultFlag_u8',

    ###NVM Data
    'SMA_MainSensor_FieldClaimDataEe_dfst_MoniDat1'  => 'rb_csem_FieldClaimDataEe_dfst.SmaMonitorData_ast(0).MoniData1_u16',
    'SMA_MainSensor_FieldClaimDataEe_dfst_Monidata2' => 'rb_csem_FieldClaimDataEe_dfst.SmaMonitorData_ast(0).MoniData2_u16',
    'SMA_MainSensor_FieldClaimDataEe_dfst_FaultFlag' => 'rb_csem_FieldClaimDataEe_dfst.SmaMonitorData_ast(0).FaultFlag_u8',

    ###RAM copy
    'SMA_MainSensor_ReadMonitorData_ast_MoniDat1'  => 'rb_csam_ReadMonitorData_ast(0).MoniData1_u16',
    'SMA_MainSensor_ReadMonitorData_ast_Monidata2' => 'rb_csam_ReadMonitorData_ast(0).MoniData2_u16',
    'SMA_MainSensor_ReadMonitorData_ast_FaultFlag' => 'rb_csam_ReadMonitorData_ast(0).FaultFlag_u8',

    ###Sensor Orientation
    'SMA_MainSensor_SensorHeading_aen' => 'rb_csem_SysConfCsemDataEe_st.SensorHeading_aen(0)',

    'SensorDataComFaultRT_b32' => 'rb_csem_SensorDataComFaultRT_b32',
    'ActualSystemMode'         => 'rb_bswm_ActualSystemMode_au16(0)',

    ##SMA DEVICE ID
    'SMA_MainSensor_Device_ID' => 'rb_syca_AsicDeviceId_au16(2)',

    ##SMA REVISION ID
    'SMA_MainSensor_Revision_ID' => 'rb_syca_AsicRevisionId_au16(2)',

    ##SMA Mangement State
    'CSEM_SMA_Mangement_State'    => 'rb_csam_SmaMgtState_en',
    'CSEM_SMA_Mangement_State_U8' => 'rb_csam_SmaMgtState_en_U8',

    ##Relative Oscillator Value
    'SMA_MainSensor_Relative_Osc_Value'     => 'rb_csam_RelativeOscValueRT_au16(0)',
    'SMA_MainSensor_Relative_Osc_Value_U16' => 'rb_csam_RelativeOscValueRT_au16_U16',

    'MAX_Osc_Value' => 1141,
    'MIN_Osc_Value' => 1132,

    ##SMA ASIC SERIAL Number
    'SMA_MainSensor_Serial_Number1' => 'rb_csam_AsicIdData_ast(0).SerialNumber1_u16',
    'SMA_MainSensor_Serial_Number2' => 'rb_csam_AsicIdData_ast(0).SerialNumber2_u16',
    'SMA_MainSensor_Serial_Number3' => 'rb_csam_AsicIdData_ast(0).SerialNumber3_u16',

###-------------SMA Sensor State-------------------------------
### enum;rb_cs6m_SensorStates_ten;rb_cs6m_SensorInit_e;0;Sensor is undergoing initialization
### enum;rb_cs6m_SensorStates_ten;rb_cs6m_SensorOkNoMon_e;1;Sensor passed initialization but SCON monitoring not active
### enum;rb_cs6m_SensorStates_ten;rb_cs6m_SensorOk_e;2;Sensor is OK
### enum;rb_cs6m_SensorStates_ten;rb_cs6m_SensorInitFlt_e;3;Sensor Initialization failed
### enum;rb_cs6m_SensorStates_ten;rb_cs6m_SensorFiltFlt_e;4;Sensor has a filtered cyclic fault
### enum;rb_cs6m_SensorStates_ten;rb_cs6m_SensorStoredFlt_e;5;Sensor has a stored fault from previous PON
### enum;rb_cs6m_SensorStates_ten;rb_cs6m_SensorNotConfigured_e;6;Sensor is not configured

    'SMA_MainSensor_Sensor_State' => 'rb_csam_SensorState_aen(0)',
###---------------------------------------------------------

    #	System Warning Indicator check

    'System_Warning_Indicator_State' => 'rb_wimi_SysWIStatus_aen(0)',
    'WL_OFF_C'                       => 0,
    'WL_ON_C'                        => 1,

###-------------SMA Channel State-------------------------------
### enum;rb_cs6m_ChannelStates_ten;rb_cs6m_ChannelIdle_e;0;SMA6 channel idle state
### enum;rb_cs6m_ChannelStates_ten;rb_cs6m_ChannelInit_e;1;SMA6 channel init state
### enum;rb_cs6m_ChannelStates_ten;rb_cs6m_ChannelInitPassed_e;2;SMA6 channel init passed state
### enum;rb_cs6m_ChannelStates_ten;rb_cs6m_ChannelSteady_e;3;SMA6 channel steady state
### enum;rb_cs6m_ChannelStates_ten;rb_cs6m_ChannelDisabled_e;4;SMA6 channel disabled

    'SMA_MainSensor_CH1_State' => 'rb_csam_ChannelState_aen(0)',
    'SMA_MainSensor_CH2_State' => 'rb_csam_ChannelState_aen(1)',
    'SMA_MainSensor_CH3_State' => 'rb_csam_ChannelState_aen(2)',
###------------------------------------------------------------------------------

###--------------------SMA Soft Reset States ----------------------------------
### enum;rb_cs6i_SoftResetStates_ten;rb_cs6i_SoftReset1_e;0;Soft reset state 1
### enum;rb_cs6i_SoftResetStates_ten;rb_cs6i_SoftReset2_e;1;Soft reset state 2
### enum;rb_cs6i_SoftResetStates_ten;rb_cs6i_SoftResetComplete_e;2;Soft reset completed

    'SMA_MainSensor_SoftReset_State' => 'rb_csai_AllStatesDuringInit_st.SoftResetState_aen(0)',
###---------------------------------------------------------------------------

###--------------------SMA C Loss Detection States ----------------------------------
### enum;rb_cs6i_CLossDetectionStates_ten;rb_cs6i_InitiateCLossDetection_e;0;Initiate C Loss detection
### enum;rb_cs6i_CLossDetectionStates_ten;rb_cs6i_VerifyCLossCompletion_e;1;Verify C Loss detection completion
### enum;rb_cs6i_CLossDetectionStates_ten;rb_cs6i_CLossComplete_e;2;C Loss detection completed

    'SMA_MainSensor_CLossDetection_State' => 'rb_csai_CLossDetectionState_aen(0)',
###---------------------------------------------------------------------------

###--------------------SMA FOC States ----------------------------------
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_CheckFOCOffInit_e;0;Check FOC off init
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_StartFOC_e;1;Start FOC
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_WaitForFOC_e;2;Wait for sensor to complete FOC
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_CheckFOCOff_e;3;Check if FOC is turned OFF
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_DisableFOC_e;4;Disable the FOC
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_StartAveragingFOC_e;5;Start averaging FOC data
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_WaitForAveragingFOC_e;6;Wait for averaging sensor data after FOC
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_VerifyFOCData_e;7;Verify the sensor data after FOC
### enum;rb_cs6i_FOCStates_ten;rb_cs6i_FOCComplete_e;8;FOC completed

    'SMA_MainSensor_FOC_State' => 'rb_csai_AllStatesDuringInit_st.FocState_aen(0)',
###---------------------------------------------------------------------------

###--------------------SMA BITE States ----------------------------------
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_ReadBITERefThds_e;0;Read BITE reference thresholds to get BITE limits
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_StartBITE1_e;1;Start BITE 1
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_ReadBITE1Data_e;2;Trigger sensor data read during BITE 1
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_WaitBITE1StartBITE2_e;3;Wait for BITE 1 completion and start BITE 2
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_ReadBITE2Data_e;4;Trigger sensor data read during BITE 2
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_WaitBITE2SwitchOffBITE_e;5;Wait for BITE 2 completion and start BITE Off test
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_ReadBITEOffData_e;6;Read sensor data during BITE Off
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_WaitForBITEOff_e;7;Read sensor data during BITE Off and wait for completion
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_EvaluateBITEOFFResults_e;8;Evaluate BITE Off results
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_EvaluateBITE1AndBITE2Results_e;9;Evaluate BITE(1 and 2) results
### enum;rb_cs6i_BITEStates_ten;rb_cs6i_BITECompleted_e;10;BITE completed

    'SMA_MainSensor_BITE_State' => 'rb_csai_AllStatesDuringInit_st.BiteState_aen(0)',
###---------------------------------------------------------------------------

###--------------------SMA Program SID States ----------------------------------
### enum;rb_cs6i_ProgramSIDStates_ten;rb_cs6i_ProgramSID_e;0;Program sensor ID
### enum;rb_cs6i_ProgramSIDStates_ten;rb_cs6i_VerifySIDProg_e;1;Verify programmed sensor ID
### enum;rb_cs6i_ProgramSIDStates_ten;rb_cs6i_ProgramSIDComplete_e;2;Program sensor ID completed

    'SMA_MainSensor_ProgramSID_State' => 'rb_csai_AllStatesDuringInit_st.ProgramSidState_aen(0)',
###---------------------------------------------------------------------------

###--------------------SMA Finish EOP States ----------------------------------
### enum;rb_cs6i_FinishInitStates_ten;rb_cs6i_ProgramEOP_e;0;Program EOP
### enum;rb_cs6i_FinishInitStates_ten;rb_cs6i_VerifyEOPProg_e;1;Verify EOP programming
### enum;rb_cs6i_FinishInitStates_ten;rb_cs6i_ProgramEOPComplete_e;2;Program EOP completed

    'SMA_MainSensor_FinishEOP_State'    => 'rb_csai_AllStatesDuringInit_st.FinishEopState_aen(0)',
    'SMA_MainSensor_FinishEOP_State_U8' => 'rb_csai_AllStatesDuringInit_st.FinishEopState_aen(0)_U8',

    'Program_EOP_completed' => 3,
    'Program_EOP'           => 0,

    'SMA_MainSensor_AccXChl_Orientation' => 'rb_csam_HeadsSensorChlInNegDirection_abo(0)',
    'SMA_MainSensor_AccYChl_Orientation' => 'rb_csam_HeadsSensorChlInNegDirection_abo(1)',
    'SMA_MainSensor_AccZChl_Orientation' => 'rb_csam_HeadsSensorChlInNegDirection_abo(2)',

    'SMA_Read_Monitor_I_Data_Payload_U32'  => 'rb_csai_Monitor1DataPayload_au32(0)_U32',
    'SMA_Read_Monitor_II_Data_Payload_U32' => 'rb_csai_Monitor2DataPayload_au32(0)_U32',

###---------------------------------------------------------------------------

    ##BITE AVG
    'SMA_MainSensor_CH1_AvgBITE1' => 'rb_csai_InitSensorData_st.AvgBITE1_as16(0)(0)',
    'SMA_MainSensor_CH2_AvgBITE1' => 'rb_csai_InitSensorData_st.AvgBITE1_as16(0)(1)',
    'SMA_MainSensor_CH3_AvgBITE1' => 'rb_csai_InitSensorData_st.AvgBITE1_as16(0)(2)',

    'SMA_MainSensor_CH1_AvgBITE2' => 'rb_csai_InitSensorData_st.AvgBITE2_as16(0)(0)',
    'SMA_MainSensor_CH2_AvgBITE2' => 'rb_csai_InitSensorData_st.AvgBITE2_as16(0)(1)',
    'SMA_MainSensor_CH3_AvgBITE2' => 'rb_csai_InitSensorData_st.AvgBITE2_as16(0)(2)',

    'SMA_MainSensor_CH1_AvgBITE1_S16' => 'rb_csai_InitSensorData_st.AvgBITE1_as16(0)(0)_S16',
    'SMA_MainSensor_CH2_AvgBITE1_S16' => 'rb_csai_InitSensorData_st.AvgBITE1_as16(0)(1)_S16',
    'SMA_MainSensor_CH3_AvgBITE1_S16' => 'rb_csai_InitSensorData_st.AvgBITE1_as16(0)(2)_S16',

    'SMA_MainSensor_CH1_AvgBITE2_S16' => 'rb_csai_InitSensorData_st.AvgBITE2_as16(0)(0)_S16',
    'SMA_MainSensor_CH2_AvgBITE2_S16' => 'rb_csai_InitSensorData_st.AvgBITE2_as16(0)(1)_S16',
    'SMA_MainSensor_CH3_AvgBITE2_S16' => 'rb_csai_InitSensorData_st.AvgBITE2_as16(0)(2)_S16',

    ##BITEOFF AVG
    'MainSensor_AVG_BITEOFF_CH1' => 'rb_csai_InitSensorData_st.AvgBITEOff_as16(0)(0)',
    'MainSensor_AVG_BITEOFF_CH2' => 'rb_csai_InitSensorData_st.AvgBITEOff_as16(0)(1)',
    'MainSensor_AVG_BITEOFF_CH3' => 'rb_csai_InitSensorData_st.AvgBITEOff_as16(0)(2)',

    'MainSensor_AVG_BITEOFF_CH1_S16' => 'rb_csai_InitSensorData_st.AvgBITEOff_as16(0)(0)_S16',
    'MainSensor_AVG_BITEOFF_CH2_S16' => 'rb_csai_InitSensorData_st.AvgBITEOff_as16(0)(1)_S16',
    'MainSensor_AVG_BITEOFF_CH3_S16' => 'rb_csai_InitSensorData_st.AvgBITEOff_as16(0)(2)_S16',

    ##FOC AVG
    'SMA_MainSensor_CH1_AvgFOC' => 'rb_csai_InitSensorData_st.AvgFOC_as16(0)(0)',
    'SMA_MainSensor_CH2_AvgFOC' => 'rb_csai_InitSensorData_st.AvgFOC_as16(0)(1)',
    'SMA_MainSensor_CH3_AvgFOC' => 'rb_csai_InitSensorData_st.AvgFOC_as16(0)(2)',

    'SMA_MainSensor_CH1_AvgFOC_S16' => 'rb_csai_InitSensorData_st.AvgFOC_as16(0)(0)_S16',
    'SMA_MainSensor_CH2_AvgFOC_S16' => 'rb_csai_InitSensorData_st.AvgFOC_as16(0)(1)_S16',
    'SMA_MainSensor_CH3_AvgFOC_S16' => 'rb_csai_InitSensorData_st.AvgFOC_as16(0)(2)_S16',

    ##FOC Peak
    'SMA_MainSensor_CH1_MinPeakFOC' => 'rb_csai_InitSensorData_st.MinPeakFOC_as16(0)(0)',
    'SMA_MainSensor_CH1_MaxPeakFOC' => 'rb_csai_InitSensorData_st.MaxPeakFOC_as16(0)(0)',
    'SMA_MainSensor_CH2_MinPeakFOC' => 'rb_csai_InitSensorData_st.MinPeakFOC_as16(0)(1)',
    'SMA_MainSensor_CH2_MaxPeakFOC' => 'rb_csai_InitSensorData_st.MaxPeakFOC_as16(0)(1)',
    'SMA_MainSensor_CH3_MinPeakFOC' => 'rb_csai_InitSensorData_st.MinPeakFOC_as16(0)(2)',
    'SMA_MainSensor_CH3_MaxPeakFOC' => 'rb_csai_InitSensorData_st.MaxPeakFOC_as16(0)(2)',

    'SMA_MainSensor_CH1_MinPeakFOC_S16' => 'rb_csai_InitSensorData_st.MinPeakFOC_as16(0)(0)_S16',
    'SMA_MainSensor_CH1_MaxPeakFOC_S16' => 'rb_csai_InitSensorData_st.MaxPeakFOC_as16(0)(0)_S16',
    'SMA_MainSensor_CH2_MinPeakFOC_S16' => 'rb_csai_InitSensorData_st.MinPeakFOC_as16(0)(1)_S16',
    'SMA_MainSensor_CH2_MaxPeakFOC_S16' => 'rb_csai_InitSensorData_st.MaxPeakFOC_as16(0)(1)_S16',
    'SMA_MainSensor_CH3_MinPeakFOC_S16' => 'rb_csai_InitSensorData_st.MinPeakFOC_as16(0)(2)_S16',
    'SMA_MainSensor_CH3_MaxPeakFOC_S16' => 'rb_csai_InitSensorData_st.MaxPeakFOC_as16(0)(2)_S16',

    ##BITE1 Peak
    'SMA_MainSensor_CH1_MinPeakBITE1' => 'rb_csai_InitSensorData_st.MinPeakBITE1_as16(0)(0)',
    'SMA_MainSensor_CH1_MaxPeakBITE1' => 'rb_csai_InitSensorData_st.MaxPeakBITE1_as16(0)(0)',
    'SMA_MainSensor_CH2_MinPeakBITE1' => 'rb_csai_InitSensorData_st.MinPeakBITE1_as16(0)(1)',
    'SMA_MainSensor_CH2_MaxPeakBITE1' => 'rb_csai_InitSensorData_st.MaxPeakBITE1_as16(0)(1)',
    'SMA_MainSensor_CH3_MinPeakBITE1' => 'rb_csai_InitSensorData_st.MinPeakBITE1_as16(0)(2)',
    'SMA_MainSensor_CH3_MaxPeakBITE1' => 'rb_csai_InitSensorData_st.MaxPeakBITE1_as16(0)(2)',

    'SMA_MainSensor_CH1_MinPeakBITE1_S16' => 'rb_csai_InitSensorData_st.MinPeakBITE1_as16(0)(0)_S16',
    'SMA_MainSensor_CH1_MaxPeakBITE1_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITE1_as16(0)(0)_S16',
    'SMA_MainSensor_CH2_MinPeakBITE1_S16' => 'rb_csai_InitSensorData_st.MinPeakBITE1_as16(0)(1)_S16',
    'SMA_MainSensor_CH2_MaxPeakBITE1_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITE1_as16(0)(1)_S16',
    'SMA_MainSensor_CH3_MinPeakBITE1_S16' => 'rb_csai_InitSensorData_st.MinPeakBITE1_as16(0)(2)_S16',
    'SMA_MainSensor_CH3_MaxPeakBITE1_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITE1_as16(0)(2)_S16',

    ##BITE2 Peak
    'SMA_MainSensor_CH1_MinPeakBITE2' => 'rb_csai_InitSensorData_st.MinPeakBITE2_as16(0)(0)',
    'SMA_MainSensor_CH1_MaxPeakBITE2' => 'rb_csai_InitSensorData_st.MaxPeakBITE2_as16(0)(0)',
    'SMA_MainSensor_CH2_MinPeakBITE2' => 'rb_csai_InitSensorData_st.MinPeakBITE2_as16(0)(1)',
    'SMA_MainSensor_CH2_MaxPeakBITE2' => 'rb_csai_InitSensorData_st.MaxPeakBITE2_as16(0)(1)',
    'SMA_MainSensor_CH3_MinPeakBITE2' => 'rb_csai_InitSensorData_st.MinPeakBITE2_as16(0)(2)',
    'SMA_MainSensor_CH3_MaxPeakBITE2' => 'rb_csai_InitSensorData_st.MaxPeakBITE2_as16(0)(2)',

    'SMA_MainSensor_CH1_MinPeakBITE2_S16' => 'rb_csai_InitSensorData_st.MinPeakBITE2_as16(0)(0)_S16',
    'SMA_MainSensor_CH1_MaxPeakBITE2_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITE2_as16(0)(0)_S16',
    'SMA_MainSensor_CH2_MinPeakBITE2_S16' => 'rb_csai_InitSensorData_st.MinPeakBITE2_as16(0)(1)_S16',
    'SMA_MainSensor_CH2_MaxPeakBITE2_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITE2_as16(0)(1)_S16',
    'SMA_MainSensor_CH3_MinPeakBITE2_S16' => 'rb_csai_InitSensorData_st.MinPeakBITE2_as16(0)(2)_S16',
    'SMA_MainSensor_CH3_MaxPeakBITE2_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITE2_as16(0)(2)_S16',

    ##BITEOFF Peak
    'SMA_MainSensor_CH1_MinPeakBITEOFF' => 'rb_csai_InitSensorData_st.MinPeakBITEOff_as16(0)(0)',
    'SMA_MainSensor_CH1_MaxPeakBITEOFF' => 'rb_csai_InitSensorData_st.MaxPeakBITEOff_as16(0)(0)',
    'SMA_MainSensor_CH2_MinPeakBITEOFF' => 'rb_csai_InitSensorData_st.MinPeakBITEOff_as16(0)(1)',
    'SMA_MainSensor_CH2_MaxPeakBITEOFF' => 'rb_csai_InitSensorData_st.MaxPeakBITEOff_as16(0)(1)',
    'SMA_MainSensor_CH3_MinPeakBITEOFF' => 'rb_csai_InitSensorData_st.MinPeakBITEOff_as16(0)(2)',
    'SMA_MainSensor_CH3_MaxPeakBITEOFF' => 'rb_csai_InitSensorData_st.MaxPeakBITEOff_as16(0)(2)',

    'SMA_MainSensor_CH1_MinPeakBITEOFF_S16' => 'rb_csai_InitSensorData_st.MinPeakBITEOff_as16(0)(0)_S16',
    'SMA_MainSensor_CH1_MaxPeakBITEOFF_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITEOff_as16(0)(0)_S16',
    'SMA_MainSensor_CH2_MinPeakBITEOFF_S16' => 'rb_csai_InitSensorData_st.MinPeakBITEOff_as16(0)(1)_S16',
    'SMA_MainSensor_CH2_MaxPeakBITEOFF_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITEOff_as16(0)(1)_S16',
    'SMA_MainSensor_CH3_MinPeakBITEOFF_S16' => 'rb_csai_InitSensorData_st.MinPeakBITEOff_as16(0)(2)_S16',
    'SMA_MainSensor_CH3_MaxPeakBITEOFF_S16' => 'rb_csai_InitSensorData_st.MaxPeakBITEOff_as16(0)(2)_S16',

    ###BITE1 Threshold Reference Value
    'SMA_MainSensor_CH1_BITERefThds_MinAvgBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinAvgThd_as16(0)',
    'SMA_MainSensor_CH1_BITERefThds_MaxAvgBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxAvgThd_as16(0)',
    'SMA_MainSensor_CH2_BITERefThds_MinAvgBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinAvgThd_as16(1)',
    'SMA_MainSensor_CH2_BITERefThds_MaxAvgBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxAvgThd_as16(1)',
    'SMA_MainSensor_CH3_BITERefThds_MinAvgBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinAvgThd_as16(2)',
    'SMA_MainSensor_CH3_BITERefThds_MaxAvgBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxAvgThd_as16(2)',

    'SMA_MainSensor_CH1_BITERefThds_MinAvgBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinAvgThd_as16(0)_S16',
    'SMA_MainSensor_CH1_BITERefThds_MaxAvgBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxAvgThd_as16(0)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MinAvgBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinAvgThd_as16(1)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MaxAvgBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxAvgThd_as16(1)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MinAvgBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinAvgThd_as16(2)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MaxAvgBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxAvgThd_as16(2)_S16',

    'SMA_MainSensor_CH1_BITERefThds_MinPeakBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinPeakThd_as16(0)',
    'SMA_MainSensor_CH1_BITERefThds_MaxPeakBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxPeakThd_as16(0)',
    'SMA_MainSensor_CH2_BITERefThds_MinPeakBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinPeakThd_as16(1)',
    'SMA_MainSensor_CH2_BITERefThds_MaxPeakBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxPeakThd_as16(1)',
    'SMA_MainSensor_CH3_BITERefThds_MinPeakBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinPeakThd_as16(2)',
    'SMA_MainSensor_CH3_BITERefThds_MaxPeakBITE1' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxPeakThd_as16(2)',

    'SMA_MainSensor_CH1_BITERefThds_MinPeakBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinPeakThd_as16(0)_S16',
    'SMA_MainSensor_CH1_BITERefThds_MaxPeakBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxPeakThd_as16(0)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MinPeakBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinPeakThd_as16(1)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MaxPeakBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxPeakThd_as16(1)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MinPeakBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMinPeakThd_as16(2)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MaxPeakBITE1_S16' => 'rb_csai_BITERefThds_ast(0).BITE1RefMaxPeakThd_as16(2)_S16',

    ###BITE2 Threshold Reference Value
    'SMA_MainSensor_CH1_BITERefThds_MinAvgBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinAvgThd_as16(0)',
    'SMA_MainSensor_CH1_BITERefThds_MaxAvgBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxAvgThd_as16(0)',
    'SMA_MainSensor_CH2_BITERefThds_MinAvgBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinAvgThd_as16(1)',
    'SMA_MainSensor_CH2_BITERefThds_MaxAvgBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxAvgThd_as16(1)',
    'SMA_MainSensor_CH3_BITERefThds_MinAvgBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinAvgThd_as16(2)',
    'SMA_MainSensor_CH3_BITERefThds_MaxAvgBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxAvgThd_as16(2)',

    'SMA_MainSensor_CH1_BITERefThds_MinAvgBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinAvgThd_as16(0)_S16',
    'SMA_MainSensor_CH1_BITERefThds_MaxAvgBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxAvgThd_as16(0)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MinAvgBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinAvgThd_as16(1)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MaxAvgBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxAvgThd_as16(1)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MinAvgBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinAvgThd_as16(2)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MaxAvgBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxAvgThd_as16(2)_S16',

    'SMA_MainSensor_CH1_BITERefThds_MinPeakBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinPeakThd_as16(0)',
    'SMA_MainSensor_CH1_BITERefThds_MaxPeakBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxPeakThd_as16(0)',
    'SMA_MainSensor_CH2_BITERefThds_MinPeakBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinPeakThd_as16(1)',
    'SMA_MainSensor_CH2_BITERefThds_MaxPeakBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxPeakThd_as16(1)',
    'SMA_MainSensor_CH3_BITERefThds_MinPeakBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinPeakThd_as16(2)',
    'SMA_MainSensor_CH3_BITERefThds_MaxPeakBITE2' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxPeakThd_as16(2)',

    'SMA_MainSensor_CH1_BITERefThds_MinPeakBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinPeakThd_as16(0)_S16',
    'SMA_MainSensor_CH1_BITERefThds_MaxPeakBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxPeakThd_as16(0)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MinPeakBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinPeakThd_as16(1)_S16',
    'SMA_MainSensor_CH2_BITERefThds_MaxPeakBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxPeakThd_as16(1)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MinPeakBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMinPeakThd_as16(2)_S16',
    'SMA_MainSensor_CH3_BITERefThds_MaxPeakBITE2_S16' => 'rb_csai_BITERefThds_ast(0).BITE2RefMaxPeakThd_as16(2)_S16',

    ###BITEOFF Threshold Reference Value
    'SMA_MainSensor_CH1_BITEOffThds_MinAvgBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMinAvgThd_s16',
    'SMA_MainSensor_CH1_BITEOffThds_MaxAvgBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMaxAvgThd_s16',
    'SMA_MainSensor_CH2_BITEOffThds_MinAvgBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMinAvgThd_s16',
    'SMA_MainSensor_CH2_BITEOffThds_MaxAvgBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMaxAvgThd_s16',
    'SMA_MainSensor_CH3_BITEOffThds_MinAvgBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMinAvgThd_s16',
    'SMA_MainSensor_CH3_BITEOffThds_MaxAvgBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMaxAvgThd_s16',

    'SMA_MainSensor_CH1_BITEOffThds_MinAvgBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMinAvgThd_s16_S16',
    'SMA_MainSensor_CH1_BITEOffThds_MaxAvgBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMaxAvgThd_s16_S16',
    'SMA_MainSensor_CH2_BITEOffThds_MinAvgBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMinAvgThd_s16_S16',
    'SMA_MainSensor_CH2_BITEOffThds_MaxAvgBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMaxAvgThd_s16_S16',
    'SMA_MainSensor_CH3_BITEOffThds_MinAvgBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMinAvgThd_s16_S16',
    'SMA_MainSensor_CH3_BITEOffThds_MaxAvgBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMaxAvgThd_s16_S16',

    'SMA_MainSensor_CH1_BITEOffThds_MinPeakBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMinPeakThd_s16',
    'SMA_MainSensor_CH1_BITEOffThds_MaxPeakBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMaxPeakThd_s16',
    'SMA_MainSensor_CH2_BITEOffThds_MinPeakBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMinPeakThd_s16',
    'SMA_MainSensor_CH2_BITEOffThds_MaxPeakBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMaxPeakThd_s16',
    'SMA_MainSensor_CH3_BITEOffThds_MinPeakBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMinPeakThd_s16',
    'SMA_MainSensor_CH3_BITEOffThds_MaxPeakBITEOFF' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMaxPeakThd_s16',

    'SMA_MainSensor_CH1_BITEOffThds_MinPeakBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMinPeakThd_s16_S16',
    'SMA_MainSensor_CH1_BITEOffThds_MaxPeakBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(0).BITEOFFMaxPeakThd_s16_S16',
    'SMA_MainSensor_CH2_BITEOffThds_MinPeakBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMinPeakThd_s16_S16',
    'SMA_MainSensor_CH2_BITEOffThds_MaxPeakBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(1).BITEOFFMaxPeakThd_s16_S16',
    'SMA_MainSensor_CH3_BITEOffThds_MinPeakBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMinPeakThd_s16_S16',
    'SMA_MainSensor_CH3_BITEOffThds_MaxPeakBITEOFF_S16' => 'rb_csai_ChannelParameters_cast(0).BITEOffThds_ast(2).BITEOFFMaxPeakThd_s16_S16',

    ###FOC Threshold Reference Value
    'SMA_MainSensor_CH1_FOCRefThds_MinAvgFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMinAvgThd_s16',
    'SMA_MainSensor_CH1_FOCRefThds_MaxAvgFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMaxAvgThd_s16',
    'SMA_MainSensor_CH2_FOCRefThds_MinAvgFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMinAvgThd_s16',
    'SMA_MainSensor_CH2_FOCRefThds_MaxAvgFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMaxAvgThd_s16',
    'SMA_MainSensor_CH3_FOCRefThds_MinAvgFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMinAvgThd_s16',
    'SMA_MainSensor_CH3_FOCRefThds_MaxAvgFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMaxAvgThd_s16',

    'SMA_MainSensor_CH1_FOCRefThds_MinAvgFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMinAvgThd_s16_S16',
    'SMA_MainSensor_CH1_FOCRefThds_MaxAvgFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMaxAvgThd_s16_S16',
    'SMA_MainSensor_CH2_FOCRefThds_MinAvgFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMinAvgThd_s16_S16',
    'SMA_MainSensor_CH2_FOCRefThds_MaxAvgFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMaxAvgThd_s16_S16',
    'SMA_MainSensor_CH3_FOCRefThds_MinAvgFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMinAvgThd_s16_S16',
    'SMA_MainSensor_CH3_FOCRefThds_MaxAvgFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMaxAvgThd_s16_S16',

    'SMA_MainSensor_CH1_FOCRefThds_MinPeakFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMinPeakThd_s16',
    'SMA_MainSensor_CH1_FOCRefThds_MaxPeakFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMaxPeakThd_s16',
    'SMA_MainSensor_CH2_FOCRefThds_MinPeakFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMinPeakThd_s16',
    'SMA_MainSensor_CH2_FOCRefThds_MaxPeakFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMaxPeakThd_s16',
    'SMA_MainSensor_CH3_FOCRefThds_MinPeakFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMinPeakThd_s16',
    'SMA_MainSensor_CH3_FOCRefThds_MaxPeakFOC' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMaxPeakThd_s16',

    'SMA_MainSensor_CH1_FOCRefThds_MinPeakFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMinPeakThd_s16_S16',
    'SMA_MainSensor_CH1_FOCRefThds_MaxPeakFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(0).FOCMaxPeakThd_s16_S16',
    'SMA_MainSensor_CH2_FOCRefThds_MinPeakFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMinPeakThd_s16_S16',
    'SMA_MainSensor_CH2_FOCRefThds_MaxPeakFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(1).FOCMaxPeakThd_s16_S16',
    'SMA_MainSensor_CH3_FOCRefThds_MinPeakFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMinPeakThd_s16_S16',
    'SMA_MainSensor_CH3_FOCRefThds_MaxPeakFOC_S16' => 'rb_csai_ChannelParameters_cast(0).FOCThds_ast(2).FOCMaxPeakThd_s16_S16',

    ##InitialOffSet Value
    'SMA_MainSensor_CH1_InitialOffsetValue' => 'rb_csai_InitSensorData_st.InitialOffset_as16(0)(0)',
    'SMA_MainSensor_CH2_InitialOffsetValue' => 'rb_csai_InitSensorData_st.InitialOffset_as16(0)(1)',
    'SMA_MainSensor_CH3_InitialOffsetValue' => 'rb_csai_InitSensorData_st.InitialOffset_as16(0)(2)',

    ##Corrected FOC Value
    'SMA_MainSensor_CH1_FOCCorrectedOffsetValue' => 'rb_csai_InitSensorData_st.FOCCorrectedOffset_as16(0)(0)',
    'SMA_MainSensor_CH2_FOCCorrectedOffsetValue' => 'rb_csai_InitSensorData_st.FOCCorrectedOffset_as16(0)(1)',
    'SMA_MainSensor_CH3_FOCCorrectedOffsetValue' => 'rb_csai_InitSensorData_st.FOCCorrectedOffset_as16(0)(2)',

    #******************************* DTC's *************************************************
    'rb_syc_AsicIdMismatch_flt'                  => '0xF00049',                                           # 703,rb_syc_AsicIdMismatch_flt,0xF00049  AsicIdMismatch
    'rb_csem_InitGroup1SmaCentralSensorMain_flt' => '0xF00049',                                           # 44,rb_csem_InitGroup1Sma660Main_flt,0xF00049  InitGroup1Sma660Main
    'rb_csem_InitGroup2SmaCentralSensorMain_flt' => '0xF00049',                                           # 46,rb_csem_InitGroup2Sma660Main_flt,0xF00049  InitGroup2Sma660Main
    'rb_csem_InitGroup3SmaCentralSensorMain_flt' => '0xF00049',                                           # 48,rb_csem_InitGroup3Sma660Main_flt,0xF00049  InitGroup3Sma660Main
    'rb_csem_InitGroup4SmaCentralSensorMain_flt' => '0xF00049',                                           # 50,rb_csem_InitGroup4Sma660Main_flt,0x0xF00049  InitGroup4Sma660Main
    'rb_csem_InitGroup5SmaCentralSensorMain_flt' => '0x000000',                                           # 50,rb_csem_InitGroup4Sma660Main_flt,0x0xF00049  InitGroup4Sma660Main
    'rb_csem_CyclRTMonSmaCentralSensorMain_flt'  => '0xF00049',
    'rb_simc_SignalMonCtrlMain_flt'              => '0xF00049',
    'rb_spi_SpiRcvMsgCrcWrong_flt'               => '0xF00049',
    'AccXLgCh1_data_u8'                          => 'rb_csem_SensorDataRT_st.ChannelValue_as16(0)_S16',

    'Trigger_Value_C'          => 140,
    'Trigger_YawRateLfChl_S16' => 'rb_csic_RtComRxPayload_au16(7)_S16',
    'Trigger_AccXLgChl_S16'    => 'rb_csic_RtComRxPayload_au16(0)_S16',

    'TempFaultQualiTimeMin_C' => 0,
    'TempFaultQualiTimeMax_C' => 20,

    #***************************** Fault Mapping *******************************************
    'AsicIdMismatch_flt'      => 'rb_syc_AsicIdMismatch_flt',
    'InitGroup1_SMA_Main_flt' => 'rb_csem_InitGroup1SmaCentralSensorMain_flt',
    'InitGroup2_SMA_Main_flt' => 'rb_csem_InitGroup2SmaCentralSensorMain_flt',
    'InitGroup3_SMA_Main_flt' => 'rb_csem_InitGroup3SmaCentralSensorMain_flt',
    'InitGroup4_SMA_Main_flt' => 'rb_csem_InitGroup4SmaCentralSensorMain_flt',
    'InitGroup5_SMA_Main_flt' => 'rb_csem_InitGroup5SmaCentralSensorMain_flt',
    'CyclicRT_SMA_Main_flt'   => 'rb_csem_CyclRTMonSmaCentralSensorMain_flt',
    'Spi_CrcWrong_flt'        => 'rb_spi_SpiRcvMsgCrcWrong_flt',
    'Signal_MonCtrl_Main_flt' => 'rb_simc_SignalMonCtrlMain_flt',

    #rb_csai_InitStates_ten
    #-----------------------------------
## enum;rb_csai_InitStates_ten;rb_csai_CheckConfig_e;0;Configuration check
## enum;rb_csai_InitStates_ten;rb_csai_SoftReset_e;1;Soft reset
## enum;rb_csai_InitStates_ten;rb_csai_SetSpiDriverStrength_e;2;
## enum;rb_csai_InitStates_ten;rb_csai_ReadSerialNumbers_e;3;Read serial numbers
## enum;rb_csai_InitStates_ten;rb_csai_ProgramAndVerifyConfiguration_e;4;
## enum;rb_csai_InitStates_ten;rb_csai_SetupRTJobs_e;5;Setup RT job table
## enum;rb_csai_InitStates_ten;rb_csai_StoreInitOffset_e;6;Store initial offset
## enum;rb_csai_InitStates_ten;rb_csai_FastOffsetCancellation_e;7;Fast offset cancellation
## enum;rb_csai_InitStates_ten;rb_csai_StoreFOCCorrectedOffset_e;8;Store FOC Corrected Offset
## enum;rb_csai_InitStates_ten;rb_csai_BuiltInSelfTest_e;9;Built in self test
## enum;rb_csai_InitStates_ten;rb_csai_SensorIdProgramming_e;10;Sensor Id programming
## enum;rb_csai_InitStates_ten;rb_csai_SlowOffsetCancellation_e;11;Slow offset cancellation
## enum;rb_csai_InitStates_ten;rb_csai_EndOfProgramming_e;12;End of programming
## enum;rb_csai_InitStates_ten;rb_csai_InitCompleted_e;13;Initialization completed successfully
## enum;rb_csai_InitStates_ten;rb_csai_Disabled_e;14;Disabled due to errors
## enum;rb_csai_InitStates_ten;rb_csai_Deconfigured_e;15;Sensor deconfigured
## enum;rb_csai_InitStates_ten;rb_csai_MaxInitStates_e;16;Maximum init states
    #-------------------------------------
    'CheckConfig_C'                   => 0,
    'SoftReset_C'                     => 1,
    'SetSpiDriverStrength_C'          => 2,
    'ReadSerialNumbers_C'             => 3,
    'ProgramAndVerifyConfiguration_C' => 4,
    'SetupRTJobs_C'                   => 5,
    'StoreInitOffset_C'               => 6,
    'FastOffsetCancellation_C'        => 7,
    'StoreFOCCorrectedOffset_C'       => 8,
    'BuiltInSelfTest_C'               => 9,
    'SensorIdProgramming_C'           => 10,
    'SlowOffsetCancellation_C'        => 11,
    'EndOfProgramming_C'              => 12,
    'InitCompleted_C'                 => 13,
    'Disabled_or_INIT_aborted_C'      => 14,
    'Deconfigured_C'                  => 15,

    #    Overall Initialization state
    'SMA_MainSensor_InitState'    => 'rb_csai_AllStatesDuringInit_st.InitState_aen(0)',
    'SMA_MainSensor_InitState_U8' => 'rb_csai_AllStatesDuringInit_st.InitState_aen(0)_U8',

    #******************************************************************************
    #                               SMA Sensor Fault Handeling
    #******************************************************************************
    'SMAInitGroup1Fault_DebounceCounter' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(0)',
    'SMAInitGroup2Fault_DebounceCounter' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(1)',
    'SMAInitGroup3Fault_DebounceCounter' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(2)',
    'SMAInitGroup4Fault_DebounceCounter' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(3)',
    'SMAInitGroup5Fault_DebounceCounter' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(4)',
    'SMACyclicFault_DebounceCounter'     => 'rb_csem_DebounceCounters_st.SMACyclicFaults_as32(0)',

    'SMAInitGroup1Fault_DebounceCounter_S32' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(0)_S32',
    'SMAInitGroup2Fault_DebounceCounter_S32' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(1)_S32',
    'SMAInitGroup3Fault_DebounceCounter_S32' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(2)_S32',
    'SMAInitGroup4Fault_DebounceCounter_S32' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(3)_S32',
    'SMAInitGroup5Fault_DebounceCounter_S32' => 'rb_csem_DebounceCounters_st.SMAInitFaults_as32(0)(4)_S32',
    'SMACyclicFault_DebounceCounter_S32'     => 'rb_csem_DebounceCounters_st.SMACyclicFaults_as32(0)_S32',

    'SMAInitGroup1Fault_FaultsQualified_info' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(0)',
    'SMAInitGroup2Fault_FaultsQualified_info' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(1)',
    'SMAInitGroup3Fault_FaultsQualified_info' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(2)',
    'SMAInitGroup4Fault_FaultsQualified_info' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(3)',
    'SMAInitGroup5Fault_FaultsQualified_info' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(4)',
    'SMACyclicFault_FaultsQualified_info'     => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).CyclicfaultQualified_en',

    'SMAInitGroup1Fault_FaultsQualified_info_U8' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(0)_U8',
    'SMAInitGroup2Fault_FaultsQualified_info_U8' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(1)_U8',
    'SMAInitGroup3Fault_FaultsQualified_info_U8' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(2)_U8',
    'SMAInitGroup4Fault_FaultsQualified_info_U8' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(3)_U8',
    'SMAInitGroup5Fault_FaultsQualified_info_U8' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(4)_U8',
    'SMACyclicFault_FaultsQualified_info_U8'     => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).CyclicfaultQualified_en_U8',

######Fault Qualified Info
##enum;rb_csem_DemStepsType_ten;rb_csem_TestNotDone_e;0;
##enum;rb_csem_DemStepsType_ten;rb_csem_TestDisturbed_e;1;
##enum;rb_csem_DemStepsType_ten;rb_csem_TestPassed_e;2;
##enum;rb_csem_DemStepsType_ten;rb_csem_TestFailed_e;3;

    'TestNotDone_C'   => 0,
    'TestDisturbed_C' => 1,
    'TestPassed_C'    => 2,
    'TestFailed_C'    => 3,

    'SMAInitGroup1Fault_FilteredDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(0)',
    'SMAInitGroup2Fault_FilteredDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(1)',
    'SMAInitGroup3Fault_FilteredDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(2)',
    'SMAInitGroup4Fault_FilteredDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(3)',
    'SMAInitGroup5Fault_FilteredDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(4)',
    'SMACyclicFault_FilteredDebugInfo'     => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).CyclicFaultFilteredDebugInfo_u16',

    'SMAInitGroup1Fault_FilteredDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(0)_U16',
    'SMAInitGroup2Fault_FilteredDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(1)_U16',
    'SMAInitGroup3Fault_FilteredDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(2)_U16',
    'SMAInitGroup4Fault_FilteredDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(3)_U16',
    'SMAInitGroup5Fault_FilteredDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultFilterededDebugInfo_au16(4)_U16',
    'SMACyclicFault_FilteredDebugInfo_U16'     => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).CyclicFaultFilteredDebugInfo_u16_U16',

    'SMAInitGroup1Fault_DisturbedDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(0)',
    'SMAInitGroup2Fault_DisturbedDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(1)',
    'SMAInitGroup3Fault_DisturbedDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(2)',
    'SMAInitGroup4Fault_DisturbedDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(3)',
    'SMAInitGroup5Fault_DisturbedDebugInfo' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(4)',
    'SMACyclicFault_DisturbedDebugInfo'     => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).CyclicFaultDisturbedDebugInfo_u16',

    'SMAInitGroup1Fault_DisturbedDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(0)_U16',
    'SMAInitGroup2Fault_DisturbedDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(1)_U16',
    'SMAInitGroup3Fault_DisturbedDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(2)_U16',
    'SMAInitGroup4Fault_DisturbedDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(3)_U16',
    'SMAInitGroup5Fault_DisturbedDebugInfo_U16' => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).InternalSensorFaultDisturbedDebugInfo_au16(4)_U16',
    'SMACyclicFault_DisturbedDebugInfo_U16'     => 'rb_csem_FaultStorageData_st.InfoClusterSMA_ast(0).CyclicFaultDisturbedDebugInfo_u16_U16',

    #******************************************************************************
    #                               SMA Sensor Faults
    #******************************************************************************
    # the indexes for Dem_AllEventsStatusByte() array are the fault numbers,
    # which can be found in *.flt file

    # INITGroup Faults
    #---------------------
    'InitGroup1SmaMain_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_InitGroup1SmaCentralSensorMain_flt__)_U8',
    'InitGroup2SmaMain_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_InitGroup2SmaCentralSensorMain_flt__)_U8',
    'InitGroup3SmaMain_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_InitGroup3SmaCentralSensorMain_flt__)_U8',
    'InitGroup4SmaMain_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_InitGroup4SmaCentralSensorMain_flt__)_U8',
    'InitGroup5SmaMain_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_InitGroup5SmaCentralSensorMain_flt__)_U8',

    'CyclRTMonSmaMain_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_CyclRTMonSmaCentralSensorMain_flt__)_U8',
    'SignalMonCtrlMain_flt_U8'      => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlMain_flt__)_U8',
    'AsicIdMismatch_fltStatus_U8'   => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_syc_AsicIdMismatch_flt__)_U8',

    #******************************************************************************
    #                                API to Algo
    #******************************************************************************
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_MainAccX_e;0;
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_MainAccY_e;1;
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_PlausiAccX_e;2;
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_PlausiAccY_e;3;

    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_PlausiAccZ_e;4;SMA_az_highG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccXLg_e;5;SMI_ax_lowG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccXHgMon_e;6;SMI_ax_midG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccYLg_e;7;SMI_ay_lowG

    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccYHgMon_e;8;SMI_ay_midG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccYLgPlausi_e;9;SMI_ay_lowG_redundant
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccZLg_e;10;SMI_az_lowG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_RollRateLf_e;11;SMI_rateX

    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_YawRateLf_e;12;SMI_rateZ
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_YawRateLfPlausi_e;13;SMI_rateZ_redundant
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_PitchRateLf_e;14;SMI_rateY
    #
    #AlgoDataValid
    #----------------------------------------------
    'AccXLgChl_AlgoDataValid_U8'    => 'rb_csem_SensorDataRT_st.DataValid_b32_U8',
    'AccXHgMonChl_AlgoDataValid_U8' => 'rb_csem_SensorDataRT_st.DataValid_b32_U8',
    'AccYLgChl_AlgoDataValid_U8'    => 'rb_csem_SensorDataRT_st.DataValid_b32_U8',
    'AccYHgMonChl_AlgoDataValid_U8' => 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',

    #	'AccYLgPlausiChl_AlgoDataValid_U8'   		=> 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',
    'AccZLgChl_AlgoDataValid_U8'     => 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',
    'RollRateLfChl_AlgoDataValid_U8' => 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',
    'YawRateLfChl_AlgoDataValid_U8'  => 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',

    #	'YawRateLfPlausiChl_AlgoDataValid_U8'		=> 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',
    'PitchRateLfChl_AlgoDataValid_U8' => 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',

    'SMA_SMI_Algo_data_valid_bits_U16'   => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'SMA_SMI_Algo_data_valid_bits_U16_C' => '0b0101110111111111',                          #All sensor channels are configured including SMA and SMI.

    # AlgoDataValid_U16
    #----------------------------------------------
    'AccXLgChl_AlgoDataValid_U16'    => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'AccXHgMonChl_AlgoDataValid_U16' => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'AccYLgChl_AlgoDataValid_U16'    => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'AccYHgMonChl_AlgoDataValid_U16' => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',

    #	'AccYLgPlausiChl_AlgoDataValid_U16'         => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'AccZLgChl_AlgoDataValid_U16'     => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'RollRateLfChl_AlgoDataValid_U16' => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'YawRateLfChl_AlgoDataValid_U16'  => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',

    #	'YawRateLfPlausiChl_AlgoDataValid_U16'      => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',
    'PitchRateLfChl_AlgoDataValid_U16' => 'rb_csem_SensorDataRT_st.DataValid_b32_U16',

    #AlgoDataValid_b32.0
    #-------------------
    'AlgoDataValid_b32.0_U8'           => 'rb_csem_SensorDataRT_st.DataValid_b32_U8',
    'AccXLgChl_AlgoData_NotValid_C'    => '0bxx0xxxxx',
    'AccXLgChl_AlgoData_Valid_C'       => '0bxx1xxxxx',
    'AccXHgMonChl_AlgoData_NotValid_C' => '0bx0xxxxxx',
    'AccXHgMonChl_AlgoData_Valid_C'    => '0bx1xxxxxx',
    'AccYLgChl_AlgoData_NotValid_C'    => '0b0xxxxxxx',
    'AccYLgChl_AlgoData_Valid_C'       => '0b1xxxxxxx',

    #AlgoDataValid_b32.1
    #-------------------
    'AlgoDataValid_b32.1_U8'           => 'rb_csem_SensorDataRT_st.DataValid_b32.1_U8',
    'AccYHgMonChl_AlgoData_NotValid_C' => '0bxxxxxxx0',
    'AccYHgMonChl_AlgoData_Valid_C'    => '0bxxxxxxx1',

    #	'AccYLgPlausiChl_AlgoData_NotValid_C'    	=> '0bxxxxxx0x',
    #	'AccYLgPlausiChl_AlgoData_Valid_C'       	=> '0bxxxxxx1x',
    'AccZLgChl_AlgoData_NotValid_C'     => '0bxxxxx0xx',
    'AccZLgChl_AlgoData_Valid_C'        => '0bxxxxx1xx',
    'RollRateLfChl_AlgoData_NotValid_C' => '0bxxxx0xxx',
    'RollRateLfChl_AlgoData_Valid_C'    => '0bxxxx1xxx',
    'YawRateLfChl_AlgoData_NotValid_C'  => '0bxxx0xxxx',
    'YawRateLfChl_AlgoData_Valid_C'     => '0bxxx1xxxx',

    #	'YawRateLfPlausiChl_AlgoData_NotValid_C' 	=> '0bxx0xxxxx',
    #	'YawRateLfPlausiChl_AlgoData_Valid_C'    	=> '0bxx1xxxxx',
    'PitchRateLfChl_AlgoData_NotValid_C' => '0bx0xxxxxx',
    'PitchRateLfChl_AlgoData_Valid_C'    => '0bx1xxxxxx',

    #AlgoDataValid_b32
    #-----------------
    # 'MainSensor_AlgoData_NotValid_C'        => '0bxxxxxxxxxxxxxxxxx1x111X11111x100',
    # 'MainSensor_AlgoData_Valid_C'           => '0bxxxxxxxxxxxxxxxxx1x111X11111x111',

    #AlgoDataValid_b32
    #-----------------
    # 'AlgoDataValid_V'  		 					=> 'rb_csem_SensorDataRT_st.DataValid_b32',
    #    YawRateLf, RollRateLfChl, AccZLgChl, AccYHgMonChl, AccYLgChl, AccXHgMonChl, AccXLgChl
    'InertialSensor1_AlgoData_NotValid_C' => '0bxxxxxxxxxxxxxxxxxxx000x0000xxxxx',
    'InertialSensor1_AlgoData_Valid_C'    => '0bxxxxxxxxxxxxxxxxxxx111x1111xxxxx',

    #    PitchRateLfChl
    'InertialSensor2_AlgoData_NotValid_C' => '0bxxxxxxxxxxxxxxxxx0xxxxxxxxxxxxxx',
    'InertialSensor2_AlgoData_Valid_C'    => '0bxxxxxxxxxxxxxxxxx1xxxxxxxxxxxxxx',

    'AccXLgChl_AlgoData32_NotValid_C'      => '0bxxxxxxxxxxxxxxxxx1011101110xxxxx',
    'AllSmiChl_AlgoData32_Valid_C'         => '0bxxxxxxxxxxxxxxxxxxx1111011111xxx',
    'AccXLgChl_AlgoData32_Valid_C'         => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',
    'AccXHgMonChl_AlgoData32_NotValid_C'   => '0bxxxxxxxxxxxxxxxxx1011101101xxxxx',
    'AccXHgMonChl_AlgoData32_Valid_C'      => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',
    'AccYLgChl_AlgoData32_NotValid_C'      => '0bxxxxxxxxxxxxxxxxx1011101011xxxxx',
    'AccYLgChl_AlgoData32_Valid_C'         => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',
    'AccYHgMonChl_AlgoData32_NotValid_C'   => '0bxxxxxxxxxxxxxxxxx1011100111xxxxx',
    'AccYHgMonChl_AlgoData32_Valid_C'      => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',
    'AccZLgChl_AlgoData32_NotValid_C'      => '0bxxxxxxxxxxxxxxxxx1011001111xxxxx',
    'AccZLgChl_AlgoData32_Valid_C'         => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',
    'RollRateLfChl_AlgoData32_NotValid_C'  => '0bxxxxxxxxxxxxxxxxx1010101111xxxxx',
    'RollRateLfChl_AlgoData32_Valid_C'     => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',
    'YawRateLfChl_AlgoData32_NotValid_C'   => '0bxxxxxxxxxxxxxxxxx1001101111xxxxx',
    'YawRateLfChl_AlgoData32_Valid_C'      => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',
    'PitchRateLfChl_AlgoData32_NotValid_C' => '0bxxxxxxxxxxxxxxxxx0011101111xxxxx',
    'PitchRateLfChl_AlgoData32_Valid_C'    => '0bxxxxxxxxxxxxxxxxx1011101111xxxxx',

    'AccXLgChl_AlgoData32_NotConfig_NotValid_C'      => '0bxxxxxxxxxxxxxxxxxxx00000000xxxxx',
    'AccXLgChl_AlgoData32_NotConfig_Valid_C'         => '0bxxxxxxxxxxxxxxxxxxx11101111xxxxx',
    'AccYLgChl_AlgoData32_NotConfig_NotValid_C'      => '0bxxxxxxxxxxxxxxxxxxx00000000xxxxx',
    'AccYLgChl_AlgoData32_NotConfig_Valid_C'         => '0bxxxxxxxxxxxxxxxxxxx11101111xxxxx',
    'AccZLgChl_AlgoData32_NotConfig_NotValid_C'      => '0bxxxxxxxxxxxxxxxxxxx00000000xxxxx',
    'AccZLgChl_AlgoData32_NotConfig_Valid_C'         => '0bxxxxxxxxxxxxxxxxxxx11101111xxxxx',
    'RollRateLfChl_AlgoData32_NotConfig_NotValid_C'  => '0bxxxxxxxxxxxxxxxxxxx00000000xxxxx',
    'RollRateLfChl_AlgoData32_NotConfig_Valid_C'     => '0bxxxxxxxxxxxxxxxxxxx11101111xxxxx',
    'YawRateLfChl_AlgoData32_NotConfig_NotValid_C'   => '0bxxxxxxxxxxxxxxxxxxx00000000xxxxx',
    'YawRateLfChl_AlgoData32_NotConfig_Valid_C'      => '0bxxxxxxxxxxxxxxxxxxx11101111xxxxx',
    'PitchRateLfChl_AlgoData32_NotConfig_NotValid_C' => '0bxxxxxxxxxxxxxxxxx0xxxxxxxxxxxxxx',
    'PitchRateLfChl_AlgoData32_NotConfig_Valid_C'    => '0bxxxxxxxxxxxxxxxxx1xxxxxxxxxxxxxx',

    #InertDataOverload
    #----------------------------------------------
    'AccXLgChl_InertDataOverload_U8'    => 'rb_csem_SensorDataRT_st.InertDataOverload_b32_U8',
    'AccXHgMonChl_InertDataOverload_U8' => 'rb_csem_SensorDataRT_st.InertDataOverload_b32_U8',
    'AccYLgChl_InertDataOverload_U8'    => 'rb_csem_SensorDataRT_st.InertDataOverload_b32_U8',

    'AccYHgMonChl_InertDataOverload_U8' => 'rb_csem_SensorDataRT_st.InertDataOverload_b32.1_U8',

    #	'AccYLgPlausiChl_InertDataOverload_U8'   	=> 'rb_csem_SensorDataRT_st.InertDataOverload_b32.1_U8',
    'AccZLgChl_InertDataOverload_U8'     => 'rb_csem_SensorDataRT_st.InertDataOverload_b32.1_U8',
    'RollRateLfChl_InertDataOverload_U8' => 'rb_csem_SensorDataRT_st.InertDataOverload_b32.1_U8',
    'YawRateLfChl_InertDataOverload_U8'  => 'rb_csem_SensorDataRT_st.InertDataOverload_b32.1_U8',

    #	'YawRateLfPlausiChl_InertDataOverload_U8'	=> 'rb_csem_SensorDataRT_st.InertDataOverload_b32.1_U8',
    'PitchRateLfChl_InertDataOverload_U8' => 'rb_csem_SensorDataRT_st.InertDataOverload_b32.1_U8',

    #InertDataOverload_b32.0
    #-----------------------
    'AccXLgChl_InertDataOverload_0_C'    => '0bxx0xxxxx',
    'AccXLgChl_InertDataOverload_1_C'    => '0bxx1xxxxx',
    'AccXHgMonChl_InertDataOverload_0_C' => '0bx0xxxxxx',
    'AccXHgMonChl_InertDataOverload_1_C' => '0bx1xxxxxx',
    'AccYLgChl_InertDataOverload_0_C'    => '0b0xxxxxxx',
    'AccYLgChl_InertDataOverload_1_C'    => '0b1xxxxxxx',

    #InertDataOverload_b32.1
    #-----------------------
    'AccYHgMonChl_InertDataOverload_0_C' => '0bxxxxxxx0',
    'AccYHgMonChl_InertDataOverload_1_C' => '0bxxxxxxx1',

    #	'AccYLgPlausiChl_InertDataOverload_0_C'    	=> '0bxxxxxx0x',
    #	'AccYLgPlausiChl_InertDataOverload_1_C'    	=> '0bxxxxxx1x',
    'AccZLgChl_InertDataOverload_0_C'     => '0bxxxxx0xx',
    'AccZLgChl_InertDataOverload_1_C'     => '0bxxxxx1xx',
    'RollRateLfChl_InertDataOverload_0_C' => '0bxxxx0xxx',
    'RollRateLfChl_InertDataOverload_1_C' => '0bxxxx1xxx',
    'YawRateLfChl_InertDataOverload_0_C'  => '0bxxx0xxxx',
    'YawRateLfChl_InertDataOverload_1_C'  => '0bxxx1xxxx',

    #	'YawRateLfPlausiChl_InertDataOverload_0_C' 	=> '0bxx0xxxxx',
    #	'YawRateLfPlausiChl_InertDataOverload_1_C' 	=> '0bxx1xxxxx',
    'PitchRateLfChl_InertDataOverload_0_C' => '0bx0xxxxxx',
    'PitchRateLfChl_InertDataOverload_1_C' => '0bx1xxxxxx',

    # SensorDataComFaultRT (requirement from Toyota, related to CRC fault)
    #----------------------------------------------
    'AccXLgChl_SensorDataComFaultRT_U8'    => 'rb_csem_SensorDataComFaultRT_b32_U8',
    'AccXHgMonChl_SensorDataComFaultRT_U8' => 'rb_csem_SensorDataComFaultRT_b32_U8',
    'AccYLgChl_SensorDataComFaultRT_U8'    => 'rb_csem_SensorDataComFaultRT_b32_U8',

    'AccYHgMonChl_SensorDataComFaultRT_U8' => 'rb_csem_SensorDataComFaultRT_b32.1_U8',

    #	'AccYLgPlausiChl_SensorDataComFaultRT_U8'   	=> 'rb_csem_SensorDataComFaultRT_b32.1_U8',
    'AccZLgChl_SensorDataComFaultRT_U8'     => 'rb_csem_SensorDataComFaultRT_b32.1_U8',
    'RollRateLfChl_SensorDataComFaultRT_U8' => 'rb_csem_SensorDataComFaultRT_b32.1_U8',
    'YawRateLfChl_SensorDataComFaultRT_U8'  => 'rb_csem_SensorDataComFaultRT_b32.1_U8',

    #	'YawRateLfPlausiChl_SensorDataComFaultRT_U8'	=> 'rb_csem_SensorDataComFaultRT_b32.1_U8',
    'PitchRateLfChl_SensorDataComFaultRT_U8' => 'rb_csem_SensorDataComFaultRT_b32.1_U8',

    #SensorDataComFaultRT_b32.0
    #-----------------------
    'AccXLgChl_SensorDataComFaultRT_0_C'    => '0bxx0xxxxx',
    'AccXLgChl_SensorDataComFaultRT_1_C'    => '0bxx1xxxxx',
    'AccXHgMonChl_SensorDataComFaultRT_0_C' => '0bx0xxxxxx',
    'AccXHgMonChl_SensorDataComFaultRT_1_C' => '0bx1xxxxxx',
    'AccYLgChl_SensorDataComFaultRT_0_C'    => '0b0xxxxxxx',
    'AccYLgChl_SensorDataComFaultRT_1_C'    => '0b1xxxxxxx',

    #SensorDataComFaultRT_b32.1
    #-----------------------
    'AccYHgMonChl_SensorDataComFaultRT_0_C' => '0bxxxxxxx0',
    'AccYHgMonChl_SensorDataComFaultRT_1_C' => '0bxxxxxxx1',

    #	'AccYLgPlausiChl_SensorDataComFaultRT_0_C'    	=> '0bxxxxxx0x',
    #	'AccYLgPlausiChl_SensorDataComFaultRT_1_C'    	=> '0bxxxxxx1x',
    'AccZLgChl_SensorDataComFaultRT_0_C'     => '0bxxxxx0xx',
    'AccZLgChl_SensorDataComFaultRT_1_C'     => '0bxxxxx1xx',
    'RollRateLfChl_SensorDataComFaultRT_0_C' => '0bxxxx0xxx',
    'RollRateLfChl_SensorDataComFaultRT_1_C' => '0bxxxx1xxx',
    'YawRateLfChl_SensorDataComFaultRT_0_C'  => '0bxxx0xxxx',
    'YawRateLfChl_SensorDataComFaultRT_1_C'  => '0bxxx1xxxx',

    #	'YawRateLfPlausiChl_SensorDataComFaultRT_0_C' 	=> '0bxx0xxxxx',
    #	'YawRateLfPlausiChl_SensorDataComFaultRT_1_C' 	=> '0bxx1xxxxx',
    'PitchRateLfChl_SensorDataComFaultRT_0_C' => '0bx0xxxxxx',
    'PitchRateLfChl_SensorDataComFaultRT_1_C' => '0bx1xxxxxx',

    #******************************************************************************
    #                            API to Customer
    #******************************************************************************
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccXLg_e;0;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccXHgMon_e;1;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccYLg_e;2;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccYHgMon_e;3;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccYLgPlausi_e;4;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccZLg_e;5;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_RollRateLf_e;6;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_YawRateLf_e;7;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_YawRateLfPlausi_e;8;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_PitchRateLf_e;9;
    #
    #   ChlState API to Customer
    #---------------------------
    'AccXLgChl_State_U8'    => 'rb_csim_ChlState_aen(0)_U8',
    'AccXHgMonChl_State_U8' => 'rb_csim_ChlState_aen(1)_U8',
    'AccYLgChl_State_U8'    => 'rb_csim_ChlState_aen(2)_U8',
    'AccYHgMonChl_State_U8' => 'rb_csim_ChlState_aen(3)_U8',

    #	'AccYLgPlausiChl_State_U8'			=> 'rb_csim_ChlState_aen(4)_U8',
    'AccZLgChl_State_U8'     => 'rb_csim_ChlState_aen(4)_U8',
    'RollRateLfChl_State_U8' => 'rb_csim_ChlState_aen(6)_U8',
    'YawRateLfChl_State_U8'  => 'rb_csim_ChlState_aen(7)_U8',

    #	'YawRateLfPlausiChl_State_U8'       => 'rb_csim_ChlState_aen(8)_U8',
    'PitchRateLfChl_State_U8' => 'rb_csim_ChlState_aen(8)_U8',

    'AccXLgChl_State_V'    => 'rb_csim_ChlState_aen(0)',
    'AccXHgMonChl_State_V' => 'rb_csim_ChlState_aen(1)',
    'AccYLgChl_State_V'    => 'rb_csim_ChlState_aen(2)',
    'AccYHgMonChl_State_V' => 'rb_csim_ChlState_aen(3)',

    #	'AccYLgPlausiChl_State_V'   		=> 'rb_csim_ChlState_aen(4)',
    'AccZLgChl_State_V'     => 'rb_csim_ChlState_aen(4)',
    'RollRateLfChl_State_V' => 'rb_csim_ChlState_aen(6)',
    'YawRateLfChl_State_V'  => 'rb_csim_ChlState_aen(7)',

    #	'YawRateLfPlausiChl_State_V'		=> 'rb_csim_ChlState_aen(8)',
    'PitchRateLfChl_State_V' => 'rb_csim_ChlState_aen(8)',

    #enum;rb_csem_ChannelState_ten;rb_csem_ChlInitInProgress_e;0;Channel initialization in progress
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlNotConfigured_e;1;Channel not configured
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlOk_e;2;Channel OK
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlTemporaryError_e;3;Channel temporary error (out of spec)
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlPermErrorDueSensorErr_e;4;Channel permanent error (sensor perm flt)
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlPermErrorCyclThisPOC_e;5;Channel permanent error (cyclic this POC)
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlPermErrorCyclPrevPOC_e;6;Channel permanent error (cyclic prev POC)
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlPermErrorDueExtReq_e;7;Channel permanent error (external request, e.g. ASI)
    #enum;rb_csem_ChannelState_ten;rb_csem_ChlNotSupported_e;8;Channel is not supported
    #
    # Internal customer fault status
    'ChlInitInProgress_C'        => 0,
    'ChlNotConfigured_C'         => 1,
    'ChlOk_C'                    => 2,
    'ChlTemporaryError_C'        => 3,
    'ChlPermErrorDueSensorErr_C' => 4,
    'ChlPermErrorCyclThisPOC_C'  => 5,
    'ChlPermErrorCyclPrevPOC_C'  => 6,
    'ChlPermErrorDueExtReq_C'    => 7,
    'ChlNotSupported_C'          => 8,

    # Mapping for customer fault status on CAN
    'ChlInitInProgressCAN_C'        => 0,
    'ChlNotConfiguredCAN_C'         => 1,
    'ChlOkCAN_C'                    => 2,
    'ChlTemporaryErrorCAN_C'        => 3,
    'ChlPermErrorDueSensorErrCAN_C' => 3,
    'ChlPermErrorCyclThisPOCCAN_C'  => 3,
    'ChlPermErrorCyclPrevPOCCAN_C'  => 3,
    'ChlPermErrorDueExtReqCAN_C'    => 3,
    'ChlNotSupportedCAN_C'          => 1,

    # Mapping for customer fault status signal name on CAN
    'VDS_LinearSignalStatus'  => 'VDS_CANFDLinearSignalStatus',
    'VDS_LateralSignalStatus' => 'VDS_CANFDLateralSignalStatus',
    'VDS_HeaveSignalStatus'   => 'VDS_CANFDHeaveSignalStatus',
    'VDS_YawSignalStatus'     => 'VDS_CANFDYawSignalStatus',
    'VDS_RollSignalStatus'    => 'VDS_CANFDRollSignalStatus',
    'VDS_PitchSignalStatus'   => 'VDS_CANFDPitchSignalStatus',

    # Mapping for customer signal name on CAN
    'VDS_LinearSignalData'  => 'VDS_CANFDLinearSignalData',
    'VDS_LateralSignalData' => 'VDS_CANFDLateralSignalData',
    'VDS_HeaveSignalData'   => 'VDS_CANFDHeaveSignalData',
    'VDS_YawSignalData'     => 'VDS_CANFDYawSignalData',
    'VDS_RollSignalData'    => 'VDS_CANFDRollSignalData',
    'VDS_PitchSignalData'   => 'VDS_CANFDPitchSignalData',

    # VDS CAN signal evaluation
    'AccValue_C'        => 20000,    #5000Lsb/g in CA project
    'RateValue_C'       => 12000,    #100grad/s in CA project
                                     # 'RateValue_C' => 20000, #100grad/s in CA project
    'RateValue_Init_C'  => 20000,    #100grad/s in CA project
    'AccValue_Init_C'   => 4000,     #100grad/s in CA project
    'Sample_Cnt'        => 501,      #Sample Count for 500ms
    'Sample_Cnt_Steady' => 900,      #Sample Count for 900ms

    #enum;rb_sfh_FilterChlList_ten;rb_sfh_AccXLg15HzCS_e;0;
    #enum;rb_sfh_FilterChlList_ten;rb_sfh_AccYLg15HzCS_e;1;
    #enum;rb_sfh_FilterChlList_ten;rb_sfh_AccZLg15HzCS_e;2;
    #enum;rb_sfh_FilterChlList_ten;rb_sfh_RollRate15HzCS_e;3;
    #enum;rb_sfh_FilterChlList_ten;rb_sfh_PitchRate15HzCS_e;4;
    #enum;rb_sfh_FilterChlList_ten;rb_sfh_YawRate15HzCS_e;5;
    #
    #   ChlState API to Customer CAN interface
    #-----------------------------------------
    'AccXLgChl_State_sfh_U8'      => 'rb_sfh_SensChlState_aen(0)_U8',
    'AccYLgChl_State_sfh_U8'      => 'rb_sfh_SensChlState_aen(1)_U8',
    'AccZLgChl_State_sfh_U8'      => 'rb_sfh_SensChlState_aen(2)_U8',
    'RollRateLfChl_State_sfh_U8'  => 'rb_sfh_SensChlState_aen(3)_U8',
    'PitchRateLfChl_State_sfh_U8' => 'rb_sfh_SensChlState_aen(4)_U8',
    'YawRateLfChl_State_sfh_U8'   => 'rb_sfh_SensChlState_aen(5)_U8',

    'AccXLgChl_OutputBuffer_sfh_S16'      => 'rb_sfh_OutputBuffer_s16(0)_S16',
    'AccYLgChl_OutputBuffer_sfh_S16'      => 'rb_sfh_OutputBuffer_s16(1)_S16',
    'AccZLgChl_OutputBuffer_sfh_S16'      => 'rb_sfh_OutputBuffer_s16(2)_S16',
    'RollRateLfChl_OutputBuffer_sfh_S16'  => 'rb_sfh_OutputBuffer_s16(3)_S16',
    'PitchRateLfChl_OutputBuffer_sfh_S16' => 'rb_sfh_OutputBuffer_s16(4)_S16',
    'YawRateLfChl_OutputBuffer_sfh_S16'   => 'rb_sfh_OutputBuffer_s16(5)_S16',

    #******************************************************************************
    #                          Sensor channels
    #******************************************************************************
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccXLg_e;0;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccXHgMon_e;1;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccYLg_e;2;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccYHgMon_e;3;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccYLgPlausi_e;4;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_AccZLg_e;5;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_RollRateLf_e;6;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_YawRateLf_e;7;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_YawRateLfPlausi_e;8;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_PitchRateLf_e;9;
    #
    #   RawData_U8
    #-------------
    'AccXLgChl_RawData_U8'    => 'rb_csic_RtComRxPayload_au16(0)_U8',
    'AccXHgMonChl_RawData_U8' => 'rb_csic_RtComRxPayload_au16(1)_U8',
    'AccYLgChl_RawData_U8'    => 'rb_csic_RtComRxPayload_au16(2)_U8',
    'AccYHgMonChl_RawData_U8' => 'rb_csic_RtComRxPayload_au16(3)_U8',

    #	'AccYLgPlausiChl_RawData_U8'   		=> 'rb_csic_RtComRxPayload_au16(4)_U8',
    'AccZLgChl_RawData_U8'     => 'rb_csic_RtComRxPayload_au16(5)_U8',
    'RollRateLfChl_RawData_U8' => 'rb_csic_RtComRxPayload_au16(6)_U8',
    'YawRateLfChl_RawData_U8'  => 'rb_csic_RtComRxPayload_au16(7)_U8',

    #	'YawRateLfPlausiChl_RawData_U8'     => 'rb_csic_RtComRxPayload_au16(8)_U8',
    'PitchRateLfChl_RawData_U8' => 'rb_csic_RtComRxPayload_au16(9)_U8',
    #
    #   RawData_U16
    #--------------
    'AccXLgChl_RawData_S16'    => 'rb_csic_RtComRxPayload_au16(0)_S16',
    'AccXHgMonChl_RawData_S16' => 'rb_csic_RtComRxPayload_au16(1)_S16',
    'AccYLgChl_RawData_S16'    => 'rb_csic_RtComRxPayload_au16(2)_S16',
    'AccYHgMonChl_RawData_S16' => 'rb_csic_RtComRxPayload_au16(3)_S16',

    #	'AccYLgPlausiChl_RawData_S16'   	=> 'rb_csic_RtComRxPayload_au16(4)_S16',
    'AccZLgChl_RawData_S16'     => 'rb_csic_RtComRxPayload_au16(5)_S16',
    'RollRateLfChl_RawData_S16' => 'rb_csic_RtComRxPayload_au16(6)_S16',
    'YawRateLfChl_RawData_S16'  => 'rb_csic_RtComRxPayload_au16(7)_S16',

    #	'YawRateLfPlausiChl_RawData_S16'   	=> 'rb_csic_RtComRxPayload_au16(8)_S16',
    'PitchRateLfChl_RawData_S16' => 'rb_csic_RtComRxPayload_au16(9)_S16',
    #
    #	RawData_V
    #------------
    'AccXLgChl_RawData_V'    => 'rb_csic_RtComRxPayload_au16(0)',
    'AccXHgMonChl_RawData_V' => 'rb_csic_RtComRxPayload_au16(1)',
    'AccYLgChl_RawData_V'    => 'rb_csic_RtComRxPayload_au16(2)',
    'AccYHgMonChl_RawData_V' => 'rb_csic_RtComRxPayload_au16(3)',

    #	'AccYLgPlausiChl_RawData_V'   		=> 'rb_csic_RtComRxPayload_au16(4)',
    'AccZLgChl_RawData_V'     => 'rb_csic_RtComRxPayload_au16(5)',
    'RollRateLfChl_RawData_V' => 'rb_csic_RtComRxPayload_au16(6)',
    'YawRateLfChl_RawData_V'  => 'rb_csic_RtComRxPayload_au16(7)',

    #	'YawRateLfPlausiChl_RawData_V'  	=> 'rb_csic_RtComRxPayload_au16(8)',
    'PitchRateLfChl_RawData_V' => 'rb_csic_RtComRxPayload_au16(9)',

    #	 Processed data for Algo
    #---------------------------
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccXLg_e;5;SMI_ax_lowG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccXHgMon_e;6;SMI_ax_midG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccYLg_e;7;SMI_ay_lowG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccYHgMon_e;8;SMI_ay_midG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccYLgPlausi_e;9;SMI_ay_lowG_redundant
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_AccZLg_e;10;SMI_az_lowG
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_RollRateLf_e;11;SMI_rateX
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_YawRateLf_e;12;SMI_rateZ
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_YawRateLfPlausi_e;13;SMI_rateZ_redundant
    #enum;rb_sycc_CentralSensorChannels_ten;rb_sycc_PitchRateLf_e;14;SMI_rateY
    #
    'AccXLgChl_NhtsaData_S16'    => 'rb_csem_SensorDataRT_st.ChannelValue_as16(3)_S16',
    'AccXHgMonChl_NhtsaData_S16' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(4)_S16',
    'AccYLgChl_NhtsaData_S16'    => 'rb_csem_SensorDataRT_st.ChannelValue_as16(5)_S16',
    'AccYHgMonChl_NhtsaData_S16' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(6)_S16',

    #	'AccYLgPlausiChl_NhtsaData_S16'   	=> 'rb_csem_SensorDataRT_st.ChannelValue_as16(9)_S16',
    'AccZLgChl_NhtsaData_S16'     => 'rb_csem_SensorDataRT_st.ChannelValue_as16(7)_S16',
    'RollRateLfChl_NhtsaData_S16' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(9)_S16',
    'YawRateLfChl_NhtsaData_S16'  => 'rb_csem_SensorDataRT_st.ChannelValue_as16(10)_S16',

    #	'YawRateLfPlausiChl_NhtsaData_S16'  => 'rb_csem_SensorDataRT_st.ChannelValue_as16(13)_S16',
    'PitchRateLfChl_NhtsaData_S16' => 'rb_csem_SensorDataRT_st.ChannelValue_as16(11)_S16',
    'Log_Mapping_Ch1'              => 'rb_csam_LogChannelMapping_aen(0)(0)',
    'Log_Mapping_Ch2'              => 'rb_csam_LogChannelMapping_aen(0)(1)',
    'Log_Mapping_Ch3'              => 'rb_csam_LogChannelMapping_aen(0)(2)',
    'MainAccY'                     => 1,
    'MainAccX'                     => 0,
    'MainAccZ'                     => 2,

    #******************************************************************************
    #                                Sensor data
    #******************************************************************************
    #enum;rb_sycc_Smi7Sensors_ten;rb_sycc_InertialSensor1_e;0;First inertial sensor
    #enum;rb_sycc_Smi7Sensors_ten;rb_sycc_InertialSensor2_e;1;Second inertial sensor
    #enum;rb_sycc_Smi7Sensors_ten;rb_sycc_Smi7SensorMax_e;2;Max Value
    #
    #    ClusterFlags
    #----------------
    'InertialSensor1_ClusterFlags_U16' => 'rb_csic_StatusData_ast(0).ClustFlg_u16_U16',
    'InertialSensor2_ClusterFlags_U16' => 'rb_csic_StatusData_ast(1).ClustFlg_u16_U16',

    #    ErrorFlags
    #--------------
    'InertialSensor1_ErrorFlag0_U8' => 'rb_csic_StatusData_ast(0).ErFlg_au16(0)_U8',
    'InertialSensor1_ErrorFlag1_U8' => 'rb_csic_StatusData_ast(0).ErFlg_au16(1)_U8',
    'InertialSensor1_ErrorFlag2_U8' => 'rb_csic_StatusData_ast(0).ErFlg_au16(2)_U8',
    'InertialSensor2_ErrorFlag0_U8' => 'rb_csic_StatusData_ast(1).ErFlg_au16(0)_U8',
    'InertialSensor2_ErrorFlag1_U8' => 'rb_csic_StatusData_ast(1).ErFlg_au16(1)_U8',
    'InertialSensor2_ErrorFlag2_U8' => 'rb_csic_StatusData_ast(1).ErFlg_au16(2)_U8',

    # U16 - Error Flags #Updated for DSP_PE_RAM implementation
    'InertialSensor1_ErrorFlag0_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(0)_U16',
    'InertialSensor1_ErrorFlag1_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(1)_U16',
    'InertialSensor1_ErrorFlag2_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(2)_U16',
    'InertialSensor1_ErrorFlag3_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(3)_U16',
    'InertialSensor1_ErrorFlag4_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(4)_U16',
    'InertialSensor1_ErrorFlag5_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(5)_U16',
    'InertialSensor1_ErrorFlag6_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(6)_U16',
    'InertialSensor1_ErrorFlag7_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(7)_U16',
    'InertialSensor1_ErrorFlag8_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(8)_U16',
    'InertialSensor1_ErrorFlag9_U16' => 'rb_csic_StatusData_ast(0).ErFlg_au16(9)_U16',

    'InertialSensor2_ErrorFlag0_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(0)_U16',
    'InertialSensor2_ErrorFlag1_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(1)_U16',
    'InertialSensor2_ErrorFlag2_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(2)_U16',
    'InertialSensor2_ErrorFlag3_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(3)_U16',
    'InertialSensor2_ErrorFlag4_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(4)_U16',
    'InertialSensor2_ErrorFlag5_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(5)_U16',
    'InertialSensor2_ErrorFlag6_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(6)_U16',
    'InertialSensor2_ErrorFlag7_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(7)_U16',
    'InertialSensor2_ErrorFlag8_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(8)_U16',
    'InertialSensor2_ErrorFlag9_U16' => 'rb_csic_StatusData_ast(1).ErFlg_au16(9)_U16',

    #	 Temperature_1
    #---------------
    'InertialSensor1_Temp1_U8'  => 'rb_csic_StatusData_ast(0).Temperat1_s16_U8',
    'InertialSensor2_Temp1_U8'  => 'rb_csic_StatusData_ast(1).Temperat1_s16_U8',
    'InertialSensor1_Temp1_S16' => 'rb_csic_StatusData_ast(0).Temperat1_s16_S16',
    'InertialSensor2_Temp1_S16' => 'rb_csic_StatusData_ast(1).Temperat1_s16_S16',

    #	 Temperature_2
    #---------------

    'InertialSensor1_Temp2_S16' => 'rb_csem_StoreTemperature2Value_as16(0)_S16',
    'InertialSensor2_Temp2_S16' => 'rb_csem_StoreTemperature2Value_as16(1)_S16',

    #	 ClusterFlags stored in Field Claim Data area
    #------------------------------------------------
    'InertialSensor1_ClusterFlags_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).ClustFlg_u16_U8',
    'InertialSensor2_ClusterFlags_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).ClustFlg_u16_U8',

    #	 ErrorFlags stored in Field Claim Data area
    #----------------------------------------------
    'InertialSensor1_ErrorFlag0_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).ErFlg_au16(0)_U8',
    'InertialSensor1_ErrorFlag9_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).ErFlg_au16(9)_U8',
    'InertialSensor2_ErrorFlag0_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).ErFlg_au16(0)_U8',
    'InertialSensor2_ErrorFlag9_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).ErFlg_au16(9)_U8',

    #	 Temperature stored in Field Claim Data area
    #-----------------------------------------------
    'InertialSensor1_Temp1_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).Temperat1_s16_U8',
    'InertialSensor2_Temp1_EE_U8' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).Temperat1_s16_U8',

    #	AsicSerialNr
    #---------------
    'InertialSensor1_AsicSerialNr0_V' => 'rb_csim_AsicIdData_ast(0).AsicSerialNr_au16(0)',
    'InertialSensor1_AsicSerialNr1_V' => 'rb_csim_AsicIdData_ast(0).AsicSerialNr_au16(1)',
    'InertialSensor1_AsicSerialNr2_V' => 'rb_csim_AsicIdData_ast(0).AsicSerialNr_au16(2)',
    'InertialSensor2_AsicSerialNr0_V' => 'rb_csim_AsicIdData_ast(1).AsicSerialNr_au16(0)',
    'InertialSensor2_AsicSerialNr1_V' => 'rb_csim_AsicIdData_ast(1).AsicSerialNr_au16(1)',
    'InertialSensor2_AsicSerialNr2_V' => 'rb_csim_AsicIdData_ast(1).AsicSerialNr_au16(2)',

    #	SmiSerialNr
    #--------------
    'InertialSensor1_SmiSerialNr0_V' => 'rb_csim_AsicIdData_ast(0).SmiSerialNr_au16(0)',
    'InertialSensor1_SmiSerialNr1_V' => 'rb_csim_AsicIdData_ast(0).SmiSerialNr_au16(1)',
    'InertialSensor1_SmiSerialNr2_V' => 'rb_csim_AsicIdData_ast(0).SmiSerialNr_au16(2)',
    'InertialSensor2_SmiSerialNr0_V' => 'rb_csim_AsicIdData_ast(1).SmiSerialNr_au16(0)',
    'InertialSensor2_SmiSerialNr1_V' => 'rb_csim_AsicIdData_ast(1).SmiSerialNr_au16(1)',
    'InertialSensor2_SmiSerialNr2_V' => 'rb_csim_AsicIdData_ast(1).SmiSerialNr_au16(2)',

    #	FieldClaimDataEe ClusterFlags
    #--------------------------------
    'InertialSensor1_ClusterFlags_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).ClustFlg_u16',
    'InertialSensor2_ClusterFlags_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).ClustFlg_u16',

    #	FieldClaimDataEe Temperature
    #-------------------------------
    'InertialSensor1_Temperature_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).Temperat1_s16',
    'InertialSensor2_Temperature_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).Temperat1_s16',

    #	FieldClaimDataEe ErrorFlags
    #------------------------------
    'InertialSensor1_ErrorFlag0_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).ErFlg_au16(0)',
    'InertialSensor1_ErrorFlag9_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(0).ErFlg_au16(9)',
    'InertialSensor2_ErrorFlag0_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).ErFlg_au16(0)',
    'InertialSensor2_ErrorFlag9_EE_V' => 'rb_csem_FieldClaimDataEe_st.Smi7StatusData_ast(1).ErFlg_au16(9)',

    #	 ErrorFlags stored in Field Claim Data area
    #----------------------------------------------
    'ClusterFlags_EE_C' => '0x8421',
    'ErrorFlag_EE_C'    => '0x8421',
    'Temperature_EE_C'  => '0x8421',

    #	DeviceId
    #-----------
    #enum;rb_syca_AllAsics_ten;rb_syca_AllAsicsSystemAsic1_e;0;Master System ASIC
    #enum;rb_syca_AllAsics_ten;rb_syca_AllAsicsSystemAsic2_e;1;2nd System ASIC
    #enum;rb_syca_AllAsics_ten;rb_syca_AllAsicsCentralSensorMain_e;2;Main HighG Sensor
    #enum;rb_syca_AllAsics_ten;rb_syca_AllAsicsCentralSensorPlausi_e;3;Plausibility HighG Sensor
    #enum;rb_syca_AllAsics_ten;rb_syca_AllAsicsCentralInertialSensor1_e;4;First Inertial Sensor
    #enum;rb_syca_AllAsics_ten;rb_syca_AllAsicsCentralInertialSensor2_e;5;Second Inertial Sensor
    'InertialSensor1_DeviceId_V' => 'rb_syca_AsicDeviceId_au16(4)',
    'InertialSensor2_DeviceId_V' => 'rb_syca_AsicDeviceId_au16(5)',
    #
    #	RevisionId
    #-------------
    'InertialSensor1_RevisionId_V' => 'rb_syca_AsicRevisionId_au16(4)',
    'InertialSensor2_RevisionId_V' => 'rb_syca_AsicRevisionId_au16(5)',

    #    ErrorCounter (removed from *.cns file ??)
    #----------------
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor1IntErrCnt45_e;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor2IntErrCnt45_e;
    #
    'InertialSensor1_IntErrCnt45_U8' => 'rb_csic_RtComRxPayload_au16(16)_U8',
    'InertialSensor2_IntErrCnt45_U8' => 'rb_csic_RtComRxPayload_au16(20)_U8',

    #    Status ClusterFlags
    #-----------------------
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor1StatusClusFlags_e;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor2StatusClusFlags_e;
    #
    'InertialSensor1_Status_ClusterFlags_U8' => 'rb_csic_RtComRxPayload_au16(10)_U8',
    'InertialSensor2_Status_ClusterFlags_U8' => 'rb_csic_RtComRxPayload_au16(11)_U8',

    #    Status HW SCON_U8
    #------------------
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor1StatusHwScon_e;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor2StatusHwScon_e;
    #
    'InertialSensor1_Status_HW_SCON_U8' => 'rb_csic_RtComRxPayload_au16(12)_U8',
    'InertialSensor2_Status_HW_SCON_U8' => 'rb_csic_RtComRxPayload_au16(13)_U8',

    #    Status HW SCON_U16
    #------------------
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor1StatusHwScon_e;
    #enum;rb_cs7c_AllPossibleRtCmdsTxReasons_ten;rb_cs7c_InertialSensor2StatusHwScon_e;
    #
    'InertialSensor1_Status_HW_SCON_U16' => 'rb_csic_RtComRxPayload_au16(12)_U16',
    'InertialSensor2_Status_HW_SCON_U16' => 'rb_csic_RtComRxPayload_au16(13)_U16',

    # Device IDs
    #------------
    'InertialSensor1_DeviceId_C' => '0x0863',    #SMI860
    'InertialSensor2_DeviceId_C' => '0x0804',    #SMI810

    # manipulated RevisionId, SmiSerialNr, AsicSerialNr will be checked against this constants
    # (not checked by software)
    'RevisionId_C'    => '0x1111',
    'SmiSerialNr0_C'  => '0x0011',
    'SmiSerialNr1_C'  => '0x1100',
    'SmiSerialNr2_C'  => '0bxxxx000100010001',
    'AsicSerialNr0_C' => '0x0011',
    'AsicSerialNr1_C' => '0x1100',
    'AsicSerialNr2_C' => '0x0111',

    #**********************************Dist fault Debuginfo Mapping ********************************
    #InitialRelOffsetCheckFailure
    #'cs7m_ManagerStateRT_U8'              			=> 'rb_cs7m_ManagerStateRT_en_U8',

    'SMAMain_Group1DistFltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp1DistFlags_u16',
    'SMAMain_Group2DistFltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp2DistFlags_u16',
    'SMAMain_Group3DistFltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp3DistFlags_u16',
    'SMAMain_Group4DistFltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp4DistFlags_u16',

    'SMAMain_Group1DistFltFlags_DebugInfo_U16' => 'rb_csai_IniFltFlags_ast(0).Grp1DistFlags_u16_U16',
    'SMAMain_Group2DistFltFlags_DebugInfo_U16' => 'rb_csai_IniFltFlags_ast(0).Grp2DistFlags_u16_U16',
    'SMAMain_Group3DistFltFlags_DebugInfo_U16' => 'rb_csai_IniFltFlags_ast(0).Grp3DistFlags_u16_U16',
    'SMAMain_Group4DistFltFlags_DebugInfo_U16' => 'rb_csai_IniFltFlags_ast(0).Grp4DistFlags_u16_U16',
    'SMAMain_Group5DistFltFlags_DebugInfo_U16' => 'rb_csai_IniFltFlags_ast(0).Grp5DistFlags_u16_U16',
    'csem_InitialRelOffsetCheckFailure_U8'     => 'rb_csem_SensorDataRT_st.InitialRelOffsetCheckFailure_bo_U8',

    #**********************************Main fault Debug info Mapping ********************************
    'SMAMain_Group1FltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp1FiltFlags_u16',
    'SMAMain_Group2FltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp2FiltFlags_u16',
    'SMAMain_Group3FltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp3FiltFlags_u16',
    'SMAMain_Group4FltFlags_DebugInfo' => 'rb_csai_IniFltFlags_ast(0).Grp4FiltFlags_u16',

    #******************************************************************************
    #                               SMI Sensor Faults
    #******************************************************************************
    # the indexes for Dem_AllEventsStatusByte() array are the fault numbers,
    # which can be found in *.flt file

    #rb_csem_MonPermInitInertialSensor1_flt
    #rb_csem_MonPermInitInertialSensor2_flt
    #
    # MonPermInitSensorFlt
    #---------------------
    'InertialSensor1_MonPermInit_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermInitInertialSensor1_flt__)_U8',
    'InertialSensor2_MonPermInit_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermInitInertialSensor2_flt__)_U8',

    #rb_csem_MonPermBGInertialSensor1_flt
    #rb_csem_MonPermBGInertialSensor2_flt
    #
    # MonPermBGSensorFlt  ( Background:  Module Command: SD, MID, PAGE, CRC )
    #-------------------
    'InertialSensor1_MonPermBG_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermBGInertialSensor1_flt__)_U8',
    'InertialSensor2_MonPermBG_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermBGInertialSensor2_flt__)_U8',

    #rb_csem_MonTempAccXHgMonChl_flt
    #rb_csem_MonTempAccXLgChl_flt
    #rb_csem_MonTempAccYHgMonChl_flt
    #rb_csem_MonTempAccYLgChl_flt
    #rb_csem_MonTempAccYLgPlausiChl_flt
    #rb_csem_MonTempAccZLgChl_flt
    #rb_csem_MonTempPitchRateLfChl_flt
    #rb_csem_MonTempRollRateLfChl_flt
    #rb_csem_MonTempYawRateLfChl_flt
    #rb_csem_MonTempYawRateLfPlausiChl_flt
    #rb_csem_TempDspMonInertialSensor1_flt
    #rb_csem_TempDspMonInertialSensor2_flt
    #
    # MonTempChlFlt   ( Realtime: Sensor Data Command -> CN, Clipping )
    #--------------
    'AccXHgMonChl_MonTemp_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempAccXHgMonChl_flt__)_U8',
    'AccXLgChl_MonTemp_fltStatus_U8'    => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempAccXLgChl_flt__)_U8',
    'AccYHgMonChl_MonTemp_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempAccYHgMonChl_flt__)_U8',
    'AccYLgChl_MonTemp_fltStatus_U8'    => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempAccYLgChl_flt__)_U8',

    #	'AccYLgPlausiChl_MonTemp_fltStatus_U8'		=> 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempAccYLgPlausiChl_flt__)_U8',
    'AccZLgChl_MonTemp_fltStatus_U8'      => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempAccZLgChl_flt__)_U8',
    'PitchRateLfChl_MonTemp_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempPitchRateLfChl_flt__)_U8',
    'RollRateLfChl_MonTemp_fltStatus_U8'  => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempRollRateLfChl_flt__)_U8',
    'YawRateLfChl_MonTemp_fltStatus_U8'   => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempYawRateLfChl_flt__)_U8',

    #	'YawRateLfPlausiChl_MonTemp_fltStatus_U8'	=> 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonTempYawRateLfPlausiChl_flt__)_U8',
    'InertialSensor1_TempSensorDspMonitoring_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_TempDspMonInertialSensor1_flt__)_U8',
    'InertialSensor2_TempSensorDspMonitoring_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_TempDspMonInertialSensor2_flt__)_U8',

    #rb_csem_MonPermAccXHgMonChl_flt
    #rb_csem_MonPermAccXLgChl_flt
    #rb_csem_MonPermAccYHgMonChl_flt
    #rb_csem_MonPermAccYLgChl_flt
    #rb_csem_MonPermAccYLgPlausiChl_flt
    #rb_csem_MonPermAccZLgChl_flt
    #rb_csem_MonPermPitchRateLfChl_flt
    #rb_csem_MonPermRollRateLfChl_flt
    #rb_csem_MonPermYawRateLfChl_flt
    #rb_csem_MonPermYawRateLfPlausiChl_flt
    #
    # MonPermChlFlt   ( Realtime: Sensor Data Command -> SD, SID, CRC   Module Command: SD, MID, PAGE, CRC )
    #--------------
    'AccXHgMonChl_MonPerm_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermAccXHgMonChl_flt__)_U8',
    'AccXLgChl_MonPerm_fltStatus_U8'    => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermAccXLgChl_flt__)_U8',
    'AccYHgMonChl_MonPerm_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermAccYHgMonChl_flt__)_U8',
    'AccYLgChl_MonPerm_fltStatus_U8'    => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermAccYLgChl_flt__)_U8',

    #	'AccYLgPlausiChl_MonPerm_fltStatus_U8'		=> 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermAccYLgPlausiChl_flt__)_U8',
    'AccZLgChl_MonPerm_fltStatus_U8'      => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermAccZLgChl_flt__)_U8',
    'PitchRateLfChl_MonPerm_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermPitchRateLfChl_flt__)_U8',
    'RollRateLfChl_MonPerm_fltStatus_U8'  => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermRollRateLfChl_flt__)_U8',
    'YawRateLfChl_MonPerm_fltStatus_U8'   => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermYawRateLfChl_flt__)_U8',

    #	'YawRateLfPlausiChl_MonPerm_fltStatus_U8'	=> 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_MonPermYawRateLfPlausiChl_flt__)_U8',

    #rb_csem_FieldCalibMissing_flt
    #-----------------------------
    'FieldCalibMissing_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_csem_FieldCalibMissing_flt__)_U8',

    #rb_simc_SignalMonCtrlHighgXMon_flt
    #rb_simc_SignalMonCtrlHighgYMon_flt
    #rb_simc_SignalMonCtrlLowgX_flt
    #rb_simc_SignalMonCtrlLowgYPls_flt
    #rb_simc_SignalMonCtrlLowgY_flt
    #rb_simc_SignalMonCtrlLowgZ_flt
    #rb_simc_SignalMonCtrlPitchRateLf_flt
    #rb_simc_SignalMonCtrlRollRateLf_flt
    #rb_simc_SignalMonCtrlYawRateLfPls_flt
    #rb_simc_SignalMonCtrlYawRateLf_flt
    'AccXHgMonChl_SignalMonCtrl_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlHighgXMon_flt__)_U8',
    'AccYHgMonChl_SignalMonCtrl_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlHighgYMon_flt__)_U8',
    'AccXLgChl_SignalMonCtrl_fltStatus_U8'    => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlLowgX_flt__)_U8',

    #	'AccYLgPlausiChl_SignalMonCtrl_fltStatus_U8'	=> 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlLowgYPls_flt__)_U8',
    'AccYLgChl_SignalMonCtrl_fltStatus_U8'      => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlLowgY_flt__)_U8',
    'AccZLgChl_SignalMonCtrl_fltStatus_U8'      => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlLowgZ_flt__)_U8',
    'PitchRateLfChl_SignalMonCtrl_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlPitchRateLf_flt__)_U8',
    'RollRateLfChl_SignalMonCtrl_fltStatus_U8'  => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlRollRateLf_flt__)_U8',

    #	'YawRateLfPlausiChl_SignalMonCtrl_fltStatus_U8'	=> 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlYawRateLfPls_flt__)_U8',
    'YawRateLfChl_SignalMonCtrl_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_simc_SignalMonCtrlYawRateLf_flt__)_U8',

    # Configuration Data Inconsistent Flt
    #-------------------------------
    #rb_syc_ConfigurationDataInconsistent_flt

    'InertialSensor1_ConfDataInconsistent_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_syc_ConfigurationDataInconsistent_flt__)_U8',
    'InertialSensor2_ConfDataInconsistent_fltStatus_U8' => 'Dem_AllEventsStatusByte(__FAULTINDEX:rb_syc_ConfigurationDataInconsistent_flt__)_U8',

    #  Acceleration channels_S16

    'AccXLgChl_S16'          => 'rb_csic_RtComRxPayload_au16(0)_S16',
    'AccXHgMonChl_S16'       => 'rb_csic_RtComRxPayload_au16(1)_S16',
    'AccYLgChl_S16'          => 'rb_csic_RtComRxPayload_au16(2)_S16',
    'AccYHgMonChl_S16'       => 'rb_csic_RtComRxPayload_au16(3)_S16',
    'AccYLgPlausiChl_S16'    => 'rb_csic_RtComRxPayload_au16(4)_S16',
    'AccZLgChl_S16'          => 'rb_csic_RtComRxPayload_au16(5)_S16',
    'RollRateLfChl_S16'      => 'rb_csic_RtComRxPayload_au16(6)_S16',
    'YawRateLfChl_S16'       => 'rb_csic_RtComRxPayload_au16(7)_S16',
    'YawRateLfPlausiChl_S16' => 'rb_csic_RtComRxPayload_au16(8)_S16',
    'PitchRateLfChl_S16'     => 'rb_csic_RtComRxPayload_au16(9)_S16',

    #******************************************************************************
    #                               DTCs
    #******************************************************************************
    #    MonPermInit_flt
    #-------------------
    'rb_csem_MonPermInitInertialSensor1_flt' => '0xF00049',
    'rb_csem_MonPermInitInertialSensor2_flt' => '0xF00049',

    #    MonPermBG_flt
    #-----------------
    'rb_csem_MonPermBGInertialSensor1_flt' => '0xF00049',
    'rb_csem_MonPermBGInertialSensor2_flt' => '0xF00049',

    #    MonTempChl_flt
    #------------------
    'rb_csem_MonTempYawRateLfChl_flt'   => '0x00001A',
    'rb_csem_MonTempAccXLgChl_flt'      => '0x000013',
    'rb_csem_MonTempAccYLgChl_flt'      => '0x000015',
    'rb_csem_MonTempAccXHgMonChl_flt'   => '0x000012',
    'rb_csem_MonTempAccYHgMonChl_flt'   => '0x000014',
    'rb_csem_MonTempRollRateLfChl_flt'  => '0x000019',
    'rb_csem_MonTempAccZLgChl_flt'      => '0x000017',
    'rb_csem_MonTempPitchRateLfChl_flt' => '0x000018',

    #	'rb_csem_MonTempYawRateLfPlausiChl_flt'     => '0x00001B',
    #	'rb_csem_MonTempAccYLgPlausiChl_flt'        => '0x000016',
    'rb_csem_TempDspMonInertialSensor1_flt' => '0x0001B1',
    'rb_csem_TempDspMonInertialSensor2_flt' => '0x001B12',

    #    MonPermChl_flt
    #------------------
    'rb_csem_MonPermYawRateLfChl_flt'   => '0xF00049',
    'rb_csem_MonPermAccXLgChl_flt'      => '0xF00049',
    'rb_csem_MonPermAccYLgChl_flt'      => '0xF00049',
    'rb_csem_MonPermAccXHgMonChl_flt'   => '0xF00049',
    'rb_csem_MonPermAccYHgMonChl_flt'   => '0xF00049',
    'rb_csem_MonPermRollRateLfChl_flt'  => '0xF00049',
    'rb_csem_MonPermAccZLgChl_flt'      => '0xF00049',
    'rb_csem_MonPermPitchRateLfChl_flt' => '0xF00049',

    #	'rb_csem_MonPermYawRateLfPlausiChl_flt'     => '0xF00049',
    #	'rb_csem_MonPermAccYLgPlausiChl_flt'        => '0xF00049',

    # Field Calibration Fault
    #------------------------
    'rb_csem_FieldCalibMissing_flt' => '0x001B13',

    #	Other faults
    #---------------
    'rb_syc_AsicIdMismatch_flt' => '0xF00049',

    # Configuration Data Inconsistent Flt
    #----------------------------------------

    'rb_syc_ConfigurationDataInconsistent_flt' => '0x0001B8',

    # Lifetime fault counter

    'LfmCounterValue_TempDSPMonInertialSensor1_flt_U8' => 'rb_lfm_LfmCntrs_au8(36)',
    'LfmCounterValue_TempDSPMonInertialSensor2_flt_U8' => 'rb_lfm_LfmCntrs_au8(37)',

    #******************************************************************************
    #                         Configuration data
    #******************************************************************************
    #    Set ECU to Plant Mode
    'varName_PlantMode'     => 'rb_sycg_PlantModes_dfst.rb_sycg_ActivePlantModes_au8(1)',
    'andMask_PlantMode'     => '0xFF',
    'orMask_PlantMode'      => '0x02',
    'restore_PlantMode_yes' => 'yes',

    #    Set ECU to Read Error Counter Mode
    'varName_RdErrCnt'     => 'rb_csem_NvmConfigDataEe_dfst.CsemMode_b32.2',
    'andMask_RdErrCnt'     => '0xFF',
    'orMask_RdErrCnt'      => '0x01',
    'restore_RdErrCnt_yes' => 'yes',

    #    De-configure SMI sensors
    #----------------------------
    #    De-configure all SMI sensors
    'varName_AsicConfigured'     => 'rb_syca_SysConfAsicEeData_dfst.AsicConfigured_ab8(0)',
    'andMask_AsicConfigured'     => '0x0F',
    'orMask_AsicConfigured'      => '0x00',
    'restore_AsicConfigured_yes' => 'yes',

    #    De-configure SMA Plausi sensor
    'varName_AsicConfigured_CentralSensorPlausi'     => 'rb_syca_SysConfAsicEeData_dfst.AsicConfigured_ab8(0)',
    'andMask_DeConf_CentralSensorPlausi'             => '0x37',
    'orMask_DeConf_CentralSensorPlausi'              => '0x00',
    'restore_AsicConfigured_CentralSensorPlausi_yes' => 'yes',

    #    De-configure InertialSensor1 sensor
    'varName_AsicConfigured_InertialSensor1'     => 'rb_syca_SysConfAsicEeData_dfst.AsicConfigured_ab8(0)',
    'andMask_DeConf_InertialSensor1'             => '0x2F',
    'orMask_DeConf_InertialSensor1'              => '0x00',
    'restore_AsicConfigured_InertialSensor1_yes' => 'yes',

    #    De-configure InertialSensor2 sensor
    'varName_AsicConfigured_InertialSensor2'     => 'rb_syca_SysConfAsicEeData_dfst.AsicConfigured_ab8(0)',
    'andMask_DeConf_InertialSensor2'             => '0x1F',
    'orMask_DeConf_InertialSensor2'              => '0x00',
    'restore_AsicConfigured_InertialSensor2_yes' => 'yes',

    #    Delay Init Test Manager by 4s
    #---------------------------------
    'varName_InitDelay'     => 'rb_sycg_StaticBehaviorBits_dfst.rb_sycg_StaticBits_ab8(0)',
    'andMask_InitDelay'     => '0xFF',
    'orMask_InitDelay'      => '0x01',
    'restore_InitDelay_yes' => 'yes',

    #   Field calibration
    #--------------------
    #    Set crunking off (write to RAM)
    'varName_Cranking' => 'rb_csci_IgnitionOffOrEngineOn_bo',
    'andMask_Cranking' => '0x00',
    'orMask_Cranking'  => '0x00',

    #    Set FielCalib status to not done
    'varName_FielCalibNotDone'    => 'rb_csim_ImuFieldCalibDataEe_dfst.FieldCalibStatus_u32.0',
    'andMask_FielCalibNotDone'    => '0x00',
    'orMask_FielCalibNotDone'     => '0x00',
    'restore_FielCalibNotDone_no' => 'no',

    #    Set FielCalib status to not done
    'varName_FielCalibNotDone'    => 'rb_csim_ImuFieldCalibDataEe_dfst.FieldCalibStatus_u32.0',
    'andMask_FielCalibNotDone'    => '0x00',
    'orMask_FielCalibNotDone'     => '0x00',
    'restore_FielCalibNotDone_no' => 'yes',

    #    Set FielCalib status to done
    'varName_FielCalibDone'    => 'rb_csim_ImuFieldCalibDataEe_dfst.FieldCalibStatus_u32.0',
    'andMask_FielCalibDone'    => '0x00',
    'orMask_FielCalibDone'     => '0x03',
    'restore_FielCalibDone_no' => 'no',

    #    Set FieldCalibVinValue to wrong value
    'varName_FieldCalibVinValue'     => 'rb_csim_ImuFieldCalibDataEe_dfst.FieldCalibVinValue_au8(16)',
    'andMask_FieldCalibVinValue'     => '0x00',
    'orMask_FieldCalibVinValue'      => '0x88',
    'restore_FieldCalibVinValue_yes' => 'yes',

    #******************************************************************************
    #                          Field calibration
    #******************************************************************************
    #   Smi7FieldCalibDataEe
    #-----------------------
    'AccXLgChl_FieldCalibValue_EE_S16'    => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(0)_S16',
    'AccXHgMonChl_FieldCalibValue_EE_S16' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(1)_S16',
    'AccYLgChl_FieldCalibValue_EE_S16'    => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(2)_S16',
    'AccYHgMonChl_FieldCalibValue_EE_S16' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(3)_S16',

    #	'AccYLgPlausi_FieldCalibValue_EE_S16'   	=> 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(4)_S16',
    'AccZLgChl_FieldCalibValue_EE_S16'     => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(5)_S16',
    'RollRateLfChl_FieldCalibValue_EE_S16' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(6)_S16',
    'YawRateLfChl_FieldCalibValue_EE_S16'  => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(7)_S16',

    #	'YawRateLfPlausiChl_FieldCalibValue_EE_S16' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(8)_S16',
    'PitchRateLfChl_FieldCalibValue_EE_S16' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(9)_S16',

    #    FieldCalibValue
    #-------------------
    'AccXLgChl_FieldCalibValue_EE_V'    => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(0)',
    'AccXHgMonChl_FieldCalibValue_EE_V' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(1)',
    'AccYLgChl_FieldCalibValue_EE_V'    => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(2)',
    'AccYHgMonChl_FieldCalibValue_EE_V' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(3)',

    #	'AccYLgPlausi_FieldCalibValue_EE_V'   		=> 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(4)',
    'AccZLgChl_FieldCalibValue_EE_V'     => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(5)',
    'RollRateLfChl_FieldCalibValue_EE_V' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(6)',
    'YawRateLfChl_FieldCalibValue_EE_V'  => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(7)',

    #	'YawRateLfPlausiChl_FieldCalibValue_EE_V'   => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(8)',
    'PitchRateLfChl_FieldCalibValue_EE_V' => 'rb_csim_ImuFieldCalibDataEe_st.FieldCalibValue_as16(9)',

    #	Smi7OffsCalcSampleCntRT
    #--------------------------
    'AccXLgChl_Smi7OffsCalcSampleCntRT_U16'    => 'rb_csim_ImuOffsCalcSampleCntRT_au16(0)_U16',
    'AccXHgMonChl_Smi7OffsCalcSampleCntRT_U16' => 'rb_csim_ImuOffsCalcSampleCntRT_au16(1)_U16',
    'AccYLgChl_Smi7OffsCalcSampleCntRT_U16'    => 'rb_csim_ImuOffsCalcSampleCntRT_au16(2)_U16',
    'AccYHgMonChl_Smi7OffsCalcSampleCntRT_U16' => 'rb_csim_ImuOffsCalcSampleCntRT_au16(3)_U16',

    #	'AccYLgPlausiChl_Smi7OffsCalcSampleCntRT_U16'   	=> 'rb_csim_ImuOffsCalcSampleCntRT_au16(4)_U16',
    'AccZLgChl_Smi7OffsCalcSampleCntRT_U16'     => 'rb_csim_ImuOffsCalcSampleCntRT_au16(5)_U16',
    'RollRateLfChl_Smi7OffsCalcSampleCntRT_U16' => 'rb_csim_ImuOffsCalcSampleCntRT_au16(6)_U16',
    'YawRateLfChl_Smi7OffsCalcSampleCntRT_U16'  => 'rb_csim_ImuOffsCalcSampleCntRT_au16(7)_U16',

    #	'YawRateLfPlausiChl_Smi7OffsCalcSampleCntRT_U16'  	=> 'rb_csim_ImuOffsCalcSampleCntRT_au16(8)_U16',
    'PitchRateLfChl_Smi7OffsCalcSampleCntRT_U16' => 'rb_csim_ImuOffsCalcSampleCntRT_au16(9)_U16',

    #	Smi7OffsCalcDataBufRT
    #--------------------------
    'AccXLgChl_Smi7OffsCalcDataBufRT_S32'    => 'rb_csim_ImuOffsCalcDataBufRT_as32(0)_S32',
    'AccXHgMonChl_Smi7OffsCalcDataBufRT_S32' => 'rb_csim_ImuOffsCalcDataBufRT_as32(1)_S32',
    'AccYLgChl_Smi7OffsCalcDataBufRT_S32'    => 'rb_csim_ImuOffsCalcDataBufRT_as32(2)_S32',
    'AccYHgMonChl_Smi7OffsCalcDataBufRT_S32' => 'rb_csim_ImuOffsCalcDataBufRT_as32(3)_S32',

    #	'AccYLgPlausiChl_Smi7OffsCalcDataBufRT_S32'   	=> 'rb_csim_ImuOffsCalcDataBufRT_as32(4)_S32',
    'AccZLgChl_Smi7OffsCalcDataBufRT_S32'     => 'rb_csim_ImuOffsCalcDataBufRT_as32(5)_S32',
    'RollRateLfChl_Smi7OffsCalcDataBufRT_S32' => 'rb_csim_ImuOffsCalcDataBufRT_as32(6)_S32',
    'YawRateLfChl_Smi7OffsCalcDataBufRT_S32'  => 'rb_csim_ImuOffsCalcDataBufRT_as32(7)_S32',

    #	'YawRateLfPlausiChl_Smi7OffsCalcDataBufRT_S32'  => 'rb_csim_ImuOffsCalcDataBufRT_as32(8)_S32',
    'PitchRateLfChl_Smi7OffsCalcDataBufRT_S32' => 'rb_csim_ImuOffsCalcDataBufRT_as32(9)_S32',

    #	Field calibration Status NVM
    'Field_Calibration_Status_NVM_Var' => 'rb_sdcm_ImuFieldCalibData_dfst.FieldCalibStatus_u32',

####	For Dequalification of CSEM Faults
    'Max_CSEM_faults' => 26,
##########For SMA Faults
    'CSEM_Fault_Qualified_NVM_Var0' => 'rb_csem_FaultStorageData_dfst.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(0)',    #INIT_GROUP1_Fault
    'CSEM_Fault_Qualified_NVM_Var1' => 'rb_csem_FaultStorageData_dfst.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(1)',    #INIT_GROUP2_Fault
    'CSEM_Fault_Qualified_NVM_Var2' => 'rb_csem_FaultStorageData_dfst.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(2)',    #INIT_GROUP3_Fault
    'CSEM_Fault_Qualified_NVM_Var3' => 'rb_csem_FaultStorageData_dfst.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(3)',    #INIT_GROUP4_Fault
    'CSEM_Fault_Qualified_NVM_Var4' => 'rb_csem_FaultStorageData_dfst.InfoClusterSMA_ast(0).InternalSensorFaultsQualified_aen(4)',    #INIT_GROUP5_Fault
    'CSEM_Fault_Qualified_NVM_Var5' => 'rb_csem_FaultStorageData_dfst.InfoClusterSMA_ast(0).CyclicfaultQualified_en',                 #RT_Cyclic_Fault
##########For Perm SMI Faults
    'CSEM_Fault_Qualified_NVM_Var6'  => 'rb_csem_FaultStorageData_dfst.InfoClusterSensorSMI_ast(0).InternalSensorFaultsQualified_en', #IMU1_Internal
    'CSEM_Fault_Qualified_NVM_Var7'  => 'rb_csem_FaultStorageData_dfst.InfoClusterSensorSMI_ast(0).BgSensorFaultsQualified_en',       #IMU1_BG
    'CSEM_Fault_Qualified_NVM_Var8'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(0)',     #IMU1_XLg
    'CSEM_Fault_Qualified_NVM_Var9'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(1)',     #IMU1_XHg
    'CSEM_Fault_Qualified_NVM_Var10' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(2)',     #IMU1_YLg
    'CSEM_Fault_Qualified_NVM_Var11' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(3)',     #IMU1_YHg
    'CSEM_Fault_Qualified_NVM_Var12' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(4)',     #IMU1_ZLg
    ####### 'CSEM_Fault_Qualified_NVM_Var13'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(5)',		#IMU1_ZHg (Not_Configured)
    'CSEM_Fault_Qualified_NVM_Var13' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(6)',     #IMU1_Rollrate
    'CSEM_Fault_Qualified_NVM_Var14' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(7)',     #IMU1_YawRate
    'CSEM_Fault_Qualified_NVM_Var15' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(8)',     #IMU1_PitchRate
    'CSEM_Fault_Qualified_NVM_Var16' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(9)',     #IMU1_Temperature
##########For Perm SMU Faults
    'CSEM_Fault_Qualified_NVM_Var17' => 'rb_csem_FaultStorageData_dfst.InfoClusterSensorSMI_ast(1).InternalSensorFaultsQualified_en', #IMU2_Internal
    'CSEM_Fault_Qualified_NVM_Var18' => 'rb_csem_FaultStorageData_dfst.InfoClusterSensorSMI_ast(1).BgSensorFaultsQualified_en',       #IMU2_BG
    'CSEM_Fault_Qualified_NVM_Var19' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(10)',    #IMU2_XLg
    ###### 'CSEM_Fault_Qualified_NVM_Var20'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(11)',		#IMU2_XHg (Not_Configured)
    'CSEM_Fault_Qualified_NVM_Var20' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(12)',    #IMU2_YLG
    ####### 'CSEM_Fault_Qualified_NVM_Var21'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(13)',	#IMU2_YHG (Not_Configured)
    'CSEM_Fault_Qualified_NVM_Var21' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(14)',    #IMU2_ZLg
    ####### 'CSEM_Fault_Qualified_NVM_Var22'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(15)',	#IMU2_ZHg (Not_Configured)
    'CSEM_Fault_Qualified_NVM_Var22' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(16)',    #IMU2_RollRate
    'CSEM_Fault_Qualified_NVM_Var23' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(17)',    #IMU2_Yawrate
    'CSEM_Fault_Qualified_NVM_Var24' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(18)',    #IMU2_Pitchrate
    'CSEM_Fault_Qualified_NVM_Var25' => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(0)(19)',    #IMU2_Temperature

##########For Temp SMI Faults
    # 'CSEM_Fault_Qualified_NVM_Var26'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(0)',				#IMU1_XLg
    # 'CSEM_Fault_Qualified_NVM_Var27'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(1)',				#IMU1_XHg
    # 'CSEM_Fault_Qualified_NVM_Var28'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(2)',				#IMU1_YLg
    # 'CSEM_Fault_Qualified_NVM_Var29'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(3)',				#IMU1_YHg
    # 'CSEM_Fault_Qualified_NVM_Var30'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(4)',				#IMU1_ZLg
    #######'CSEM_Fault_Qualified_NVM_Var31'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(5)',			#IMU1_ZHg (Not_Configured)
    # 'CSEM_Fault_Qualified_NVM_Var31'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(6)',				#IMU1_Rollrate
    # 'CSEM_Fault_Qualified_NVM_Var32'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(7)',				#IMU1_YawRate
    # 'CSEM_Fault_Qualified_NVM_Var33'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(8)',				#IMU1_PitchRate
    # 'CSEM_Fault_Qualified_NVM_Var34'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(9)',				#IMU1_Temperature
##########For Temp SMU Faults
    # 'CSEM_Fault_Qualified_NVM_Var35'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(10)',				#IMU2_XLg
    ####### 'CSEM_Fault_Qualified_NVM_Var36'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(11)',		#IMU2_XHg (Not_Configured)
    # 'CSEM_Fault_Qualified_NVM_Var36'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(12)',				#IMU2_YLG
    ####### 'CSEM_Fault_Qualified_NVM_Var37'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(13)',		#IMU2_YHG (Not_Configured)
    # 'CSEM_Fault_Qualified_NVM_Var37'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(14)',				#IMU2_ZLg
    ####### 'CSEM_Fault_Qualified_NVM_Var38'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(15)',		#IMU2_ZHg (Not_Configured)
    # 'CSEM_Fault_Qualified_NVM_Var38'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(16)',				#IMU2_RollRate
    # 'CSEM_Fault_Qualified_NVM_Var39'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(17)',				#IMU2_Yawrate
    # 'CSEM_Fault_Qualified_NVM_Var40'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(18)',				#IMU2_Pitchrate
    # 'CSEM_Fault_Qualified_NVM_Var41'  => 'rb_csem_FaultStorageData_dfst.InfoClusterChannelSMI_st.ChannelFaultQualified_aen(1)(19)',				#IMU2_Temperature

    #	NVM Copy of InitErrorData Flags to clear in finalization    #define same variables in SMU and SMA and for SMU index will change
    'Imu_InitErrorData_ClusterFlags' => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ClusterFlags_u16',
    'Imu_InitErrorData_ErrorFlags0'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(0)',
    'Imu_InitErrorData_ErrorFlags1'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(1)',
    'Imu_InitErrorData_ErrorFlags2'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(2)',
    'Imu_InitErrorData_ErrorFlags3'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(3)',
    'Imu_InitErrorData_ErrorFlags4'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(4)',
    'Imu_InitErrorData_ErrorFlags5'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(5)',
    'Imu_InitErrorData_ErrorFlags6'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(6)',
    'Imu_InitErrorData_ErrorFlags7'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(7)',
    'Imu_InitErrorData_ErrorFlags8'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(8)',
    'Imu_InitErrorData_ErrorFlags9'  => 'rb_csem_InitErrorData_dfst.InitErrorData_ast(0).ErrorFlags_au16(9)',

};

1;
