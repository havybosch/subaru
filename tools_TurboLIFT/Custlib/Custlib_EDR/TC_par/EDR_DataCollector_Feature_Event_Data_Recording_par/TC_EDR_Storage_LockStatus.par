# Parameter file  'TC_EDR_Storage_LockStatus.par'  generated by LPG Doors script V7.3 for SRTP
PROJECT_PARAMETER	= @()
THIS_CREATED		= '2016-12-09 14:50:20'
SRT_NAME		= 'AB12_TS_Feature_Event_Data_Recording'
SRT_PATH		= '/AB12_TR8/Software/SRTP'
SRT_TYPE		= 'TS'
SRT_DESCRIPTION	= 'Test Specification (QM relevant) for the Feature EDR'
SRT_RESPONSIBLE	= ''
SRT_VIEW		= 'Default view'
SRT_FILTER		= '<Filter is OFF>'
SRT_BL_USED		= '<No baseline yet for this SRT>'
SRT_BL_NUM		= ''
SRT_BL_SFX		= ''
SRT_BL_ANNOTATN	= ''
SRT_BL_DATE		= ''
SRT_LAST_MODIFIED	= '30 November 2016'
SRS_NAMES		= @( 'AB12_SYRS_Feature_Event_Data_Recording(3.52)', 'SRS_EDR_EDR_DataCollector(2.54)' )

[TC_EDR_Storage_LockStatus.Empty_Lock_Empty]   #ID: TS_EDR_806
CrashCode1 = 'Single_EDR_Front_NonInflatable;5'
CrashCode2 = ''
# From here on: applicable Lift Default Parameters
purpose		 = 'Verify lock status'
ResultDB = 'EDR'
UnlockAllRecords = 'false'
EraseAllRecords = 'true'
LockStatusVariable ='rb_dcc_HeaderPublic_dfst.RecordLockStatus_aen'
ExpectedLockStatus = %('Measurement_A' => 0, 'Measurement_B' => 3, 'Measurement_C' => 3, 'Measurement_D' => 0, 'Measurement_E' => 0)
# From here on: the connection to Doors
SRT_fullname 	= '/AB12_TR8/Software/SRTP/AB12_TS_Feature_Event_Data_Recording'
SRT_ID		= '806'
SRT_state	= 'not done'
SRT_asil	= 'QM'
SRT_automated	= 'automated'
SRT_linked_IDs	= @( '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID253)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID356)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID359)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID756)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID858)' )

[TC_EDR_Storage_LockStatus.Empty_NoLock_Empty]   #ID: TS_EDR_807
CrashCode1 = 'Single_EDR_Front_above_8kph_NoDeployment;5'
CrashCode2 = ''
ExpectedLockStatus = %('Measurement_A' => 0, 'Measurement_B' => 1, 'Measurement_C' => 1, 'Measurement_D' => 0, 'Measurement_E' => 0)
# From here on: applicable Lift Default Parameters
purpose		 = 'Verify lock status'
ResultDB = 'EDR'
UnlockAllRecords = 'false'
EraseAllRecords = 'true'
LockStatusVariable ='rb_dcc_HeaderPublic_dfst.RecordLockStatus_aen'
# From here on: the connection to Doors
SRT_fullname 	= '/AB12_TR8/Software/SRTP/AB12_TS_Feature_Event_Data_Recording'
SRT_ID		= '807'
SRT_state	= 'not done'
SRT_asil	= 'QM'
SRT_automated	= 'automated'
SRT_linked_IDs	= @( '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID253)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID356)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID357)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID756)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID858)' )

[TC_EDR_Storage_LockStatus.Empty_Lock_Unlock_Empty]   #ID: TS_EDR_808
CrashCode2 = ''
UnlockAllRecords = 'true' #not applicable if service is not configured
ExpectedLockStatus = %('Measurement_A' => 0, 'Measurement_B' => 3, 'Measurement_C' => 2, 'Measurement_D' => 0, 'Measurement_E' => 0)
# From here on: applicable Lift Default Parameters
purpose		 = 'Verify lock status'
ResultDB = 'EDR'
CrashCode1 = 'Single_EDR_Front_Inflatable;5'
EraseAllRecords = 'true'
LockStatusVariable ='rb_dcc_HeaderPublic_dfst.RecordLockStatus_aen'
# From here on: the connection to Doors
SRT_fullname 	= '/AB12_TR8/Software/SRTP/AB12_TS_Feature_Event_Data_Recording'
SRT_ID		= '808'
SRT_state	= 'not done'
SRT_asil	= 'QM'
SRT_automated	= 'automated'
SRT_linked_IDs	= @( '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID253)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID338)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID356)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID358)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID359)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID756)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID858)' )

[TC_EDR_Storage_LockStatus.Empty_Lock_Unlock_NoLock]   #ID: TS_EDR_809
CrashCode2 = 'Single_EDR_Front_above_8kph_NoDeployment;5'
UnlockAllRecords = 'true' #not applicable if service is not configured
EraseAllRecords = 'false'
ExpectedLockStatus = %('Measurement_A' => 0, 'Measurement_B' => 3, 'Measurement_C' => 2, 'Measurement_D' => 2, 'Measurement_E' => 1)
# From here on: applicable Lift Default Parameters
purpose		 = 'Verify lock status'
ResultDB = 'EDR'
CrashCode1 = 'Single_EDR_Front_Inflatable;5'
LockStatusVariable ='rb_dcc_HeaderPublic_dfst.RecordLockStatus_aen'
# From here on: the connection to Doors
SRT_fullname 	= '/AB12_TR8/Software/SRTP/AB12_TS_Feature_Event_Data_Recording'
SRT_ID		= '809'
SRT_state	= 'not done'
SRT_asil	= 'QM'
SRT_automated	= 'automated'
SRT_linked_IDs	= @( '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID253)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID338)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID356)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID357)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID358)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID359)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID756)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID858)' )

[TC_EDR_Storage_LockStatus.Empty_Lock_Unlock_Lock]   #ID: TS_EDR_810
CrashCode2 = 'Single_EDR_SideLeft_Inflatable;5'
UnlockAllRecords = 'true' #not applicable if service is not configured
EraseAllRecords = 'false'
ExpectedLockStatus = %('Measurement_A' => 0, 'Measurement_B' => 3, 'Measurement_C' => 2, 'Measurement_D' => 2, 'Measurement_E' => 3)
# From here on: applicable Lift Default Parameters
purpose		 = 'Verify lock status'
ResultDB = 'EDR'
CrashCode1 = 'Single_EDR_Front_Inflatable;5'
LockStatusVariable ='rb_dcc_HeaderPublic_dfst.RecordLockStatus_aen'
# From here on: the connection to Doors
SRT_fullname 	= '/AB12_TR8/Software/SRTP/AB12_TS_Feature_Event_Data_Recording'
SRT_ID		= '810'
SRT_state	= 'not done'
SRT_asil	= 'QM'
SRT_automated	= 'automated'
SRT_linked_IDs	= @( '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID253)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID338)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID356)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID358)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID359)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID756)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID858)' )

[TC_EDR_Storage_LockStatus.Empty_NoLock_Lock]   #ID: TS_EDR_811
CrashCode1 = 'Single_EDR_Front_above_8kph_NoDeployment;5'
CrashCode2 = 'Single_EDR_SideLeft_Inflatable;5'
UnlockAllRecords = 'false' #not applicable if service is not configured
EraseAllRecords = 'false'
ExpectedLockStatus = %('Measurement_A' => 0, 'Measurement_B' => 1, 'Measurement_C' => 1, 'Measurement_D' => 1, 'Measurement_E' => 3)
# From here on: applicable Lift Default Parameters
purpose		 = 'Verify lock status'
ResultDB = 'EDR'
LockStatusVariable ='rb_dcc_HeaderPublic_dfst.RecordLockStatus_aen'
# From here on: the connection to Doors
SRT_fullname 	= '/AB12_TR8/Software/SRTP/AB12_TS_Feature_Event_Data_Recording'
SRT_ID		= '811'
SRT_state	= 'not done'
SRT_asil	= 'QM'
SRT_automated	= 'automated'
SRT_linked_IDs	= @( '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID253)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID356)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID357)', '/AB12_TR8/Software/SRS/SRS_EDR_EDR_DataCollectorTR8 (ID359)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID756)', '/AB12_TR8/System/SYRS/AB12_SYRS_Feature_Event_Data_Recording (ID858)' )

